m4trace:/mingw/share/aclocal/inttypes-pri.m4:14: -1- AC_DEFUN([gt_INTTYPES_PRI], [
  AC_CHECK_HEADERS([inttypes.h])
  if test $ac_cv_header_inttypes_h = yes; then
    AC_CACHE_CHECK([whether the inttypes.h PRIxNN macros are broken],
      [gt_cv_inttypes_pri_broken],
      [
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM(
             [[
#include <inttypes.h>
#ifdef PRId32
char *p = PRId32;
#endif
             ]],
             [[]])],
          [gt_cv_inttypes_pri_broken=no],
          [gt_cv_inttypes_pri_broken=yes])
      ])
  fi
  if test "$gt_cv_inttypes_pri_broken" = yes; then
    AC_DEFINE_UNQUOTED([PRI_MACROS_BROKEN], [1],
      [Define if <inttypes.h> exists and defines unusable PRI* macros.])
    PRI_MACROS_BROKEN=1
  else
    PRI_MACROS_BROKEN=0
  fi
  AC_SUBST([PRI_MACROS_BROKEN])
])
m4trace:/mingw/share/aclocal-1.11/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.11'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.11.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/mingw/share/aclocal-1.11/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.11.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/mingw/share/aclocal-1.11/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [dnl Rely on autoconf to set up CDPATH properly.
AC_PREREQ([2.50])dnl
# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`
])
m4trace:/mingw/share/aclocal-1.11/cond.m4:15: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ(2.52)dnl
 ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/mingw/share/aclocal-1.11/depend.m4:28: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
       [$1], UPC,  [depcc="$UPC"  am_compiler_list=],
       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                   [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named `D' -- because `-MD' means `put the output
  # in D'.
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
      # Solaris 8's {/usr,}/bin/sh.
      touch sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with `-c' and `-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle `-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # after this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvisualcpp | msvcmsys)
      # This compiler won't grok `-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/mingw/share/aclocal-1.11/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/mingw/share/aclocal-1.11/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE(dependency-tracking,
[  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
])
m4trace:/mingw/share/aclocal-1.11/depout.m4:14: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/mingw/share/aclocal-1.11/depout.m4:75: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/mingw/share/aclocal-1.11/init.m4:26: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.62])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
AM_MISSING_PROG(AUTOCONF, autoconf)
AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
AM_MISSING_PROG(AUTOHEADER, autoheader)
AM_MISSING_PROG(MAKEINFO, makeinfo)
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AM_PROG_MKDIR_P])dnl
# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
dnl The `parallel-tests' driver may need to know about EXEEXT, so add the
dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
])
m4trace:/mingw/share/aclocal-1.11/init.m4:126: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/mingw/share/aclocal-1.11/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST(install_sh)])
m4trace:/mingw/share/aclocal-1.11/lead-dot.m4:12: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/mingw/share/aclocal-1.11/make.m4:14: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from `make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/mingw/share/aclocal-1.11/minuso.m4:14: -1- AC_DEFUN([AM_PROG_CC_C_O], [AC_REQUIRE([AC_PROG_CC_C_O])dnl
AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([compile])dnl
# FIXME: we rely on the cache variable name because
# there is no other way.
set dummy $CC
am_cc=`echo $[2] | sed ['s/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/']`
eval am_t=\$ac_cv_prog_cc_${am_cc}_c_o
if test "$am_t" != yes; then
   # Losing compiler, so override with the script.
   # FIXME: It is wrong to rewrite CC.
   # But if we don't then we get into trouble of one sort or another.
   # A longer-term fix would be to have automake use am__CC in this case,
   # and then we could set am__CC="\$(top_srcdir)/compile \$(CC)"
   CC="$am_aux_dir/compile $CC"
fi
dnl Make sure AC_PROG_CC is never called again, or it will override our
dnl setting of CC.
m4_define([AC_PROG_CC],
          [m4_fatal([AC_PROG_CC cannot be called after AM_PROG_CC_C_O])])
])
m4trace:/mingw/share/aclocal-1.11/missing.m4:14: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/mingw/share/aclocal-1.11/missing.m4:24: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  AC_MSG_WARN([`missing' script is too old or missing])
fi
])
m4trace:/mingw/share/aclocal-1.11/mkdirp.m4:11: -1- AC_DEFUN([AM_PROG_MKDIR_P], [AC_PREREQ([2.60])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
dnl while keeping a definition of mkdir_p for backward compatibility.
dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
dnl Makefile.ins that do not define MKDIR_P, so we do our own
dnl adjustment using top_builddir (which is defined more often than
dnl MKDIR_P).
AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
case $mkdir_p in
  [[\\/$]]* | ?:[[\\/]]*) ;;
  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
esac
])
m4trace:/mingw/share/aclocal-1.11/options.m4:13: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/mingw/share/aclocal-1.11/options.m4:19: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), 1)])
m4trace:/mingw/share/aclocal-1.11/options.m4:25: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/mingw/share/aclocal-1.11/options.m4:31: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/mingw/share/aclocal-1.11/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/mingw/share/aclocal-1.11/sanity.m4:14: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Just in case
sleep 1
echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT(yes)])
m4trace:/mingw/share/aclocal-1.11/silent.m4:14: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules],
[  --enable-silent-rules          less verbose build output (undo: `make V=1')
  --disable-silent-rules         verbose build output (undo: `make V=0')])
case $enable_silent_rules in
yes) AM_DEFAULT_VERBOSITY=0;;
no)  AM_DEFAULT_VERBOSITY=1;;
*)   AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/mingw/share/aclocal-1.11/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using `strip' when the user
# run `make install-strip'.  However `strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the `STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/mingw/share/aclocal-1.11/substnot.m4:14: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/mingw/share/aclocal-1.11/substnot.m4:19: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/mingw/share/aclocal-1.11/tar.m4:24: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.
AM_MISSING_PROG([AMTAR], [tar])
m4_if([$1], [v7],
     [am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'],
     [m4_case([$1], [ustar],, [pax],,
              [m4_fatal([Unknown tar format])])
AC_MSG_CHECKING([how to create a $1 tar archive])
# Loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
_am_tools=${am_cv_prog_tar_$1-$_am_tools}
# Do not fold the above two line into one, because Tru64 sh and
# Solaris sh will not grok spaces in the rhs of `-'.
for _am_tool in $_am_tools
do
  case $_am_tool in
  gnutar)
    for _am_tar in tar gnutar gtar;
    do
      AM_RUN_LOG([$_am_tar --version]) && break
    done
    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
    am__untar="$_am_tar -xf -"
    ;;
  plaintar)
    # Must skip GNU tar: if it does not support --format= it doesn't create
    # ustar tarball either.
    (tar --version) >/dev/null 2>&1 && continue
    am__tar='tar chf - "$$tardir"'
    am__tar_='tar chf - "$tardir"'
    am__untar='tar xf -'
    ;;
  pax)
    am__tar='pax -L -x $1 -w "$$tardir"'
    am__tar_='pax -L -x $1 -w "$tardir"'
    am__untar='pax -r'
    ;;
  cpio)
    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
    am__untar='cpio -i -H $1 -d'
    ;;
  none)
    am__tar=false
    am__tar_=false
    am__untar=false
    ;;
  esac

  # If the value was cached, stop now.  We just wanted to have am__tar
  # and am__untar set.
  test -n "${am_cv_prog_tar_$1}" && break

  # tar/untar a dummy directory, and stop if the command works
  rm -rf conftest.dir
  mkdir conftest.dir
  echo GrepMe > conftest.dir/file
  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
  rm -rf conftest.dir
  if test -s conftest.tar; then
    AM_RUN_LOG([$am__untar <conftest.tar])
    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
  fi
done
rm -rf conftest.dir

AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
AC_MSG_RESULT([$am_cv_prog_tar_$1])])
AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:m4/00gnulib.m4:46: -1- AC_DEFUN([gl_00GNULIB])
m4trace:m4/absolute-header.m4:22: -1- AC_DEFUN([gl_ABSOLUTE_HEADER], [AC_REQUIRE([AC_CANONICAL_HOST])
AC_LANG_PREPROC_REQUIRE()dnl
dnl FIXME: gl_absolute_header and ac_header_exists must be used unquoted
dnl until we can assume autoconf 2.64 or newer.
m4_foreach_w([gl_HEADER_NAME], [$1],
  [AS_VAR_PUSHDEF([gl_absolute_header],
                  [gl_cv_absolute_]m4_defn([gl_HEADER_NAME]))dnl
  AC_CACHE_CHECK([absolute name of <]m4_defn([gl_HEADER_NAME])[>],
    m4_defn([gl_absolute_header]),
    [AS_VAR_PUSHDEF([ac_header_exists],
                    [ac_cv_header_]m4_defn([gl_HEADER_NAME]))dnl
    AC_CHECK_HEADERS_ONCE(m4_defn([gl_HEADER_NAME]))dnl
    if test AS_VAR_GET(ac_header_exists) = yes; then
      gl_ABSOLUTE_HEADER_ONE(m4_defn([gl_HEADER_NAME]))
    fi
    AS_VAR_POPDEF([ac_header_exists])dnl
    ])dnl
  AC_DEFINE_UNQUOTED(AS_TR_CPP([ABSOLUTE_]m4_defn([gl_HEADER_NAME])),
                     ["AS_VAR_GET(gl_absolute_header)"],
                     [Define this to an absolute name of <]m4_defn([gl_HEADER_NAME])[>.])
  AS_VAR_POPDEF([gl_absolute_header])dnl
])dnl
])
m4trace:m4/absolute-header.m4:54: -1- AC_DEFUN([gl_ABSOLUTE_HEADER_ONE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_LANG_CONFTEST([AC_LANG_SOURCE([[#include <]]m4_dquote([$1])[[>]])])
  dnl AIX "xlc -E" and "cc -E" omit #line directives for header files
  dnl that contain only a #include of other header files and no
  dnl non-comment tokens of their own. This leads to a failure to
  dnl detect the absolute name of <dirent.h>, <signal.h>, <poll.h>
  dnl and others. The workaround is to force preservation of comments
  dnl through option -C. This ensures all necessary #line directives
  dnl are present. GCC supports option -C as well.
  case "$host_os" in
    aix*) gl_absname_cpp="$ac_cpp -C" ;;
    *)    gl_absname_cpp="$ac_cpp" ;;
  esac
changequote(,)
  case "$host_os" in
    mingw*)
      dnl For the sake of native Windows compilers (excluding gcc),
      dnl treat backslash as a directory separator, like /.
      dnl Actually, these compilers use a double-backslash as
      dnl directory separator, inside the
      dnl   # line "filename"
      dnl directives.
      gl_dirsep_regex='[/\\]'
      ;;
    *)
      gl_dirsep_regex='\/'
      ;;
  esac
  dnl A sed expression that turns a string into a basic regular
  dnl expression, for use within "/.../".
  gl_make_literal_regex_sed='s,[]$^\\.*/[],\\&,g'
  gl_header_literal_regex=`echo '$1' \
                           | sed -e "$gl_make_literal_regex_sed"`
  gl_absolute_header_sed="/${gl_dirsep_regex}${gl_header_literal_regex}/"'{
      s/.*"\(.*'"${gl_dirsep_regex}${gl_header_literal_regex}"'\)".*/\1/
      s|^/[^/]|//&|
      p
      q
    }'
changequote([,])
  dnl eval is necessary to expand gl_absname_cpp.
  dnl Ultrix and Pyramid sh refuse to redirect output of eval,
  dnl so use subshell.
  AS_VAR_SET([gl_cv_absolute_]AS_TR_SH([[$1]]),
[`(eval "$gl_absname_cpp conftest.$ac_ext") 2>&AS_MESSAGE_LOG_FD |
  sed -n "$gl_absolute_header_sed"`])
])
m4trace:m4/acl.m4:11: -1- AC_DEFUN([gl_FUNC_ACL], [
  AC_ARG_ENABLE([acl],
    AS_HELP_STRING([--disable-acl], [do not support ACLs]),
    , [enable_acl=auto])

  AC_CHECK_FUNCS_ONCE([fchmod])
  LIB_ACL=
  use_acl=0
  if test "x$enable_acl" != "xno"; then
    dnl On all platforms, the ACL related API is declared in <sys/acl.h>.
    AC_CHECK_HEADERS([sys/acl.h])
    if test $ac_cv_header_sys_acl_h = yes; then
      ac_save_LIBS=$LIBS

      dnl Test for POSIX-draft-like API (Linux, FreeBSD, Mac OS X, IRIX, Tru64).
      dnl -lacl is needed on Linux, -lpacl is needed on OSF/1.
      if test $use_acl = 0; then
        AC_SEARCH_LIBS([acl_get_file], [acl pacl],
          [if test "$ac_cv_search_acl_get_file" != "none required"; then
             LIB_ACL=$ac_cv_search_acl_get_file
           fi
           AC_CHECK_FUNCS(
             [acl_get_file acl_get_fd acl_set_file acl_set_fd \
              acl_free acl_from_mode acl_from_text \
              acl_delete_def_file acl_extended_file \
              acl_delete_fd_np acl_delete_file_np \
              acl_copy_ext_native acl_create_entry_np \
              acl_to_short_text acl_free_text])
           # If the acl_get_file bug is detected, don't enable the ACL support.
           gl_ACL_GET_FILE([use_acl=1], [])
           if test $use_acl = 1; then
             dnl On Linux, additional API is declared in <acl/libacl.h>.
             AC_CHECK_HEADERS([acl/libacl.h])
             AC_REPLACE_FUNCS([acl_entries])
             AC_CACHE_CHECK([for ACL_FIRST_ENTRY],
               [gl_cv_acl_ACL_FIRST_ENTRY],
               [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
[[#include <sys/types.h>
#include <sys/acl.h>
int type = ACL_FIRST_ENTRY;]])],
                  [gl_cv_acl_ACL_FIRST_ENTRY=yes],
                  [gl_cv_acl_ACL_FIRST_ENTRY=no])])
             if test $gl_cv_acl_ACL_FIRST_ENTRY = yes; then
               AC_DEFINE([HAVE_ACL_FIRST_ENTRY], [1],
                 [Define to 1 if the constant ACL_FIRST_ENTRY exists.])
             fi
             dnl On Mac OS X, other types of ACLs are supported.
             AC_CACHE_CHECK([for ACL_TYPE_EXTENDED],
               [gl_cv_acl_ACL_TYPE_EXTENDED],
               [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
[[#include <sys/types.h>
#include <sys/acl.h>
int type = ACL_TYPE_EXTENDED;]])],
                  [gl_cv_acl_ACL_TYPE_EXTENDED=yes],
                  [gl_cv_acl_ACL_TYPE_EXTENDED=no])])
             if test $gl_cv_acl_ACL_TYPE_EXTENDED = yes; then
               AC_DEFINE([HAVE_ACL_TYPE_EXTENDED], [1],
                 [Define to 1 if the ACL type ACL_TYPE_EXTENDED exists.])
             fi
           else
             LIB_ACL=
           fi
          ])
      fi

      dnl Test for Solaris API (Solaris, Cygwin).
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([facl])
        if test $ac_cv_func_facl = yes; then
          AC_SEARCH_LIBS([acl_trivial], [sec],
            [if test "$ac_cv_search_acl_trivial" != "none required"; then
               LIB_ACL=$ac_cv_search_acl_trivial
             fi
            ])
          AC_CHECK_FUNCS([acl_trivial])
          use_acl=1
        fi
      fi

      dnl Test for HP-UX API.
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([getacl])
        if test $ac_cv_func_getacl = yes; then
          use_acl=1
        fi
        dnl Test for HP-UX 11.11 API.
        AC_CHECK_HEADERS([aclv.h], [], [], [#include <sys/types.h>])
      fi

      dnl Test for AIX API (AIX 5.3 or newer).
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([aclx_get])
        if test $ac_cv_func_aclx_get = yes; then
          use_acl=1
        fi
      fi

      dnl Test for older AIX API.
      if test $use_acl = 0 || test "$ac_cv_func_aclx_get" = yes; then
        AC_CHECK_FUNCS([statacl])
        if test $ac_cv_func_statacl = yes; then
          use_acl=1
        fi
      fi

      dnl Test for NonStop Kernel API.
      if test $use_acl = 0; then
        AC_CHECK_FUNCS([aclsort])
        if test $ac_cv_func_aclsort = yes; then
          use_acl=1
        fi
      fi

      LIBS=$ac_save_LIBS
    fi
    if test "x$enable_acl$use_acl" = "xyes0"; then
      AC_MSG_ERROR([ACLs enabled but support not detected])
    elif test "x$enable_acl$use_acl" = "xauto0"; then
      AC_MSG_WARN([libacl development library was not found or not usable.])
      AC_MSG_WARN([AC_PACKAGE_NAME will be built without ACL support.])
    fi
  fi
  AC_SUBST([LIB_ACL])
  AC_DEFINE_UNQUOTED([USE_ACL], [$use_acl],
    [Define to nonzero if you want access control list support.])
  USE_ACL=$use_acl
  AC_SUBST([USE_ACL])
])
m4trace:m4/acl.m4:148: -1- AC_DEFUN([gl_ACL_GET_FILE], [
  AC_CACHE_CHECK([for working acl_get_file], [gl_cv_func_working_acl_get_file],
    [gl_cv_func_working_acl_get_file=no
     AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>
           #include <sys/acl.h>
           #include <errno.h>
          ]],
          [[if (!acl_get_file (".", ACL_TYPE_ACCESS) && errno == ENOENT)
              return 1;
            return 0;
          ]])],
       [if test $cross_compiling = yes; then
          gl_cv_func_working_acl_get_file="guessing yes"
        elif ./conftest$ac_exeext; then
          gl_cv_func_working_acl_get_file=yes
        fi])])
  AS_IF([test "$gl_cv_func_working_acl_get_file" != no], [$1], [$2])
])
m4trace:m4/alloca.m4:8: -1- AC_DEFUN([gl_FUNC_ALLOCA], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  if test $ac_cv_func_alloca_works = no; then
    gl_PREREQ_ALLOCA
  fi

  # Define an additional variable used in the Makefile substitution.
  if test $ac_cv_working_alloca_h = yes; then
    AC_CACHE_CHECK([for alloca as a compiler built-in], [gl_cv_rpl_alloca], [
      AC_EGREP_CPP([Need own alloca], [
#if defined __GNUC__ || defined _AIX || defined _MSC_VER
        Need own alloca
#endif
        ], [gl_cv_rpl_alloca=yes], [gl_cv_rpl_alloca=no])
    ])
    if test $gl_cv_rpl_alloca = yes; then
      dnl OK, alloca can be implemented through a compiler built-in.
      AC_DEFINE([HAVE_ALLOCA], [1],
        [Define to 1 if you have 'alloca' after including <alloca.h>,
         a header that may be supplied by this distribution.])
      ALLOCA_H=alloca.h
    else
      dnl alloca exists as a library function, i.e. it is slow and probably
      dnl a memory leak. Don't define HAVE_ALLOCA in this case.
      ALLOCA_H=
    fi
  else
    ALLOCA_H=alloca.h
  fi
  AC_SUBST([ALLOCA_H])
  AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])
])
m4trace:m4/alloca.m4:44: -1- AC_DEFUN([gl_PREREQ_ALLOCA], [:])
m4trace:m4/byteswap.m4:9: -1- AC_DEFUN([gl_BYTESWAP], [
  dnl Prerequisites of lib/byteswap.in.h.
  AC_CHECK_HEADERS([byteswap.h], [
    BYTESWAP_H=''
  ], [
    BYTESWAP_H='byteswap.h'
  ])
  AC_SUBST([BYTESWAP_H])
  AM_CONDITIONAL([GL_GENERATE_BYTESWAP_H], [test -n "$BYTESWAP_H"])
])
m4trace:m4/c-strtod.m4:10: -1- AC_DEFUN([gl_C99_STRTOLD], [
  AC_CACHE_CHECK([whether strtold conforms to C99],
    [gl_cv_func_c99_strtold],
    [AC_LINK_IFELSE(
       [AC_LANG_PROGRAM(
          [[/* On HP-UX before 11.23, strtold returns a struct instead of
                long double.  Reject implementations like that, by requiring
                compatibility with the C99 prototype.  */
             #include <stdlib.h>
             static long double (*p) (char const *, char **) = strtold;
             static long double
             test (char const *nptr, char **endptr)
             {
               long double r;
               r = strtold (nptr, endptr);
               return r;
             }]],
           [[return test ("1.0", NULL) != 1 || p ("1.0", NULL) != 1;]])],
       [gl_cv_func_c99_strtold=yes],
       [gl_cv_func_c99_strtold=no])])
  if test $gl_cv_func_c99_strtold = yes; then
    AC_DEFINE([HAVE_C99_STRTOLD], [1], [Define to 1 if strtold conforms to C99.])
  fi
])
m4trace:m4/c-strtod.m4:37: -1- AC_DEFUN([gl_C_STRTOD], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS([strtod_l])
])
m4trace:m4/c-strtod.m4:44: -1- AC_DEFUN([gl_C_STRTOLD], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_C99_STRTOLD])
  AC_CHECK_FUNCS([strtold_l])
])
m4trace:m4/clock_time.m4:12: -1- AC_DEFUN([gl_CLOCK_TIME], [
  dnl Persuade glibc and Solaris <time.h> to declare these functions.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  # Solaris 2.5.1 needs -lposix4 to get the clock_gettime function.
  # Solaris 7 prefers the library name -lrt to the obsolescent name -lposix4.

  # Save and restore LIBS so e.g., -lrt, isn't added to it.  Otherwise, *all*
  # programs in the package would end up linked with that potentially-shared
  # library, inducing unnecessary run-time overhead.
  LIB_CLOCK_GETTIME=
  AC_SUBST([LIB_CLOCK_GETTIME])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([clock_gettime], [rt posix4],
                   [test "$ac_cv_search_clock_gettime" = "none required" ||
                    LIB_CLOCK_GETTIME=$ac_cv_search_clock_gettime])
    AC_CHECK_FUNCS([clock_gettime clock_settime])
  LIBS=$gl_saved_libs
])
m4trace:m4/close-stream.m4:8: -1- AC_DEFUN([gl_CLOSE_STREAM], [
  :
])
m4trace:m4/count-one-bits.m4:7: -1- AC_DEFUN([gl_COUNT_ONE_BITS], [
  dnl We don't need (and can't compile) count_one_bits_ll
  dnl unless the type 'unsigned long long int' exists.
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])
])
m4trace:m4/count-trailing-zeros.m4:7: -1- AC_DEFUN([gl_COUNT_TRAILING_ZEROS], [
  dnl We don't need (and can't compile) count_trailing_zeros_ll
  dnl unless the type 'unsigned long long int' exists.
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])
])
m4trace:m4/dirent_h.m4:9: -1- AC_DEFUN([gl_DIRENT_H], [
  dnl Use AC_REQUIRE here, so that the default behavior below is expanded
  dnl once only, before all statements that occur in other macros.
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])

  dnl <dirent.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([dirent.h])
  if test $ac_cv_header_dirent_h = yes; then
    HAVE_DIRENT_H=1
  else
    HAVE_DIRENT_H=0
  fi
  AC_SUBST([HAVE_DIRENT_H])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <dirent.h>
    ]], [alphasort closedir dirfd fdopendir opendir readdir rewinddir scandir])
])
m4trace:m4/dirent_h.m4:30: -1- AC_DEFUN([gl_DIRENT_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/dirent_h.m4:39: -1- AC_DEFUN([gl_DIRENT_H_DEFAULTS], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS]) dnl for REPLACE_FCHDIR
  GNULIB_OPENDIR=0;     AC_SUBST([GNULIB_OPENDIR])
  GNULIB_READDIR=0;     AC_SUBST([GNULIB_READDIR])
  GNULIB_REWINDDIR=0;   AC_SUBST([GNULIB_REWINDDIR])
  GNULIB_CLOSEDIR=0;    AC_SUBST([GNULIB_CLOSEDIR])
  GNULIB_DIRFD=0;       AC_SUBST([GNULIB_DIRFD])
  GNULIB_FDOPENDIR=0;   AC_SUBST([GNULIB_FDOPENDIR])
  GNULIB_SCANDIR=0;     AC_SUBST([GNULIB_SCANDIR])
  GNULIB_ALPHASORT=0;   AC_SUBST([GNULIB_ALPHASORT])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_OPENDIR=1;       AC_SUBST([HAVE_OPENDIR])
  HAVE_READDIR=1;       AC_SUBST([HAVE_READDIR])
  HAVE_REWINDDIR=1;     AC_SUBST([HAVE_REWINDDIR])
  HAVE_CLOSEDIR=1;      AC_SUBST([HAVE_CLOSEDIR])
  HAVE_DECL_DIRFD=1;    AC_SUBST([HAVE_DECL_DIRFD])
  HAVE_DECL_FDOPENDIR=1;AC_SUBST([HAVE_DECL_FDOPENDIR])
  HAVE_FDOPENDIR=1;     AC_SUBST([HAVE_FDOPENDIR])
  HAVE_SCANDIR=1;       AC_SUBST([HAVE_SCANDIR])
  HAVE_ALPHASORT=1;     AC_SUBST([HAVE_ALPHASORT])
  REPLACE_OPENDIR=0;    AC_SUBST([REPLACE_OPENDIR])
  REPLACE_CLOSEDIR=0;   AC_SUBST([REPLACE_CLOSEDIR])
  REPLACE_DIRFD=0;      AC_SUBST([REPLACE_DIRFD])
  REPLACE_FDOPENDIR=0;  AC_SUBST([REPLACE_FDOPENDIR])
])
m4trace:m4/dup2.m4:7: -1- AC_DEFUN([gl_FUNC_DUP2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  m4_ifdef([gl_FUNC_DUP2_OBSOLETE], [
    AC_CHECK_FUNCS_ONCE([dup2])
    if test $ac_cv_func_dup2 = no; then
      HAVE_DUP2=0
    fi
  ], [
    AC_DEFINE([HAVE_DUP2], [1], [Define to 1 if you have the 'dup2' function.])
  ])
  if test $HAVE_DUP2 = 1; then
    AC_CACHE_CHECK([whether dup2 works], [gl_cv_func_dup2_works],
      [AC_RUN_IFELSE([
         AC_LANG_PROGRAM([[#include <unistd.h>
#include <fcntl.h>
#include <errno.h>]],
           [int result = 0;
#ifdef FD_CLOEXEC
            if (fcntl (1, F_SETFD, FD_CLOEXEC) == -1)
              result |= 1;
#endif
            if (dup2 (1, 1) == 0)
              result |= 2;
#ifdef FD_CLOEXEC
            if (fcntl (1, F_GETFD) != FD_CLOEXEC)
              result |= 4;
#endif
            close (0);
            if (dup2 (0, 0) != -1)
              result |= 8;
            /* Many gnulib modules require POSIX conformance of EBADF.  */
            if (dup2 (2, 1000000) == -1 && errno != EBADF)
              result |= 16;
            /* Flush out some cygwin core dumps.  */
            if (dup2 (2, -1) != -1 || errno != EBADF)
              result |= 32;
            dup2 (2, 255);
            dup2 (2, 256);
            return result;
           ])
        ],
        [gl_cv_func_dup2_works=yes], [gl_cv_func_dup2_works=no],
        [case "$host_os" in
           mingw*) # on this platform, dup2 always returns 0 for success
             gl_cv_func_dup2_works="guessing no" ;;
           cygwin*) # on cygwin 1.5.x, dup2(1,1) returns 0
             gl_cv_func_dup2_works="guessing no" ;;
           linux*) # On linux between 2008-07-27 and 2009-05-11, dup2 of a
                   # closed fd may yield -EBADF instead of -1 / errno=EBADF.
             gl_cv_func_dup2_works="guessing no" ;;
           freebsd*) # on FreeBSD 6.1, dup2(1,1000000) gives EMFILE, not EBADF.
             gl_cv_func_dup2_works="guessing no" ;;
           haiku*) # on Haiku alpha 2, dup2(1, 1) resets FD_CLOEXEC.
             gl_cv_func_dup2_works="guessing no" ;;
           *) gl_cv_func_dup2_works="guessing yes" ;;
         esac])
      ])
    case "$gl_cv_func_dup2_works" in
      *yes) ;;
      *)
        REPLACE_DUP2=1
        AC_CHECK_FUNCS([setdtablesize])
        ;;
    esac
  fi
  dnl Replace dup2() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      if test $HAVE_DUP2 = 1; then
        REPLACE_DUP2=1
      fi
    fi
  ])
])
m4trace:m4/dup2.m4:87: -1- AC_DEFUN([gl_PREREQ_DUP2], [])
m4trace:m4/environ.m4:7: -1- AC_DEFUN_ONCE([gl_ENVIRON], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  dnl Persuade glibc <unistd.h> to declare environ.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_HEADERS_ONCE([unistd.h])
  gt_CHECK_VAR_DECL(
    [#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ],
    [environ])
  if test $gt_cv_var_environ_declaration != yes; then
    HAVE_DECL_ENVIRON=0
  fi
])
m4trace:m4/environ.m4:29: -1- AC_DEFUN([gt_CHECK_VAR_DECL], [
  define([gt_cv_var], [gt_cv_var_]$2[_declaration])
  AC_MSG_CHECKING([if $2 is properly declared])
  AC_CACHE_VAL([gt_cv_var], [
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
         [[$1
           extern struct { int foo; } $2;]],
         [[$2.foo = 1;]])],
      [gt_cv_var=no],
      [gt_cv_var=yes])])
  AC_MSG_RESULT([$gt_cv_var])
  if test $gt_cv_var = yes; then
    AC_DEFINE([HAVE_]m4_translit($2, [a-z], [A-Z])[_DECL], 1,
              [Define if you have the declaration of $2.])
  fi
  undefine([gt_cv_var])
])
m4trace:m4/errno_h.m4:7: -1- AC_DEFUN_ONCE([gl_HEADER_ERRNO_H], [
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for complete errno.h], [gl_cv_header_errno_h_complete], [
    AC_EGREP_CPP([booboo],[
#include <errno.h>
#if !defined ETXTBSY
booboo
#endif
#if !defined ENOMSG
booboo
#endif
#if !defined EIDRM
booboo
#endif
#if !defined ENOLINK
booboo
#endif
#if !defined EPROTO
booboo
#endif
#if !defined EMULTIHOP
booboo
#endif
#if !defined EBADMSG
booboo
#endif
#if !defined EOVERFLOW
booboo
#endif
#if !defined ENOTSUP
booboo
#endif
#if !defined ENETRESET
booboo
#endif
#if !defined ECONNABORTED
booboo
#endif
#if !defined ESTALE
booboo
#endif
#if !defined EDQUOT
booboo
#endif
#if !defined ECANCELED
booboo
#endif
#if !defined EOWNERDEAD
booboo
#endif
#if !defined ENOTRECOVERABLE
booboo
#endif
#if !defined EILSEQ
booboo
#endif
      ],
      [gl_cv_header_errno_h_complete=no],
      [gl_cv_header_errno_h_complete=yes])
  ])
  if test $gl_cv_header_errno_h_complete = yes; then
    ERRNO_H=''
  else
    gl_NEXT_HEADERS([errno.h])
    ERRNO_H='errno.h'
  fi
  AC_SUBST([ERRNO_H])
  AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [test -n "$ERRNO_H"])
  gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
  gl_REPLACE_ERRNO_VALUE([ENOLINK])
  gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
])
m4trace:m4/errno_h.m4:87: -1- AC_DEFUN([gl_REPLACE_ERRNO_VALUE], [
  if test -n "$ERRNO_H"; then
    AC_CACHE_CHECK([for ]$1[ value], [gl_cv_header_errno_h_]$1, [
      AC_EGREP_CPP([yes],[
#include <errno.h>
#ifdef ]$1[
yes
#endif
      ],
      [gl_cv_header_errno_h_]$1[=yes],
      [gl_cv_header_errno_h_]$1[=no])
      if test $gl_cv_header_errno_h_]$1[ = no; then
        AC_EGREP_CPP([yes],[
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
#ifdef ]$1[
yes
#endif
          ], [gl_cv_header_errno_h_]$1[=hidden])
        if test $gl_cv_header_errno_h_]$1[ = hidden; then
          dnl The macro exists but is hidden.
          dnl Define it to the same value.
          AC_COMPUTE_INT([gl_cv_header_errno_h_]$1, $1, [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
        fi
      fi
    ])
    case $gl_cv_header_errno_h_$1 in
      yes | no)
        $1_HIDDEN=0; $1_VALUE=
        ;;
      *)
        $1_HIDDEN=1; $1_VALUE="$gl_cv_header_errno_h_$1"
        ;;
    esac
    AC_SUBST($1[_HIDDEN])
    AC_SUBST($1[_VALUE])
  fi
])
m4trace:m4/euidaccess.m4:7: -1- AC_DEFUN([gl_FUNC_NONREENTRANT_EUIDACCESS], [
  AC_REQUIRE([gl_FUNC_EUIDACCESS])
  AC_CHECK_DECLS([setregid])
  AC_DEFINE([PREFER_NONREENTRANT_EUIDACCESS], [1],
    [Define this if you prefer euidaccess to return the correct result
     even if this would make it nonreentrant.  Define this only if your
     entire application is safe even if the uid or gid might temporarily
     change.  If your application uses signal handlers or threads it
     is probably not safe.])
])
m4trace:m4/euidaccess.m4:19: -1- AC_DEFUN([gl_FUNC_EUIDACCESS], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare euidaccess().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS([euidaccess])
  if test $ac_cv_func_euidaccess = no; then
    HAVE_EUIDACCESS=0
  fi
])
m4trace:m4/euidaccess.m4:33: -1- AC_DEFUN([gl_PREREQ_EUIDACCESS], [
  dnl Prefer POSIX faccessat over non-standard euidaccess.
  AC_CHECK_FUNCS_ONCE([faccessat])
  dnl Try various other non-standard fallbacks.
  AC_CHECK_HEADERS([libgen.h])
  AC_FUNC_GETGROUPS

  # Solaris 9 and 10 need -lgen to get the eaccess function.
  # Save and restore LIBS so -lgen isn't added to it.  Otherwise, *all*
  # programs in the package would end up linked with that potentially-shared
  # library, inducing unnecessary run-time overhead.
  LIB_EACCESS=
  AC_SUBST([LIB_EACCESS])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([eaccess], [gen],
                   [test "$ac_cv_search_eaccess" = "none required" ||
                    LIB_EACCESS=$ac_cv_search_eaccess])
    AC_CHECK_FUNCS([eaccess])
  LIBS=$gl_saved_libs
])
m4trace:m4/execinfo.m4:8: -1- AC_DEFUN([gl_EXECINFO_H], [
  AC_CHECK_HEADERS_ONCE([execinfo.h])

  LIB_EXECINFO=''
  EXECINFO_H='execinfo.h'

  if test $ac_cv_header_execinfo_h = yes; then
    gl_saved_libs=$LIBS
      AC_SEARCH_LIBS([backtrace_symbols_fd], [execinfo],
        [test "$ac_cv_search_backtrace_symbols_fd" = "none required" ||
         LIB_EXECINFO=$ac_cv_search_backtrace_symbols_fd])
    LIBS=$gl_saved_libs
    test "$ac_cv_search_backtrace_symbols_fd" = no || EXECINFO_H=''
  fi

  if test -n "$EXECINFO_H"; then
    AC_LIBOBJ([execinfo])
  fi

  AC_SUBST([EXECINFO_H])
  AC_SUBST([LIB_EXECINFO])
  AM_CONDITIONAL([GL_GENERATE_EXECINFO_H], [test -n "$EXECINFO_H"])
])
m4trace:m4/extensions.m4:38: -1- AC_DEFUN_ONCE([AC_USE_SYSTEM_EXTENSIONS], [AC_BEFORE([$0], [AC_COMPILE_IFELSE])dnl
AC_BEFORE([$0], [AC_RUN_IFELSE])dnl

  AC_CHECK_HEADER([minix/config.h], [MINIX=yes], [MINIX=])
  if test "$MINIX" = yes; then
    AC_DEFINE([_POSIX_SOURCE], [1],
      [Define to 1 if you need to in order for 'stat' and other
       things to work.])
    AC_DEFINE([_POSIX_1_SOURCE], [2],
      [Define to 2 if the system does not provide POSIX.1 features
       except with this defined.])
    AC_DEFINE([_MINIX], [1],
      [Define to 1 if on MINIX.])
    AC_DEFINE([_NETBSD_SOURCE], [1],
      [Define to 1 to make NetBSD features available.  MINIX 3 needs this.])
  fi

dnl Use a different key than __EXTENSIONS__, as that name broke existing
dnl configure.ac when using autoheader 2.62.
  AH_VERBATIM([USE_SYSTEM_EXTENSIONS],
[/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable general extensions on OS X.  */
#ifndef _DARWIN_C_SOURCE
# undef _DARWIN_C_SOURCE
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable X/Open extensions if necessary.  HP-UX 11.11 defines
   mbstate_t only if _XOPEN_SOURCE is defined to 500, regardless of
   whether compiling with -Ae or -D_HPUX_SOURCE=1.  */
#ifndef _XOPEN_SOURCE
# undef _XOPEN_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif
])
  AC_CACHE_CHECK([whether it is safe to define __EXTENSIONS__],
    [ac_cv_safe_to_define___extensions__],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[
#         define __EXTENSIONS__ 1
          ]AC_INCLUDES_DEFAULT])],
       [ac_cv_safe_to_define___extensions__=yes],
       [ac_cv_safe_to_define___extensions__=no])])
  test $ac_cv_safe_to_define___extensions__ = yes &&
    AC_DEFINE([__EXTENSIONS__])
  AC_DEFINE([_ALL_SOURCE])
  AC_DEFINE([_DARWIN_C_SOURCE])
  AC_DEFINE([_GNU_SOURCE])
  AC_DEFINE([_POSIX_PTHREAD_SEMANTICS])
  AC_DEFINE([_TANDEM_SOURCE])
  AC_CACHE_CHECK([whether _XOPEN_SOURCE should be defined],
    [ac_cv_should_define__xopen_source],
    [ac_cv_should_define__xopen_source=no
     AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[
          #include <wchar.h>
          mbstate_t x;]])],
       [],
       [AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM([[
             #define _XOPEN_SOURCE 500
             #include <wchar.h>
             mbstate_t x;]])],
          [ac_cv_should_define__xopen_source=yes])])])
  test $ac_cv_should_define__xopen_source = yes &&
    AC_DEFINE([_XOPEN_SOURCE], [500])
])
m4trace:m4/extensions.m4:127: -1- AC_DEFUN_ONCE([gl_USE_SYSTEM_EXTENSIONS], [
  dnl Require this macro before AC_USE_SYSTEM_EXTENSIONS.
  dnl gnulib does not need it. But if it gets required by third-party macros
  dnl after AC_USE_SYSTEM_EXTENSIONS is required, autoconf 2.62..2.63 emit a
  dnl warning: "AC_COMPILE_IFELSE was called before AC_USE_SYSTEM_EXTENSIONS".
  dnl Note: We can do this only for one of the macros AC_AIX, AC_GNU_SOURCE,
  dnl AC_MINIX. If people still use AC_AIX or AC_MINIX, they are out of luck.
  AC_REQUIRE([AC_GNU_SOURCE])

  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
])
m4trace:m4/extern-inline.m4:8: -1- AC_DEFUN([gl_EXTERN_INLINE], [
  AH_VERBATIM([extern_inline],
[/* Please see the Gnulib manual for how to use these macros.

   Suppress extern inline with HP-UX cc, as it appears to be broken; see
   <http://lists.gnu.org/archive/html/bug-texinfo/2013-02/msg00030.html>.

   Suppress extern inline with Sun C in standards-conformance mode, as it
   mishandles inline functions that call each other.  E.g., for 'inline void f
   (void) { } inline void g (void) { f (); }', c99 incorrectly complains
   'reference to static identifier "f" in extern inline function'.
   This bug was observed with Sun C 5.12 SunOS_i386 2011/11/16.

   Suppress the use of extern inline on problematic Apple configurations.
   OS X 10.8 and earlier mishandle it; see, e.g.,
   <http://lists.gnu.org/archive/html/bug-gnulib/2012-12/msg00023.html>.
   OS X 10.9 has a macro __header_inline indicating the bug is fixed for C and
   for clang but remains for g++; see <http://trac.macports.org/ticket/41033>.
   Perhaps Apple will fix this some day.  */
#if (defined __APPLE__ \
     && (defined __header_inline \
         ? (defined __cplusplus && defined __GNUC_STDC_INLINE__ \
            && ! defined __clang__) \
         : ((! defined _DONT_USE_CTYPE_INLINE_ \
             && (defined __GNUC__ || defined __cplusplus)) \
            || (defined _FORTIFY_SOURCE && 0 < _FORTIFY_SOURCE \
                && defined __GNUC__ && ! defined __cplusplus))))
# define _GL_EXTERN_INLINE_APPLE_BUG
#endif
#if ((__GNUC__ \
      ? defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__ \
      : (199901L <= __STDC_VERSION__ \
         && !defined __HP_cc \
         && !(defined __SUNPRO_C && __STDC__))) \
     && !defined _GL_EXTERN_INLINE_APPLE_BUG)
# define _GL_INLINE inline
# define _GL_EXTERN_INLINE extern inline
# define _GL_EXTERN_INLINE_IN_USE
#elif (2 < __GNUC__ + (7 <= __GNUC_MINOR__) && !defined __STRICT_ANSI__ \
       && !defined _GL_EXTERN_INLINE_APPLE_BUG)
# if defined __GNUC_GNU_INLINE__ && __GNUC_GNU_INLINE__
   /* __gnu_inline__ suppresses a GCC 4.2 diagnostic.  */
#  define _GL_INLINE extern inline __attribute__ ((__gnu_inline__))
# else
#  define _GL_INLINE extern inline
# endif
# define _GL_EXTERN_INLINE extern
# define _GL_EXTERN_INLINE_IN_USE
#else
# define _GL_INLINE static _GL_UNUSED
# define _GL_EXTERN_INLINE static _GL_UNUSED
#endif

#if 4 < __GNUC__ + (6 <= __GNUC_MINOR__)
# if defined __GNUC_STDC_INLINE__ && __GNUC_STDC_INLINE__
#  define _GL_INLINE_HEADER_CONST_PRAGMA
# else
#  define _GL_INLINE_HEADER_CONST_PRAGMA \
     _Pragma ("GCC diagnostic ignored \"-Wsuggest-attribute=const\"")
# endif
  /* Suppress GCC's bogus "no previous prototype for 'FOO'"
     and "no previous declaration for 'FOO'"  diagnostics,
     when FOO is an inline function in the header; see
     <http://gcc.gnu.org/bugzilla/show_bug.cgi?id=54113>.  */
# define _GL_INLINE_HEADER_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-prototypes\"") \
    _Pragma ("GCC diagnostic ignored \"-Wmissing-declarations\"") \
    _GL_INLINE_HEADER_CONST_PRAGMA
# define _GL_INLINE_HEADER_END \
    _Pragma ("GCC diagnostic pop")
#else
# define _GL_INLINE_HEADER_BEGIN
# define _GL_INLINE_HEADER_END
#endif])
])
m4trace:m4/faccessat.m4:11: -1- AC_DEFUN([gl_FUNC_FACCESSAT], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare faccessat().
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([faccessat])
  if test $ac_cv_func_faccessat = no; then
    HAVE_FACCESSAT=0
  fi
])
m4trace:m4/faccessat.m4:25: -1- AC_DEFUN([gl_PREREQ_FACCESSAT], [
  AC_CHECK_FUNCS([access])
])
m4trace:m4/fcntl.m4:16: -1- AC_DEFUN([gl_FUNC_FCNTL], [
  dnl Persuade glibc to expose F_DUPFD_CLOEXEC.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    gl_REPLACE_FCNTL
  else
    dnl cygwin 1.5.x F_DUPFD has wrong errno, and allows negative target
    dnl haiku alpha 2 F_DUPFD has wrong errno
    AC_CACHE_CHECK([whether fcntl handles F_DUPFD correctly],
      [gl_cv_func_fcntl_f_dupfd_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <fcntl.h>
#include <errno.h>
]], [[int result = 0;
      if (fcntl (0, F_DUPFD, -1) != -1) result |= 1;
      if (errno != EINVAL) result |= 2;
      return result;
         ]])],
         [gl_cv_func_fcntl_f_dupfd_works=yes],
         [gl_cv_func_fcntl_f_dupfd_works=no],
         [# Guess that it works on glibc systems
          case $host_os in #((
            *-gnu*) gl_cv_func_fcntl_f_dupfd_works="guessing yes";;
            *)      gl_cv_func_fcntl_f_dupfd_works="guessing no";;
          esac])])
    case $gl_cv_func_fcntl_f_dupfd_works in
      *yes) ;;
      *) gl_REPLACE_FCNTL
        AC_DEFINE([FCNTL_DUPFD_BUGGY], [1], [Define this to 1 if F_DUPFD
          behavior does not match POSIX]) ;;
    esac

    dnl Many systems lack F_DUPFD_CLOEXEC
    AC_CACHE_CHECK([whether fcntl understands F_DUPFD_CLOEXEC],
      [gl_cv_func_fcntl_f_dupfd_cloexec],
      [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <fcntl.h>
#ifndef F_DUPFD_CLOEXEC
choke me
#endif
         ]])],
         [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#ifdef __linux__
/* The Linux kernel only added F_DUPFD_CLOEXEC in 2.6.24, so we always replace
   it to support the semantics on older kernels that failed with EINVAL.  */
choke me
#endif
           ]])],
           [gl_cv_func_fcntl_f_dupfd_cloexec=yes],
           [gl_cv_func_fcntl_f_dupfd_cloexec="needs runtime check"])],
         [gl_cv_func_fcntl_f_dupfd_cloexec=no])])
    if test "$gl_cv_func_fcntl_f_dupfd_cloexec" != yes; then
      gl_REPLACE_FCNTL
      dnl No witness macro needed for this bug.
    fi
  fi
  dnl Replace fcntl() for supporting the gnulib-defined fchdir() function,
  dnl to keep fchdir's bookkeeping up-to-date.
  m4_ifdef([gl_FUNC_FCHDIR], [
    gl_TEST_FCHDIR
    if test $HAVE_FCHDIR = 0; then
      gl_REPLACE_FCNTL
    fi
  ])
])
m4trace:m4/fcntl.m4:86: -1- AC_DEFUN([gl_REPLACE_FCNTL], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fcntl])
  if test $ac_cv_func_fcntl = no; then
    HAVE_FCNTL=0
  else
    REPLACE_FCNTL=1
  fi
])
m4trace:m4/fcntl_h.m4:10: -1- AC_DEFUN([gl_FCNTL_H], [
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  AC_REQUIRE([gl_FCNTL_O_FLAGS])
  gl_NEXT_HEADERS([fcntl.h])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, if it is not common
  dnl enough to be declared everywhere.
  gl_WARN_ON_USE_PREPARE([[#include <fcntl.h>
    ]], [fcntl openat])
])
m4trace:m4/fcntl_h.m4:29: -1- AC_DEFUN([gl_FCNTL_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_FCNTL_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/fcntl_h.m4:38: -1- AC_DEFUN([gl_FCNTL_H_DEFAULTS], [
  GNULIB_FCNTL=0;        AC_SUBST([GNULIB_FCNTL])
  GNULIB_NONBLOCKING=0;  AC_SUBST([GNULIB_NONBLOCKING])
  GNULIB_OPEN=0;         AC_SUBST([GNULIB_OPEN])
  GNULIB_OPENAT=0;       AC_SUBST([GNULIB_OPENAT])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCNTL=1;          AC_SUBST([HAVE_FCNTL])
  HAVE_OPENAT=1;         AC_SUBST([HAVE_OPENAT])
  REPLACE_FCNTL=0;       AC_SUBST([REPLACE_FCNTL])
  REPLACE_OPEN=0;        AC_SUBST([REPLACE_OPEN])
  REPLACE_OPENAT=0;      AC_SUBST([REPLACE_OPENAT])
])
m4trace:m4/fdatasync.m4:7: -1- AC_DEFUN([gl_FUNC_FDATASYNC], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Using AC_CHECK_FUNCS_ONCE would break our subsequent AC_SEARCH_LIBS
  AC_CHECK_DECLS_ONCE([fdatasync])
  LIB_FDATASYNC=
  AC_SUBST([LIB_FDATASYNC])

  if test $ac_cv_have_decl_fdatasync = no; then
    HAVE_DECL_FDATASYNC=0
    dnl Mac OS X 10.7 has fdatasync but does not declare it.
    AC_CHECK_FUNCS([fdatasync])
    if test $ac_cv_func_fdatasync = no; then
      HAVE_FDATASYNC=0
    fi
  else
    dnl Solaris <= 2.6 has fdatasync() in libposix4.
    dnl Solaris 7..10 has it in librt.
    gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([fdatasync], [rt posix4],
                   [test "$ac_cv_search_fdatasync" = "none required" ||
                    LIB_FDATASYNC=$ac_cv_search_fdatasync])
    LIBS=$gl_saved_libs
  fi
])
m4trace:m4/fdopendir.m4:11: -1- AC_DEFUN([gl_FUNC_FDOPENDIR], [
  AC_REQUIRE([gl_DIRENT_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  dnl FreeBSD 7.3 has the function, but failed to declare it.
  AC_CHECK_DECLS([fdopendir], [], [HAVE_DECL_FDOPENDIR=0], [[
#include <dirent.h>
    ]])
  AC_CHECK_FUNCS_ONCE([fdopendir])
  if test $ac_cv_func_fdopendir = no; then
    HAVE_FDOPENDIR=0
  else
    AC_CACHE_CHECK([whether fdopendir works],
      [gl_cv_func_fdopendir_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#if !HAVE_DECL_FDOPENDIR
extern
# ifdef __cplusplus
"C"
# endif
DIR *fdopendir (int);
#endif
]], [int result = 0;
     int fd = open ("conftest.c", O_RDONLY);
     if (fd < 0) result |= 1;
     if (fdopendir (fd)) result |= 2;
     if (close (fd)) result |= 4;
     return result;])],
         [gl_cv_func_fdopendir_works=yes],
         [gl_cv_func_fdopendir_works=no],
         [case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_fdopendir_works="guessing yes" ;;
                    # If we don't know, assume the worst.
            *)      gl_cv_func_fdopendir_works="guessing no" ;;
          esac
         ])])
    case "$gl_cv_func_fdopendir_works" in
      *yes) ;;
      *)
        REPLACE_FDOPENDIR=1
        ;;
    esac
  fi
])
m4trace:m4/filemode.m4:7: -1- AC_DEFUN([gl_FILEMODE], [
  AC_REQUIRE([AC_STRUCT_ST_DM_MODE])
  AC_CHECK_DECLS_ONCE([strmode])
])
m4trace:m4/fpending.m4:16: -1- AC_DEFUN([gl_FUNC_FPENDING], [
  AC_CHECK_HEADERS_ONCE([stdio_ext.h])
  fp_headers='
    #include <stdio.h>
    #if HAVE_STDIO_EXT_H
    # include <stdio_ext.h>
    #endif
  '
  AC_CACHE_CHECK([for __fpending], [gl_cv_func___fpending],
    [
      AC_LINK_IFELSE(
        [AC_LANG_PROGRAM([$fp_headers],
           [[return ! __fpending (stdin);]])],
        [gl_cv_func___fpending=yes],
        [gl_cv_func___fpending=no])
    ])
  if test $gl_cv_func___fpending = yes; then
    AC_CHECK_DECLS([__fpending], [], [], [$fp_headers])
  fi
])
m4trace:m4/fpending.m4:38: -1- AC_DEFUN([gl_PREREQ_FPENDING], [
  AC_CACHE_CHECK(
              [how to determine the number of pending output bytes on a stream],
                 ac_cv_sys_pending_output_n_bytes,
    [
      for ac_expr in                                                    \
                                                                        \
          '# glibc2'                                                    \
          'fp->_IO_write_ptr - fp->_IO_write_base'                      \
                                                                        \
          '# traditional Unix'                                          \
          'fp->_ptr - fp->_base'                                        \
                                                                        \
          '# BSD'                                                       \
          'fp->_p - fp->_bf._base'                                      \
                                                                        \
          '# SCO, Unixware'                                             \
          '(fp->__ptr ? fp->__ptr - fp->__base : 0)'                    \
                                                                        \
          '# QNX'                                                       \
          '(fp->_Mode & 0x2000 /*_MWRITE*/ ? fp->_Next - fp->_Buf : 0)' \
                                                                        \
          '# old glibc?'                                                \
          'fp->__bufp - fp->__buffer'                                   \
                                                                        \
          '# old glibc iostream?'                                       \
          'fp->_pptr - fp->_pbase'                                      \
                                                                        \
          '# emx+gcc'                                                   \
          'fp->_ptr - fp->_buffer'                                      \
                                                                        \
          '# Minix'                                                     \
          'fp->_ptr - fp->_buf'                                         \
                                                                        \
          '# Plan9'                                                     \
          'fp->wp - fp->buf'                                            \
                                                                        \
          '# VMS'                                                       \
          '(*fp)->_ptr - (*fp)->_base'                                  \
                                                                        \
          '# e.g., DGUX R4.11; the info is not available'               \
          1                                                             \
          ; do

        # Skip each embedded comment.
        case "$ac_expr" in '#'*) continue;; esac

        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]],
          [[FILE *fp = stdin; (void) ($ac_expr);]])],
          [fp_done=yes]
        )
        test "$fp_done" = yes && break
      done

      ac_cv_sys_pending_output_n_bytes=$ac_expr
    ]
  )
  AC_DEFINE_UNQUOTED([PENDING_OUTPUT_N_BYTES],
    $ac_cv_sys_pending_output_n_bytes,
    [the number of pending output bytes on stream 'fp'])
])
m4trace:m4/fstatat.m4:11: -1- AC_DEFUN([gl_FUNC_FSTATAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([fstatat])

  if test $ac_cv_func_fstatat = no; then
    HAVE_FSTATAT=0
  else
    dnl Test for an AIX 7.1 bug; see
    dnl <http://lists.gnu.org/archive/html/bug-tar/2011-09/msg00015.html>.
    AC_CACHE_CHECK([whether fstatat (..., 0) works],
      [gl_cv_func_fstatat_zero_flag],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE(
            [[
              #include <fcntl.h>
              #include <sys/stat.h>
              int
              main (void)
              {
                struct stat a;
                return fstatat (AT_FDCWD, ".", &a, 0) != 0;
              }
            ]])],
         [gl_cv_func_fstatat_zero_flag=yes],
         [gl_cv_func_fstatat_zero_flag=no],
         [case "$host_os" in
            aix*) gl_cv_func_fstatat_zero_flag="guessing no";;
            *)    gl_cv_func_fstatat_zero_flag="guessing yes";;
          esac
         ])
      ])

    case $gl_cv_func_fstatat_zero_flag+$gl_cv_func_lstat_dereferences_slashed_symlink in
    *yes+*yes) ;;
    *) REPLACE_FSTATAT=1
       case $gl_cv_func_fstatat_zero_flag in
       *yes)
         AC_DEFINE([HAVE_WORKING_FSTATAT_ZERO_FLAG], [1],
           [Define to 1 if fstatat (..., 0) works.
            For example, it does not work in AIX 7.1.])
         ;;
       esac
       ;;
    esac
  fi
])
m4trace:m4/fsync.m4:7: -1- AC_DEFUN([gl_FUNC_FSYNC], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([fsync])
  if test $ac_cv_func_fsync = no; then
    HAVE_FSYNC=0
  fi
])
m4trace:m4/fsync.m4:17: -1- AC_DEFUN([gl_PREREQ_FSYNC], [:])
m4trace:m4/getdtablesize.m4:7: -1- AC_DEFUN([gl_FUNC_GETDTABLESIZE], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])
  AC_CHECK_FUNCS_ONCE([getdtablesize])
  if test $ac_cv_func_getdtablesize = yes; then
    # Cygwin 1.7.25 automatically increases the RLIMIT_NOFILE soft limit
    # up to an unchangeable hard limit; all other platforms correctly
    # require setrlimit before getdtablesize() can report a larger value.
    AC_CACHE_CHECK([whether getdtablesize works],
      [gl_cv_func_getdtablesize_works],
      [AC_RUN_IFELSE([
        AC_LANG_PROGRAM([[#include <unistd.h>]],
          [int size = getdtablesize();
           if (dup2 (0, getdtablesize()) != -1)
             return 1;
           if (size != getdtablesize())
             return 2;
          ])],
        [gl_cv_func_getdtablesize_works=yes],
        [gl_cv_func_getdtablesize_works=no],
        [case "$host_os" in
          cygwin*) # on cygwin 1.5.25, getdtablesize() automatically grows
            gl_cv_func_getdtablesize_works="guessing no" ;;
          *) gl_cv_func_getdtablesize_works="guessing yes" ;;
         esac])
      ])
    case "$gl_cv_func_getdtablesize_works" in
      *yes) ;;
      *) REPLACE_GETDTABLESIZE=1 ;;
    esac
  else
    HAVE_GETDTABLESIZE=0
  fi
])
m4trace:m4/getdtablesize.m4:44: -1- AC_DEFUN([gl_PREREQ_GETDTABLESIZE], [:])
m4trace:m4/getgroups.m4:12: -1- AC_DEFUN([AC_FUNC_GETGROUPS], [
  AC_REQUIRE([AC_TYPE_GETGROUPS])dnl
  AC_REQUIRE([AC_TYPE_SIZE_T])dnl
  AC_REQUIRE([AC_CANONICAL_HOST])dnl for cross-compiles
  AC_CHECK_FUNC([getgroups])

  # If we don't yet have getgroups, see if it's in -lbsd.
  # This is reported to be necessary on an ITOS 3000WS running SEIUX 3.1.
  ac_save_LIBS=$LIBS
  if test $ac_cv_func_getgroups = no; then
    AC_CHECK_LIB(bsd, getgroups, [GETGROUPS_LIB=-lbsd])
  fi

  # Run the program to test the functionality of the system-supplied
  # getgroups function only if there is such a function.
  if test $ac_cv_func_getgroups = yes; then
    AC_CACHE_CHECK([for working getgroups], [ac_cv_func_getgroups_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT],
            [[/* On Ultrix 4.3, getgroups (0, 0) always fails.  */
              return getgroups (0, 0) == -1;]])
         ],
         [ac_cv_func_getgroups_works=yes],
         [ac_cv_func_getgroups_works=no],
         [case "$host_os" in # ((
                    # Guess yes on glibc systems.
            *-gnu*) ac_cv_func_getgroups_works="guessing yes" ;;
                    # If we don't know, assume the worst.
            *)      ac_cv_func_getgroups_works="guessing no" ;;
          esac
         ])
      ])
  else
    ac_cv_func_getgroups_works=no
  fi
  case "$ac_cv_func_getgroups_works" in
    *yes)
      AC_DEFINE([HAVE_GETGROUPS], [1],
        [Define to 1 if your system has a working `getgroups' function.])
      ;;
  esac
  LIBS=$ac_save_LIBS
])
m4trace:m4/getgroups.m4:64: -1- AC_DEFUN([gl_FUNC_GETGROUPS], [
  AC_REQUIRE([AC_TYPE_GETGROUPS])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

  AC_FUNC_GETGROUPS
  if test $ac_cv_func_getgroups != yes; then
    HAVE_GETGROUPS=0
  else
    if test "$ac_cv_type_getgroups" != gid_t \
       || { case "$ac_cv_func_getgroups_works" in
              *yes) false;;
              *) true;;
            esac
          }; then
      REPLACE_GETGROUPS=1
      AC_DEFINE([GETGROUPS_ZERO_BUG], [1], [Define this to 1 if
        getgroups(0,NULL) does not return the number of groups.])
    else
      dnl Detect FreeBSD bug; POSIX requires getgroups(-1,ptr) to fail.
      AC_CACHE_CHECK([whether getgroups handles negative values],
        [gl_cv_func_getgroups_works],
        [AC_RUN_IFELSE([AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT],
          [[int size = getgroups (0, 0);
            gid_t *list = malloc (size * sizeof *list);
            return getgroups (-1, list) != -1;]])],
          [gl_cv_func_getgroups_works=yes],
          [gl_cv_func_getgroups_works=no],
          [case "$host_os" in
                     # Guess yes on glibc systems.
             *-gnu*) gl_cv_func_getgroups_works="guessing yes" ;;
                     # If we don't know, assume the worst.
             *)      gl_cv_func_getgroups_works="guessing no" ;;
           esac
          ])])
      case "$gl_cv_func_getgroups_works" in
        *yes) ;;
        *) REPLACE_GETGROUPS=1 ;;
      esac
    fi
  fi
  test -n "$GETGROUPS_LIB" && LIBS="$GETGROUPS_LIB $LIBS"
])
m4trace:m4/getloadavg.m4:17: -1- AC_DEFUN([gl_GETLOADAVG], [AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

# Persuade glibc <stdlib.h> to declare getloadavg().
AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

gl_save_LIBS=$LIBS

# getloadvg is present in libc on glibc >= 2.2, Mac OS X, FreeBSD >= 2.0,
# NetBSD >= 0.9, OpenBSD >= 2.0, Solaris >= 7.
HAVE_GETLOADAVG=1
AC_CHECK_FUNC([getloadavg], [],
  [gl_func_getloadavg_done=no

   # Some systems with -lutil have (and need) -lkvm as well, some do not.
   # On Solaris, -lkvm requires nlist from -lelf, so check that first
   # to get the right answer into the cache.
   # For kstat on solaris, we need to test for libelf and libkvm to force the
   # definition of SVR4 below.
   if test $gl_func_getloadavg_done = no; then
     AC_CHECK_LIB([elf], [elf_begin], [LIBS="-lelf $LIBS"])
     AC_CHECK_LIB([kvm], [kvm_open], [LIBS="-lkvm $LIBS"])
     # Check for the 4.4BSD definition of getloadavg.
     AC_CHECK_LIB([util], [getloadavg],
       [LIBS="-lutil $LIBS" gl_func_getloadavg_done=yes])
   fi

   if test $gl_func_getloadavg_done = no; then
     # There is a commonly available library for RS/6000 AIX.
     # Since it is not a standard part of AIX, it might be installed locally.
     gl_getloadavg_LIBS=$LIBS
     LIBS="-L/usr/local/lib $LIBS"
     AC_CHECK_LIB([getloadavg], [getloadavg],
                  [LIBS="-lgetloadavg $LIBS" gl_func_getloadavg_done=yes],
                  [LIBS=$gl_getloadavg_LIBS])
   fi

   # Set up the replacement function if necessary.
   if test $gl_func_getloadavg_done = no; then
     HAVE_GETLOADAVG=0

     # Solaris has libkstat which does not require root.
     AC_CHECK_LIB([kstat], [kstat_open])
     test $ac_cv_lib_kstat_kstat_open = yes && gl_func_getloadavg_done=yes

     # AIX has libperfstat which does not require root
     if test $gl_func_getloadavg_done = no; then
       AC_CHECK_LIB([perfstat], [perfstat_cpu_total])
       test $ac_cv_lib_perfstat_perfstat_cpu_total = yes && gl_func_getloadavg_done=yes
     fi

     if test $gl_func_getloadavg_done = no; then
       AC_CHECK_HEADER([sys/dg_sys_info.h],
         [gl_func_getloadavg_done=yes
          AC_DEFINE([DGUX], [1], [Define to 1 for DGUX with <sys/dg_sys_info.h>.])
          AC_CHECK_LIB([dgc], [dg_sys_info])])
     fi
   fi])

if test "x$gl_save_LIBS" = x; then
  GETLOADAVG_LIBS=$LIBS
else
  GETLOADAVG_LIBS=`echo "$LIBS" | sed "s!$gl_save_LIBS!!"`
fi
LIBS=$gl_save_LIBS

AC_SUBST([GETLOADAVG_LIBS])dnl

# Test whether the system declares getloadavg. Solaris has the function
# but declares it in <sys/loadavg.h>, not <stdlib.h>.
AC_CHECK_HEADERS([sys/loadavg.h])
if test $ac_cv_header_sys_loadavg_h = yes; then
  HAVE_SYS_LOADAVG_H=1
else
  HAVE_SYS_LOADAVG_H=0
fi
AC_CHECK_DECL([getloadavg], [], [HAVE_DECL_GETLOADAVG=0],
  [[#if HAVE_SYS_LOADAVG_H
    # include <sys/loadavg.h>
    #endif
    #include <stdlib.h>]])
])
m4trace:m4/getloadavg.m4:104: -1- AC_DEFUN([gl_PREREQ_GETLOADAVG], [
# Figure out what our getloadavg.c needs.

AC_CHECK_HEADERS_ONCE([sys/param.h])

# On HPUX9, an unprivileged user can get load averages this way.
if test $gl_func_getloadavg_done = no; then
  AC_CHECK_FUNCS([pstat_getdynamic], [gl_func_getloadavg_done=yes])
fi

# We cannot check for <dwarf.h>, because Solaris 2 does not use dwarf (it
# uses stabs), but it is still SVR4.  We cannot check for <elf.h> because
# Irix 4.0.5F has the header but not the library.
if test $gl_func_getloadavg_done = no && test "$ac_cv_lib_elf_elf_begin" = yes \
    && test "$ac_cv_lib_kvm_kvm_open" = yes; then
  gl_func_getloadavg_done=yes
  AC_DEFINE([SVR4], [1], [Define to 1 on System V Release 4.])
fi

if test $gl_func_getloadavg_done = no; then
  AC_CHECK_HEADER([inq_stats/cpustats.h],
  [gl_func_getloadavg_done=yes
   AC_DEFINE([UMAX], [1], [Define to 1 for Encore UMAX.])
   AC_DEFINE([UMAX4_3], [1],
             [Define to 1 for Encore UMAX 4.3 that has <inq_status/cpustats.h>
              instead of <sys/cpustats.h>.])])
fi

if test $gl_func_getloadavg_done = no; then
  AC_CHECK_HEADER([sys/cpustats.h],
  [gl_func_getloadavg_done=yes; AC_DEFINE([UMAX])])
fi

if test $gl_func_getloadavg_done = no; then
  AC_CHECK_HEADERS([mach/mach.h])
fi

AC_CHECK_HEADERS([nlist.h],
[AC_CHECK_MEMBERS([struct nlist.n_un.n_name],
                  [], [],
                  [@%:@include <nlist.h>])
 AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <nlist.h>]],
                   [[struct nlist x;
                    #ifdef HAVE_STRUCT_NLIST_N_UN_N_NAME
                    x.n_un.n_name = "";
                    #else
                    x.n_name = "";
                    #endif]])],
                [AC_DEFINE([N_NAME_POINTER], [1],
                           [Define to 1 if the nlist n_name member is a pointer])])
])dnl
])
m4trace:m4/getopt.m4:8: -1- AC_DEFUN([gl_FUNC_GETOPT_POSIX], [
  m4_divert_text([DEFAULTS], [gl_getopt_required=POSIX])
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_GETOPT_CHECK_HEADERS])
  dnl Other modules can request the gnulib implementation of the getopt
  dnl functions unconditionally, by defining gl_REPLACE_GETOPT_ALWAYS.
  dnl argp.m4 does this.
  m4_ifdef([gl_REPLACE_GETOPT_ALWAYS], [
    REPLACE_GETOPT=1
  ], [
    REPLACE_GETOPT=0
    if test -n "$gl_replace_getopt"; then
      REPLACE_GETOPT=1
    fi
  ])
  if test $REPLACE_GETOPT = 1; then
    dnl Arrange for getopt.h to be created.
    gl_GETOPT_SUBSTITUTE_HEADER
  fi
])
m4trace:m4/getopt.m4:33: -1- AC_DEFUN([gl_FUNC_GETOPT_GNU], [
  m4_divert_text([INIT_PREPARE], [gl_getopt_required=GNU])

  AC_REQUIRE([gl_FUNC_GETOPT_POSIX])
])
m4trace:m4/getopt.m4:41: -1- AC_DEFUN([gl_GETOPT_CHECK_HEADERS], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([AC_PROG_AWK]) dnl for awk that supports ENVIRON

  dnl Persuade Solaris <unistd.h> to declare optarg, optind, opterr, optopt.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  gl_CHECK_NEXT_HEADERS([getopt.h])
  if test $ac_cv_header_getopt_h = yes; then
    HAVE_GETOPT_H=1
  else
    HAVE_GETOPT_H=0
  fi
  AC_SUBST([HAVE_GETOPT_H])

  gl_replace_getopt=

  dnl Test whether <getopt.h> is available.
  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CHECK_HEADERS([getopt.h], [], [gl_replace_getopt=yes])
  fi

  dnl Test whether the function getopt_long is available.
  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CHECK_FUNCS([getopt_long_only], [], [gl_replace_getopt=yes])
  fi

  dnl POSIX 2008 does not specify leading '+' behavior, but see
  dnl http://austingroupbugs.net/view.php?id=191 for a recommendation on
  dnl the next version of POSIX.  For now, we only guarantee leading '+'
  dnl behavior with getopt-gnu.
  if test -z "$gl_replace_getopt"; then
    AC_CACHE_CHECK([whether getopt is POSIX compatible],
      [gl_cv_func_getopt_posix],
      [
        dnl Merging these three different test programs into a single one
        dnl would require a reset mechanism. On BSD systems, it can be done
        dnl through 'optreset'; on some others (glibc), it can be done by
        dnl setting 'optind' to 0; on others again (HP-UX, IRIX, OSF/1,
        dnl Solaris 9, musl libc), there is no such mechanism.
        if test $cross_compiling = no; then
          dnl Sanity check. Succeeds everywhere (except on MSVC,
          dnl which lacks <unistd.h> and getopt() entirely).
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char a[] = "-a";
  static char foo[] = "foo";
  static char bar[] = "bar";
  char *argv[] = { program, a, foo, bar, NULL };
  int c;

  c = getopt (4, argv, "ab");
  if (!(c == 'a'))
    return 1;
  c = getopt (4, argv, "ab");
  if (!(c == -1))
    return 2;
  if (!(optind == 2))
    return 3;
  return 0;
}
]])],
            [gl_cv_func_getopt_posix=maybe],
            [gl_cv_func_getopt_posix=no])
          if test $gl_cv_func_getopt_posix = maybe; then
            dnl Sanity check with '+'. Succeeds everywhere (except on MSVC,
            dnl which lacks <unistd.h> and getopt() entirely).
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char donald[] = "donald";
  static char p[] = "-p";
  static char billy[] = "billy";
  static char duck[] = "duck";
  static char a[] = "-a";
  static char bar[] = "bar";
  char *argv[] = { program, donald, p, billy, duck, a, bar, NULL };
  int c;

  c = getopt (7, argv, "+abp:q:");
  if (!(c == -1))
    return 4;
  if (!(strcmp (argv[0], "program") == 0))
    return 5;
  if (!(strcmp (argv[1], "donald") == 0))
    return 6;
  if (!(strcmp (argv[2], "-p") == 0))
    return 7;
  if (!(strcmp (argv[3], "billy") == 0))
    return 8;
  if (!(strcmp (argv[4], "duck") == 0))
    return 9;
  if (!(strcmp (argv[5], "-a") == 0))
    return 10;
  if (!(strcmp (argv[6], "bar") == 0))
    return 11;
  if (!(optind == 1))
    return 12;
  return 0;
}
]])],
              [gl_cv_func_getopt_posix=maybe],
              [gl_cv_func_getopt_posix=no])
          fi
          if test $gl_cv_func_getopt_posix = maybe; then
            dnl Detect Mac OS X 10.5, AIX 7.1, mingw bug.
            AC_RUN_IFELSE(
              [AC_LANG_SOURCE([[
#include <unistd.h>
#include <stdlib.h>
#include <string.h>

int
main ()
{
  static char program[] = "program";
  static char ab[] = "-ab";
  char *argv[3] = { program, ab, NULL };
  if (getopt (2, argv, "ab:") != 'a')
    return 13;
  if (getopt (2, argv, "ab:") != '?')
    return 14;
  if (optopt != 'b')
    return 15;
  if (optind != 2)
    return 16;
  return 0;
}
]])],
              [gl_cv_func_getopt_posix=yes],
              [gl_cv_func_getopt_posix=no])
          fi
        else
          case "$host_os" in
            darwin* | aix* | mingw*) gl_cv_func_getopt_posix="guessing no";;
            *)                       gl_cv_func_getopt_posix="guessing yes";;
          esac
        fi
      ])
    case "$gl_cv_func_getopt_posix" in
      *no) gl_replace_getopt=yes ;;
    esac
  fi

  if test -z "$gl_replace_getopt" && test $gl_getopt_required = GNU; then
    AC_CACHE_CHECK([for working GNU getopt function], [gl_cv_func_getopt_gnu],
      [# Even with POSIXLY_CORRECT, the GNU extension of leading '-' in the
       # optstring is necessary for programs like m4 that have POSIX-mandated
       # semantics for supporting options interspersed with files.
       # Also, since getopt_long is a GNU extension, we require optind=0.
       # Bash ties 'set -o posix' to a non-exported POSIXLY_CORRECT;
       # so take care to revert to the correct (non-)export state.
dnl GNU Coding Standards currently allow awk but not env; besides, env
dnl is ambiguous with environment values that contain newlines.
       gl_awk_probe='BEGIN { if ("POSIXLY_CORRECT" in ENVIRON) print "x" }'
       case ${POSIXLY_CORRECT+x}`$AWK "$gl_awk_probe" </dev/null` in
         xx) gl_had_POSIXLY_CORRECT=exported ;;
         x)  gl_had_POSIXLY_CORRECT=yes      ;;
         *)  gl_had_POSIXLY_CORRECT=         ;;
       esac
       POSIXLY_CORRECT=1
       export POSIXLY_CORRECT
       AC_RUN_IFELSE(
        [AC_LANG_PROGRAM([[#include <getopt.h>
                           #include <stddef.h>
                           #include <string.h>
           ]GL_NOCRASH[
           ]], [[
             int result = 0;

             nocrash_init();

             /* This code succeeds on glibc 2.8, OpenBSD 4.0, Cygwin, mingw,
                and fails on Mac OS X 10.5, AIX 5.2, HP-UX 11, IRIX 6.5,
                OSF/1 5.1, Solaris 10.  */
             {
               static char conftest[] = "conftest";
               static char plus[] = "-+";
               char *argv[3] = { conftest, plus, NULL };
               opterr = 0;
               if (getopt (2, argv, "+a") != '?')
                 result |= 1;
             }
             /* This code succeeds on glibc 2.8, mingw,
                and fails on Mac OS X 10.5, OpenBSD 4.0, AIX 5.2, HP-UX 11,
                IRIX 6.5, OSF/1 5.1, Solaris 10, Cygwin 1.5.x.  */
             {
               static char program[] = "program";
               static char p[] = "-p";
               static char foo[] = "foo";
               static char bar[] = "bar";
               char *argv[] = { program, p, foo, bar, NULL };

               optind = 1;
               if (getopt (4, argv, "p::") != 'p')
                 result |= 2;
               else if (optarg != NULL)
                 result |= 4;
               else if (getopt (4, argv, "p::") != -1)
                 result |= 6;
               else if (optind != 2)
                 result |= 8;
             }
             /* This code succeeds on glibc 2.8 and fails on Cygwin 1.7.0.  */
             {
               static char program[] = "program";
               static char foo[] = "foo";
               static char p[] = "-p";
               char *argv[] = { program, foo, p, NULL };
               optind = 0;
               if (getopt (3, argv, "-p") != 1)
                 result |= 16;
               else if (getopt (3, argv, "-p") != 'p')
                 result |= 16;
             }
             /* This code fails on glibc 2.11.  */
             {
               static char program[] = "program";
               static char b[] = "-b";
               static char a[] = "-a";
               char *argv[] = { program, b, a, NULL };
               optind = opterr = 0;
               if (getopt (3, argv, "+:a:b") != 'b')
                 result |= 32;
               else if (getopt (3, argv, "+:a:b") != ':')
                 result |= 32;
             }
             /* This code dumps core on glibc 2.14.  */
             {
               static char program[] = "program";
               static char w[] = "-W";
               static char dummy[] = "dummy";
               char *argv[] = { program, w, dummy, NULL };
               optind = opterr = 1;
               if (getopt (3, argv, "W;") != 'W')
                 result |= 64;
             }
             return result;
           ]])],
        [gl_cv_func_getopt_gnu=yes],
        [gl_cv_func_getopt_gnu=no],
        [dnl Cross compiling. Assume the worst, even on glibc platforms.
         gl_cv_func_getopt_gnu="guessing no"
        ])
       case $gl_had_POSIXLY_CORRECT in
         exported) ;;
         yes) AS_UNSET([POSIXLY_CORRECT]); POSIXLY_CORRECT=1 ;;
         *) AS_UNSET([POSIXLY_CORRECT]) ;;
       esac
      ])
    if test "$gl_cv_func_getopt_gnu" != yes; then
      gl_replace_getopt=yes
    else
      AC_CACHE_CHECK([for working GNU getopt_long function],
        [gl_cv_func_getopt_long_gnu],
        [AC_RUN_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <getopt.h>
                #include <stddef.h>
                #include <string.h>
              ]],
              [[static const struct option long_options[] =
                  {
                    { "xtremely-",no_argument,       NULL, 1003 },
                    { "xtra",     no_argument,       NULL, 1001 },
                    { "xtreme",   no_argument,       NULL, 1002 },
                    { "xtremely", no_argument,       NULL, 1003 },
                    { NULL,       0,                 NULL, 0 }
                  };
                /* This code fails on OpenBSD 5.0.  */
                {
                  static char program[] = "program";
                  static char xtremel[] = "--xtremel";
                  char *argv[] = { program, xtremel, NULL };
                  int option_index;
                  optind = 1; opterr = 0;
                  if (getopt_long (2, argv, "", long_options, &option_index) != 1003)
                    return 1;
                }
                return 0;
              ]])],
           [gl_cv_func_getopt_long_gnu=yes],
           [gl_cv_func_getopt_long_gnu=no],
           [dnl Cross compiling. Guess no on OpenBSD, yes otherwise.
            case "$host_os" in
              openbsd*) gl_cv_func_getopt_long_gnu="guessing no";;
              *)        gl_cv_func_getopt_long_gnu="guessing yes";;
            esac
           ])
        ])
      case "$gl_cv_func_getopt_long_gnu" in
        *yes) ;;
        *) gl_replace_getopt=yes ;;
      esac
    fi
  fi
])
m4trace:m4/getopt.m4:355: -1- AC_DEFUN([gl_GETOPT_SUBSTITUTE_HEADER], [
  GETOPT_H=getopt.h
  AC_DEFINE([__GETOPT_PREFIX], [[rpl_]],
    [Define to rpl_ if the getopt replacement functions and variables
     should be used.])
  AC_SUBST([GETOPT_H])
])
m4trace:m4/getopt.m4:365: -1- AC_DEFUN([gl_PREREQ_GETOPT], [
  AC_CHECK_DECLS_ONCE([getenv])
])
m4trace:m4/gettime.m4:7: -1- AC_DEFUN([gl_GETTIME], [
  dnl Prerequisites of lib/gettime.c.
  AC_REQUIRE([gl_CLOCK_TIME])
  AC_REQUIRE([gl_TIMESPEC])
  AC_CHECK_FUNCS_ONCE([gettimeofday nanotime])
])
m4trace:m4/gettimeofday.m4:10: -1- AC_DEFUN([gl_FUNC_GETTIMEOFDAY], [
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([gl_HEADER_SYS_TIME_H])
  AC_REQUIRE([gl_HEADER_SYS_TIME_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([gettimeofday])

  gl_gettimeofday_timezone=void
  if test $ac_cv_func_gettimeofday != yes; then
    HAVE_GETTIMEOFDAY=0
  else
    gl_FUNC_GETTIMEOFDAY_CLOBBER
    AC_CACHE_CHECK([for gettimeofday with POSIX signature],
      [gl_cv_func_gettimeofday_posix_signature],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
              struct timeval c;
              int gettimeofday (struct timeval *restrict, void *restrict);
            ]],
            [[/* glibc uses struct timezone * rather than the POSIX void *
                 if _GNU_SOURCE is defined.  However, since the only portable
                 use of gettimeofday uses NULL as the second parameter, and
                 since the glibc definition is actually more typesafe, it is
                 not worth wrapping this to get a compliant signature.  */
              int (*f) (struct timeval *restrict, void *restrict)
                = gettimeofday;
              int x = f (&c, 0);
              return !(x | c.tv_sec | c.tv_usec);
            ]])],
          [gl_cv_func_gettimeofday_posix_signature=yes],
          [AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM(
              [[#include <sys/time.h>
int gettimeofday (struct timeval *restrict, struct timezone *restrict);
              ]])],
            [gl_cv_func_gettimeofday_posix_signature=almost],
            [gl_cv_func_gettimeofday_posix_signature=no])])])
    if test $gl_cv_func_gettimeofday_posix_signature = almost; then
      gl_gettimeofday_timezone='struct timezone'
    elif test $gl_cv_func_gettimeofday_posix_signature != yes; then
      REPLACE_GETTIMEOFDAY=1
    fi
    dnl If we override 'struct timeval', we also have to override gettimeofday.
    if test $REPLACE_STRUCT_TIMEVAL = 1; then
      REPLACE_GETTIMEOFDAY=1
    fi
    m4_ifdef([gl_FUNC_TZSET_CLOBBER], [
      gl_FUNC_TZSET_CLOBBER
      case "$gl_cv_func_tzset_clobber" in
        *yes)
          REPLACE_GETTIMEOFDAY=1
          gl_GETTIMEOFDAY_REPLACE_LOCALTIME
          AC_DEFINE([tzset], [rpl_tzset],
            [Define to rpl_tzset if the wrapper function should be used.])
          AC_DEFINE([TZSET_CLOBBERS_LOCALTIME], [1],
            [Define if tzset clobbers localtime's static buffer.])
          ;;
      esac
    ])
  fi
  AC_DEFINE_UNQUOTED([GETTIMEOFDAY_TIMEZONE], [$gl_gettimeofday_timezone],
    [Define this to 'void' or 'struct timezone' to match the system's
     declaration of the second argument to gettimeofday.])
])
m4trace:m4/gettimeofday.m4:84: -1- AC_DEFUN([gl_FUNC_GETTIMEOFDAY_CLOBBER], [
 AC_REQUIRE([gl_HEADER_SYS_TIME_H])
 AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

 AC_CACHE_CHECK([whether gettimeofday clobbers localtime buffer],
  [gl_cv_func_gettimeofday_clobber],
  [AC_RUN_IFELSE(
     [AC_LANG_PROGRAM(
        [[#include <string.h>
          #include <sys/time.h>
          #include <time.h>
          #include <stdlib.h>
        ]],
        [[
          time_t t = 0;
          struct tm *lt;
          struct tm saved_lt;
          struct timeval tv;
          lt = localtime (&t);
          saved_lt = *lt;
          gettimeofday (&tv, NULL);
          return memcmp (lt, &saved_lt, sizeof (struct tm)) != 0;
        ]])],
     [gl_cv_func_gettimeofday_clobber=no],
     [gl_cv_func_gettimeofday_clobber=yes],
     [# When cross-compiling:
      case "$host_os" in
                # Guess all is fine on glibc systems.
        *-gnu*) gl_cv_func_gettimeofday_clobber="guessing no" ;;
                # If we don't know, assume the worst.
        *)      gl_cv_func_gettimeofday_clobber="guessing yes" ;;
      esac
     ])])

 case "$gl_cv_func_gettimeofday_clobber" in
   *yes)
     REPLACE_GETTIMEOFDAY=1
     gl_GETTIMEOFDAY_REPLACE_LOCALTIME
     AC_DEFINE([GETTIMEOFDAY_CLOBBERS_LOCALTIME], [1],
       [Define if gettimeofday clobbers the localtime buffer.])
     ;;
 esac
])
m4trace:m4/gettimeofday.m4:129: -1- AC_DEFUN([gl_GETTIMEOFDAY_REPLACE_LOCALTIME], [
  REPLACE_GMTIME=1
  REPLACE_LOCALTIME=1
])
m4trace:m4/gettimeofday.m4:135: -1- AC_DEFUN([gl_PREREQ_GETTIMEOFDAY], [
  AC_CHECK_HEADERS([sys/timeb.h])
  AC_CHECK_FUNCS([_ftime])
])
m4trace:m4/gnulib-common.m4:9: -1- AC_DEFUN([gl_COMMON], [
  dnl Use AC_REQUIRE here, so that the code is expanded once only.
  AC_REQUIRE([gl_00GNULIB])
  AC_REQUIRE([gl_COMMON_BODY])
])
m4trace:m4/gnulib-common.m4:14: -1- AC_DEFUN([gl_COMMON_BODY], [
  AH_VERBATIM([_Noreturn],
[/* The _Noreturn keyword of C11.  */
#if ! (defined _Noreturn \
       || (defined __STDC_VERSION__ && 201112 <= __STDC_VERSION__))
# if (3 <= __GNUC__ || (__GNUC__ == 2 && 8 <= __GNUC_MINOR__) \
      || 0x5110 <= __SUNPRO_C)
#  define _Noreturn __attribute__ ((__noreturn__))
# elif defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn
# endif
#endif
])
  AH_VERBATIM([isoc99_inline],
[/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports
   the ISO C 99 semantics of 'extern inline' (unlike the GNU C semantics of
   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.
   __APPLE__ && __MACH__ test for Mac OS X.
   __APPLE_CC__ tests for the Apple compiler and its version.
   __STDC_VERSION__ tests for the C99 mode.  */
#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__
# define __GNUC_STDC_INLINE__ 1
#endif])
  AH_VERBATIM([unused_parameter],
[/* Define as a marker that can be attached to declarations that might not
    be used.  This helps to reduce warnings, such as from
    GCC -Wunused-parameter.  */
#if __GNUC__ >= 3 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)
# define _GL_UNUSED __attribute__ ((__unused__))
#else
# define _GL_UNUSED
#endif
/* The name _UNUSED_PARAMETER_ is an earlier spelling, although the name
   is a misnomer outside of parameter lists.  */
#define _UNUSED_PARAMETER_ _GL_UNUSED

/* The __pure__ attribute was added in gcc 2.96.  */
#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 96)
# define _GL_ATTRIBUTE_PURE __attribute__ ((__pure__))
#else
# define _GL_ATTRIBUTE_PURE /* empty */
#endif

/* The __const__ attribute was added in gcc 2.95.  */
#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 95)
# define _GL_ATTRIBUTE_CONST __attribute__ ((__const__))
#else
# define _GL_ATTRIBUTE_CONST /* empty */
#endif
])
  dnl Preparation for running test programs:
  dnl Tell glibc to write diagnostics from -D_FORTIFY_SOURCE=2 to stderr, not
  dnl to /dev/tty, so they can be redirected to log files.  Such diagnostics
  dnl arise e.g., in the macros gl_PRINTF_DIRECTIVE_N, gl_SNPRINTF_DIRECTIVE_N.
  LIBC_FATAL_STDERR_=1
  export LIBC_FATAL_STDERR_
])
m4trace:m4/gnulib-common.m4:83: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE], [
  gl_MODULE_INDICATOR_SET_VARIABLE_AUX(
    [GNULIB_[]m4_translit([[$1]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])],
    [gl_MODULE_INDICATOR_CONDITION])
])
m4trace:m4/gnulib-common.m4:96: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX], [
  m4_if(m4_defn([gl_MODULE_INDICATOR_CONDITION]), [1],
    [
     dnl Simplify the expression VALUE || 1 to 1.
     $1=1
    ],
    [gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR([$1],
                                             [gl_MODULE_INDICATOR_CONDITION])])
])
m4trace:m4/gnulib-common.m4:110: -1- AC_DEFUN([gl_MODULE_INDICATOR_SET_VARIABLE_AUX_OR], [
  dnl Simplify the expression 1 || CONDITION to 1.
  if test "$[]$1" != 1; then
    dnl Simplify the expression 0 || CONDITION to CONDITION.
    if test "$[]$1" = 0; then
      $1=$2
    else
      $1="($[]$1 || $2)"
    fi
  fi
])
m4trace:m4/gnulib-common.m4:135: -1- AC_DEFUN([gl_MODULE_INDICATOR], [
  AC_DEFINE_UNQUOTED([GNULIB_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]),
    [gl_MODULE_INDICATOR_CONDITION],
    [Define to a C preprocessor expression that evaluates to 1 or 0,
     depending whether the gnulib module $1 shall be considered present.])
])
m4trace:m4/gnulib-common.m4:158: -1- AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [
  AC_DEFINE([GNULIB_TEST_]m4_translit([[$1]],
      [abcdefghijklmnopqrstuvwxyz./-],
      [ABCDEFGHIJKLMNOPQRSTUVWXYZ___]), [1],
    [Define to 1 when the gnulib module $1 should be tested.])
])
m4trace:m4/gnulib-common.m4:170: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_POSIXCHECK], [
  dnl Override gl_WARN_ON_USE_PREPARE.
  dnl But hide this definition from 'aclocal'.
  AC_DEFUN([gl_W][ARN_ON_USE_PREPARE], [])
])
m4trace:m4/gnulib-common.m4:181: -1- AC_DEFUN([gl_ASSERT_NO_GNULIB_TESTS], [
  dnl Override gl_MODULE_INDICATOR_FOR_TESTS.
  AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
])
m4trace:m4/gnulib-common.m4:189: -1- AC_DEFUN([gl_FEATURES_H], [
  AC_CHECK_HEADERS_ONCE([features.h])
  if test $ac_cv_header_features_h = yes; then
    HAVE_FEATURES_H=1
  else
    HAVE_FEATURES_H=0
  fi
  AC_SUBST([HAVE_FEATURES_H])
])
m4trace:m4/gnulib-common.m4:229: -1- AC_DEFUN([gl_PROG_CC_C99], [
  dnl Change that version number to the minimum Autoconf version that supports
  dnl mixing AC_PROG_CC_C99 calls with AC_PROG_CC_STDC calls.
  m4_version_prereq([9.0],
    [AC_REQUIRE([AC_PROG_CC_C99])],
    [AC_REQUIRE([AC_PROG_CC_STDC])])
])
m4trace:m4/gnulib-common.m4:242: -1- AC_DEFUN([gl_PROG_AR_RANLIB], [
  dnl Minix 3 comes with two toolchains: The Amsterdam Compiler Kit compiler
  dnl as "cc", and GCC as "gcc". They have different object file formats and
  dnl library formats. In particular, the GNU binutils programs ar, ranlib
  dnl produce libraries that work only with gcc, not with cc.
  AC_REQUIRE([AC_PROG_CC])
  AC_CACHE_CHECK([for Minix Amsterdam compiler], [gl_cv_c_amsterdam_compiler],
    [
      AC_EGREP_CPP([Amsterdam],
        [
#ifdef __ACK__
Amsterdam
#endif
        ],
        [gl_cv_c_amsterdam_compiler=yes],
        [gl_cv_c_amsterdam_compiler=no])
    ])
  if test -z "$AR"; then
    if test $gl_cv_c_amsterdam_compiler = yes; then
      AR='cc -c.a'
      if test -z "$ARFLAGS"; then
        ARFLAGS='-o'
      fi
    else
      dnl Use the Automake-documented default values for AR and ARFLAGS,
      dnl but prefer ${host}-ar over ar (useful for cross-compiling).
      AC_CHECK_TOOL([AR], [ar], [ar])
      if test -z "$ARFLAGS"; then
        ARFLAGS='cru'
      fi
    fi
  else
    if test -z "$ARFLAGS"; then
      ARFLAGS='cru'
    fi
  fi
  AC_SUBST([AR])
  AC_SUBST([ARFLAGS])
  if test -z "$RANLIB"; then
    if test $gl_cv_c_amsterdam_compiler = yes; then
      RANLIB=':'
    else
      dnl Use the ranlib program if it is available.
      AC_PROG_RANLIB
    fi
  fi
  AC_SUBST([RANLIB])
])
m4trace:m4/gnulib-common.m4:361: -1- AC_DEFUN([gl_BIGENDIAN], [
  AC_C_BIGENDIAN
])
m4trace:m4/gnulib-common.m4:371: -1- AC_DEFUN([gl_CACHE_VAL_SILENT], [
  saved_as_echo_n="$as_echo_n"
  as_echo_n=':'
  AC_CACHE_VAL([$1], [$2])
  as_echo_n="$saved_as_echo_n"
])
m4trace:m4/gnulib-comp.m4:34: -1- AC_DEFUN([gl_EARLY], [
  m4_pattern_forbid([^gl_[A-Z]])dnl the gnulib macro namespace
  m4_pattern_allow([^gl_ES$])dnl a valid locale name
  m4_pattern_allow([^gl_LIBOBJS$])dnl a variable
  m4_pattern_allow([^gl_LTLIBOBJS$])dnl a variable
  AC_REQUIRE([gl_PROG_AR_RANLIB])
  # Code from module absolute-header:
  # Code from module alloca-opt:
  # Code from module allocator:
  # Code from module at-internal:
  # Code from module binary-io:
  # Code from module byteswap:
  # Code from module c-ctype:
  # Code from module c-strcase:
  # Code from module careadlinkat:
  # Code from module clock-time:
  # Code from module close-stream:
  # Code from module count-one-bits:
  # Code from module count-trailing-zeros:
  # Code from module crypto/md5:
  # Code from module crypto/sha1:
  # Code from module crypto/sha256:
  # Code from module crypto/sha512:
  # Code from module dirent:
  # Code from module dosname:
  # Code from module dtoastr:
  # Code from module dtotimespec:
  # Code from module dup2:
  # Code from module environ:
  # Code from module errno:
  # Code from module euidaccess:
  # Code from module execinfo:
  # Code from module extensions:
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  # Code from module extern-inline:
  # Code from module faccessat:
  # Code from module fcntl:
  # Code from module fcntl-h:
  # Code from module fdatasync:
  # Code from module fdopendir:
  # Code from module filemode:
  # Code from module fpending:
  # Code from module fstatat:
  # Code from module fsync:
  # Code from module getdtablesize:
  # Code from module getgroups:
  # Code from module getloadavg:
  # Code from module getopt-gnu:
  # Code from module getopt-posix:
  # Code from module gettext-h:
  # Code from module gettime:
  # Code from module gettimeofday:
  # Code from module group-member:
  # Code from module include_next:
  # Code from module intprops:
  # Code from module inttypes-incomplete:
  # Code from module largefile:
  AC_REQUIRE([AC_SYS_LARGEFILE])
  # Code from module lstat:
  # Code from module manywarnings:
  # Code from module memrchr:
  # Code from module mkostemp:
  # Code from module mktime:
  # Code from module multiarch:
  # Code from module nocrash:
  # Code from module openat-h:
  # Code from module pathmax:
  # Code from module pipe2:
  # Code from module pselect:
  # Code from module pthread_sigmask:
  # Code from module putenv:
  # Code from module qacl:
  # Code from module readlink:
  # Code from module readlinkat:
  # Code from module root-uid:
  # Code from module secure_getenv:
  # Code from module sig2str:
  # Code from module signal-h:
  # Code from module snippet/_Noreturn:
  # Code from module snippet/arg-nonnull:
  # Code from module snippet/c++defs:
  # Code from module snippet/warn-on-use:
  # Code from module socklen:
  # Code from module ssize_t:
  # Code from module stat:
  # Code from module stat-time:
  # Code from module stdalign:
  # Code from module stdarg:
  dnl Some compilers (e.g., AIX 5.3 cc) need to be in c99 mode
  dnl for the builtin va_copy to work.  With Autoconf 2.60 or later,
  dnl gl_PROG_CC_C99 arranges for this.  With older Autoconf gl_PROG_CC_C99
  dnl shouldn't hurt, though installers are on their own to set c99 mode.
  gl_PROG_CC_C99
  # Code from module stdbool:
  # Code from module stddef:
  # Code from module stdint:
  # Code from module stdio:
  # Code from module stdlib:
  # Code from module strftime:
  # Code from module string:
  # Code from module strtoimax:
  # Code from module strtoll:
  # Code from module strtoull:
  # Code from module strtoumax:
  # Code from module symlink:
  # Code from module sys_select:
  # Code from module sys_stat:
  # Code from module sys_time:
  # Code from module tempname:
  # Code from module time:
  # Code from module time_r:
  # Code from module timer-time:
  # Code from module timespec:
  # Code from module timespec-add:
  # Code from module timespec-sub:
  # Code from module u64:
  # Code from module unistd:
  # Code from module unsetenv:
  # Code from module update-copyright:
  # Code from module utimens:
  # Code from module verify:
  # Code from module warnings:
  # Code from module xalloc-oversized:
])
m4trace:m4/gnulib-comp.m4:162: -1- AC_DEFUN([gl_INIT], [
  AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
  gl_cond_libtool=false
  gl_libdeps=
  gl_ltlibdeps=
  gl_m4_base='m4'
  m4_pushdef([AC_LIBOBJ], m4_defn([gl_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gl_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gl_LIBSOURCES]))
  m4_pushdef([gl_LIBSOURCES_LIST], [])
  m4_pushdef([gl_LIBSOURCES_DIR], [])
  gl_COMMON
  gl_source_base='lib'
  gl_FUNC_ALLOCA
  gl_BYTESWAP
  AC_CHECK_FUNCS_ONCE([readlinkat])
  gl_CLOCK_TIME
  gl_CLOSE_STREAM
  gl_MODULE_INDICATOR([close-stream])
  gl_COUNT_ONE_BITS
  gl_COUNT_TRAILING_ZEROS
  gl_MD5
  gl_SHA1
  gl_SHA256
  gl_SHA512
  gl_DIRENT_H
  AC_REQUIRE([gl_C99_STRTOLD])
  gl_FUNC_DUP2
  if test $HAVE_DUP2 = 0 || test $REPLACE_DUP2 = 1; then
    AC_LIBOBJ([dup2])
    gl_PREREQ_DUP2
  fi
  gl_UNISTD_MODULE_INDICATOR([dup2])
  gl_ENVIRON
  gl_UNISTD_MODULE_INDICATOR([environ])
  gl_HEADER_ERRNO_H
  gl_EXECINFO_H
  AC_REQUIRE([gl_EXTERN_INLINE])
  gl_FUNC_FACCESSAT
  if test $HAVE_FACCESSAT = 0; then
    AC_LIBOBJ([faccessat])
    gl_PREREQ_FACCESSAT
  fi
  gl_MODULE_INDICATOR([faccessat])
  gl_UNISTD_MODULE_INDICATOR([faccessat])
  gl_FUNC_FCNTL
  if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
    AC_LIBOBJ([fcntl])
  fi
  gl_FCNTL_MODULE_INDICATOR([fcntl])
  gl_FCNTL_H
  gl_FUNC_FDATASYNC
  if test $HAVE_FDATASYNC = 0; then
    AC_LIBOBJ([fdatasync])
  fi
  gl_UNISTD_MODULE_INDICATOR([fdatasync])
  gl_FUNC_FDOPENDIR
  if test $HAVE_FDOPENDIR = 0 || test $REPLACE_FDOPENDIR = 1; then
    AC_LIBOBJ([fdopendir])
  fi
  gl_DIRENT_MODULE_INDICATOR([fdopendir])
  gl_MODULE_INDICATOR([fdopendir])
  gl_FILEMODE
  gl_FUNC_FPENDING
  if test $gl_cv_func___fpending = no; then
    AC_LIBOBJ([fpending])
    gl_PREREQ_FPENDING
  fi
  gl_FUNC_FSTATAT
  if test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1; then
    AC_LIBOBJ([fstatat])
  fi
  gl_SYS_STAT_MODULE_INDICATOR([fstatat])
  gl_FUNC_FSYNC
  if test $HAVE_FSYNC = 0; then
    AC_LIBOBJ([fsync])
    gl_PREREQ_FSYNC
  fi
  gl_UNISTD_MODULE_INDICATOR([fsync])
  gl_GETLOADAVG
  if test $HAVE_GETLOADAVG = 0; then
    AC_LIBOBJ([getloadavg])
    gl_PREREQ_GETLOADAVG
  fi
  gl_STDLIB_MODULE_INDICATOR([getloadavg])
  gl_FUNC_GETOPT_GNU
  if test $REPLACE_GETOPT = 1; then
    AC_LIBOBJ([getopt])
    AC_LIBOBJ([getopt1])
    gl_PREREQ_GETOPT
    dnl Arrange for unistd.h to include getopt.h.
    GNULIB_GL_UNISTD_H_GETOPT=1
  fi
  AC_SUBST([GNULIB_GL_UNISTD_H_GETOPT])
  gl_MODULE_INDICATOR_FOR_TESTS([getopt-gnu])
  gl_FUNC_GETOPT_POSIX
  if test $REPLACE_GETOPT = 1; then
    AC_LIBOBJ([getopt])
    AC_LIBOBJ([getopt1])
    gl_PREREQ_GETOPT
    dnl Arrange for unistd.h to include getopt.h.
    GNULIB_GL_UNISTD_H_GETOPT=1
  fi
  AC_SUBST([GNULIB_GL_UNISTD_H_GETOPT])
  gl_GETTIME
  gl_FUNC_GETTIMEOFDAY
  if test $HAVE_GETTIMEOFDAY = 0 || test $REPLACE_GETTIMEOFDAY = 1; then
    AC_LIBOBJ([gettimeofday])
    gl_PREREQ_GETTIMEOFDAY
  fi
  gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
  gl_INTTYPES_INCOMPLETE
  AC_REQUIRE([gl_LARGEFILE])
  gl_FUNC_LSTAT
  if test $REPLACE_LSTAT = 1; then
    AC_LIBOBJ([lstat])
    gl_PREREQ_LSTAT
  fi
  gl_SYS_STAT_MODULE_INDICATOR([lstat])
  gl_FUNC_MEMRCHR
  if test $ac_cv_func_memrchr = no; then
    AC_LIBOBJ([memrchr])
    gl_PREREQ_MEMRCHR
  fi
  gl_STRING_MODULE_INDICATOR([memrchr])
  gl_FUNC_MKOSTEMP
  if test $HAVE_MKOSTEMP = 0; then
    AC_LIBOBJ([mkostemp])
    gl_PREREQ_MKOSTEMP
  fi
  gl_MODULE_INDICATOR([mkostemp])
  gl_STDLIB_MODULE_INDICATOR([mkostemp])
  gl_FUNC_MKTIME
  if test $REPLACE_MKTIME = 1; then
    AC_LIBOBJ([mktime])
    gl_PREREQ_MKTIME
  fi
  gl_TIME_MODULE_INDICATOR([mktime])
  gl_MULTIARCH
  gl_FUNC_PIPE2
  gl_UNISTD_MODULE_INDICATOR([pipe2])
  gl_FUNC_PSELECT
  if test $HAVE_PSELECT = 0 || test $REPLACE_PSELECT = 1; then
    AC_LIBOBJ([pselect])
  fi
  gl_SYS_SELECT_MODULE_INDICATOR([pselect])
  gl_FUNC_PTHREAD_SIGMASK
  if test $HAVE_PTHREAD_SIGMASK = 0 || test $REPLACE_PTHREAD_SIGMASK = 1; then
    AC_LIBOBJ([pthread_sigmask])
    gl_PREREQ_PTHREAD_SIGMASK
  fi
  gl_SIGNAL_MODULE_INDICATOR([pthread_sigmask])
  gl_FUNC_PUTENV
  if test $REPLACE_PUTENV = 1; then
    AC_LIBOBJ([putenv])
    gl_PREREQ_PUTENV
  fi
  gl_STDLIB_MODULE_INDICATOR([putenv])
  gl_FUNC_ACL
  gl_FUNC_READLINK
  if test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1; then
    AC_LIBOBJ([readlink])
    gl_PREREQ_READLINK
  fi
  gl_UNISTD_MODULE_INDICATOR([readlink])
  gl_FUNC_READLINKAT
  if test $HAVE_READLINKAT = 0; then
    AC_LIBOBJ([readlinkat])
  fi
  gl_UNISTD_MODULE_INDICATOR([readlinkat])
  gl_FUNC_SIG2STR
  if test $ac_cv_func_sig2str = no; then
    AC_LIBOBJ([sig2str])
    gl_PREREQ_SIG2STR
  fi
  gl_SIGNAL_H
  gl_TYPE_SOCKLEN_T
  gt_TYPE_SSIZE_T
  gl_STAT_TIME
  gl_STAT_BIRTHTIME
  gl_STDALIGN_H
  gl_STDARG_H
  AM_STDBOOL_H
  gl_STDDEF_H
  gl_STDINT_H
  gl_STDIO_H
  gl_STDLIB_H
  gl_FUNC_GNU_STRFTIME
  gl_HEADER_STRING_H
  gl_FUNC_STRTOIMAX
  if test $HAVE_DECL_STRTOIMAX = 0 || test $REPLACE_STRTOIMAX = 1; then
    AC_LIBOBJ([strtoimax])
    gl_PREREQ_STRTOIMAX
  fi
  gl_INTTYPES_MODULE_INDICATOR([strtoimax])
  gl_FUNC_STRTOUMAX
  if test $HAVE_DECL_STRTOUMAX = 0 || test $REPLACE_STRTOUMAX = 1; then
    AC_LIBOBJ([strtoumax])
    gl_PREREQ_STRTOUMAX
  fi
  gl_INTTYPES_MODULE_INDICATOR([strtoumax])
  gl_FUNC_SYMLINK
  if test $HAVE_SYMLINK = 0 || test $REPLACE_SYMLINK = 1; then
    AC_LIBOBJ([symlink])
  fi
  gl_UNISTD_MODULE_INDICATOR([symlink])
  gl_HEADER_SYS_SELECT
  AC_PROG_MKDIR_P
  gl_HEADER_SYS_STAT_H
  AC_PROG_MKDIR_P
  gl_HEADER_SYS_TIME_H
  AC_PROG_MKDIR_P
  gl_HEADER_TIME_H
  gl_TIME_R
  if test $HAVE_LOCALTIME_R = 0 || test $REPLACE_LOCALTIME_R = 1; then
    AC_LIBOBJ([time_r])
    gl_PREREQ_TIME_R
  fi
  gl_TIME_MODULE_INDICATOR([time_r])
  gl_TIMER_TIME
  gl_TIMESPEC
  gl_UNISTD_H
  gl_FUNC_UNSETENV
  if test $HAVE_UNSETENV = 0 || test $REPLACE_UNSETENV = 1; then
    AC_LIBOBJ([unsetenv])
    gl_PREREQ_UNSETENV
  fi
  gl_STDLIB_MODULE_INDICATOR([unsetenv])
  gl_UTIMENS
  gl_gnulib_enabled_260941c0e5dc67ec9e87d1fb321c300b=false
  gl_gnulib_enabled_dosname=false
  gl_gnulib_enabled_euidaccess=false
  gl_gnulib_enabled_getdtablesize=false
  gl_gnulib_enabled_getgroups=false
  gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36=false
  gl_gnulib_enabled_a9786850e999ae65a836a6041e8e5ed1=false
  gl_gnulib_enabled_03e0aaad4cb89ca757653bd367a6ccb7=false
  gl_gnulib_enabled_pathmax=false
  gl_gnulib_enabled_6099e9737f757db36c47fa9d9f02e88c=false
  gl_gnulib_enabled_secure_getenv=false
  gl_gnulib_enabled_stat=false
  gl_gnulib_enabled_strtoll=false
  gl_gnulib_enabled_strtoull=false
  gl_gnulib_enabled_tempname=false
  gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec=false
  func_gl_gnulib_m4code_260941c0e5dc67ec9e87d1fb321c300b ()
  {
    if ! $gl_gnulib_enabled_260941c0e5dc67ec9e87d1fb321c300b; then
      AC_LIBOBJ([openat-proc])
      gl_gnulib_enabled_260941c0e5dc67ec9e87d1fb321c300b=true
    fi
  }
  func_gl_gnulib_m4code_dosname ()
  {
    if ! $gl_gnulib_enabled_dosname; then
      gl_gnulib_enabled_dosname=true
    fi
  }
  func_gl_gnulib_m4code_euidaccess ()
  {
    if ! $gl_gnulib_enabled_euidaccess; then
      gl_FUNC_EUIDACCESS
      if test $HAVE_EUIDACCESS = 0; then
        AC_LIBOBJ([euidaccess])
        gl_PREREQ_EUIDACCESS
      fi
      gl_UNISTD_MODULE_INDICATOR([euidaccess])
      gl_gnulib_enabled_euidaccess=true
      if test $HAVE_EUIDACCESS = 0; then
        func_gl_gnulib_m4code_a9786850e999ae65a836a6041e8e5ed1
      fi
      func_gl_gnulib_m4code_6099e9737f757db36c47fa9d9f02e88c
      if test $HAVE_EUIDACCESS = 0; then
        func_gl_gnulib_m4code_stat
      fi
    fi
  }
  func_gl_gnulib_m4code_getdtablesize ()
  {
    if ! $gl_gnulib_enabled_getdtablesize; then
      gl_FUNC_GETDTABLESIZE
      if test $HAVE_GETDTABLESIZE = 0 || test $REPLACE_GETDTABLESIZE = 1; then
        AC_LIBOBJ([getdtablesize])
        gl_PREREQ_GETDTABLESIZE
      fi
      gl_UNISTD_MODULE_INDICATOR([getdtablesize])
      gl_gnulib_enabled_getdtablesize=true
    fi
  }
  func_gl_gnulib_m4code_getgroups ()
  {
    if ! $gl_gnulib_enabled_getgroups; then
      gl_FUNC_GETGROUPS
      if test $HAVE_GETGROUPS = 0 || test $REPLACE_GETGROUPS = 1; then
        AC_LIBOBJ([getgroups])
      fi
      gl_UNISTD_MODULE_INDICATOR([getgroups])
      gl_gnulib_enabled_getgroups=true
    fi
  }
  func_gl_gnulib_m4code_be453cec5eecf5731a274f2de7f2db36 ()
  {
    if ! $gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36; then
      AC_SUBST([LIBINTL])
      AC_SUBST([LTLIBINTL])
      gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36=true
    fi
  }
  func_gl_gnulib_m4code_a9786850e999ae65a836a6041e8e5ed1 ()
  {
    if ! $gl_gnulib_enabled_a9786850e999ae65a836a6041e8e5ed1; then
      gl_FUNC_GROUP_MEMBER
      if test $HAVE_GROUP_MEMBER = 0; then
        AC_LIBOBJ([group-member])
        gl_PREREQ_GROUP_MEMBER
      fi
      gl_UNISTD_MODULE_INDICATOR([group-member])
      gl_gnulib_enabled_a9786850e999ae65a836a6041e8e5ed1=true
      if test $HAVE_GROUP_MEMBER = 0; then
        func_gl_gnulib_m4code_getgroups
      fi
      if test $HAVE_GROUP_MEMBER = 0; then
        func_gl_gnulib_m4code_682e609604ccaac6be382e4ee3a4eaec
      fi
    fi
  }
  func_gl_gnulib_m4code_03e0aaad4cb89ca757653bd367a6ccb7 ()
  {
    if ! $gl_gnulib_enabled_03e0aaad4cb89ca757653bd367a6ccb7; then
      gl_gnulib_enabled_03e0aaad4cb89ca757653bd367a6ccb7=true
    fi
  }
  func_gl_gnulib_m4code_pathmax ()
  {
    if ! $gl_gnulib_enabled_pathmax; then
      gl_PATHMAX
      gl_gnulib_enabled_pathmax=true
    fi
  }
  func_gl_gnulib_m4code_6099e9737f757db36c47fa9d9f02e88c ()
  {
    if ! $gl_gnulib_enabled_6099e9737f757db36c47fa9d9f02e88c; then
      gl_gnulib_enabled_6099e9737f757db36c47fa9d9f02e88c=true
    fi
  }
  func_gl_gnulib_m4code_secure_getenv ()
  {
    if ! $gl_gnulib_enabled_secure_getenv; then
      gl_FUNC_SECURE_GETENV
      if test $HAVE_SECURE_GETENV = 0; then
        AC_LIBOBJ([secure_getenv])
        gl_PREREQ_SECURE_GETENV
      fi
      gl_STDLIB_MODULE_INDICATOR([secure_getenv])
      gl_gnulib_enabled_secure_getenv=true
    fi
  }
  func_gl_gnulib_m4code_stat ()
  {
    if ! $gl_gnulib_enabled_stat; then
      gl_FUNC_STAT
      if test $REPLACE_STAT = 1; then
        AC_LIBOBJ([stat])
        gl_PREREQ_STAT
      fi
      gl_SYS_STAT_MODULE_INDICATOR([stat])
      gl_gnulib_enabled_stat=true
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_dosname
      fi
      if test $REPLACE_STAT = 1; then
        func_gl_gnulib_m4code_pathmax
      fi
    fi
  }
  func_gl_gnulib_m4code_strtoll ()
  {
    if ! $gl_gnulib_enabled_strtoll; then
      gl_FUNC_STRTOLL
      if test $HAVE_STRTOLL = 0; then
        AC_LIBOBJ([strtoll])
        gl_PREREQ_STRTOLL
      fi
      gl_STDLIB_MODULE_INDICATOR([strtoll])
      gl_gnulib_enabled_strtoll=true
    fi
  }
  func_gl_gnulib_m4code_strtoull ()
  {
    if ! $gl_gnulib_enabled_strtoull; then
      gl_FUNC_STRTOULL
      if test $HAVE_STRTOULL = 0; then
        AC_LIBOBJ([strtoull])
        gl_PREREQ_STRTOULL
      fi
      gl_STDLIB_MODULE_INDICATOR([strtoull])
      gl_gnulib_enabled_strtoull=true
    fi
  }
  func_gl_gnulib_m4code_tempname ()
  {
    if ! $gl_gnulib_enabled_tempname; then
      gl_FUNC_GEN_TEMPNAME
      gl_gnulib_enabled_tempname=true
      func_gl_gnulib_m4code_secure_getenv
    fi
  }
  func_gl_gnulib_m4code_682e609604ccaac6be382e4ee3a4eaec ()
  {
    if ! $gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec; then
      gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec=true
    fi
  }
  if test $HAVE_FACCESSAT = 0; then
    func_gl_gnulib_m4code_260941c0e5dc67ec9e87d1fb321c300b
  fi
  if test $HAVE_FACCESSAT = 0; then
    func_gl_gnulib_m4code_dosname
  fi
  if test $HAVE_FACCESSAT = 0; then
    func_gl_gnulib_m4code_euidaccess
  fi
  if test $HAVE_FACCESSAT = 0; then
    func_gl_gnulib_m4code_03e0aaad4cb89ca757653bd367a6ccb7
  fi
  if test $HAVE_FCNTL = 0 || test $REPLACE_FCNTL = 1; then
    func_gl_gnulib_m4code_getdtablesize
  fi
  if test $HAVE_FDOPENDIR = 0; then
    func_gl_gnulib_m4code_260941c0e5dc67ec9e87d1fb321c300b
  fi
  if test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1; then
    func_gl_gnulib_m4code_260941c0e5dc67ec9e87d1fb321c300b
  fi
  if test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1; then
    func_gl_gnulib_m4code_dosname
  fi
  if test $HAVE_FSTATAT = 0 || test $REPLACE_FSTATAT = 1; then
    func_gl_gnulib_m4code_03e0aaad4cb89ca757653bd367a6ccb7
  fi
  if test $REPLACE_GETOPT = 1; then
    func_gl_gnulib_m4code_be453cec5eecf5731a274f2de7f2db36
  fi
  if test $REPLACE_LSTAT = 1; then
    func_gl_gnulib_m4code_dosname
  fi
  if test $REPLACE_LSTAT = 1; then
    func_gl_gnulib_m4code_stat
  fi
  if test $HAVE_MKOSTEMP = 0; then
    func_gl_gnulib_m4code_tempname
  fi
  if test $HAVE_READLINK = 0 || test $REPLACE_READLINK = 1; then
    func_gl_gnulib_m4code_stat
  fi
  if test $HAVE_READLINKAT = 0; then
    func_gl_gnulib_m4code_260941c0e5dc67ec9e87d1fb321c300b
  fi
  if test $HAVE_READLINKAT = 0; then
    func_gl_gnulib_m4code_dosname
  fi
  if test $HAVE_READLINKAT = 0; then
    func_gl_gnulib_m4code_03e0aaad4cb89ca757653bd367a6ccb7
  fi
  if { test $HAVE_DECL_STRTOIMAX = 0 || test $REPLACE_STRTOIMAX = 1; } && test $ac_cv_type_long_long_int = yes; then
    func_gl_gnulib_m4code_strtoll
  fi
  if { test $HAVE_DECL_STRTOUMAX = 0 || test $REPLACE_STRTOUMAX = 1; } && test $ac_cv_type_unsigned_long_long_int = yes; then
    func_gl_gnulib_m4code_strtoull
  fi
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_260941c0e5dc67ec9e87d1fb321c300b], [$gl_gnulib_enabled_260941c0e5dc67ec9e87d1fb321c300b])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_dosname], [$gl_gnulib_enabled_dosname])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_euidaccess], [$gl_gnulib_enabled_euidaccess])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_getdtablesize], [$gl_gnulib_enabled_getdtablesize])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_getgroups], [$gl_gnulib_enabled_getgroups])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_be453cec5eecf5731a274f2de7f2db36], [$gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_a9786850e999ae65a836a6041e8e5ed1], [$gl_gnulib_enabled_a9786850e999ae65a836a6041e8e5ed1])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_03e0aaad4cb89ca757653bd367a6ccb7], [$gl_gnulib_enabled_03e0aaad4cb89ca757653bd367a6ccb7])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_pathmax], [$gl_gnulib_enabled_pathmax])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_6099e9737f757db36c47fa9d9f02e88c], [$gl_gnulib_enabled_6099e9737f757db36c47fa9d9f02e88c])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_secure_getenv], [$gl_gnulib_enabled_secure_getenv])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_stat], [$gl_gnulib_enabled_stat])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_strtoll], [$gl_gnulib_enabled_strtoll])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_strtoull], [$gl_gnulib_enabled_strtoull])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_tempname], [$gl_gnulib_enabled_tempname])
  AM_CONDITIONAL([gl_GNULIB_ENABLED_682e609604ccaac6be382e4ee3a4eaec], [$gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec])
  # End of code from modules
  m4_ifval(gl_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gl_LIBSOURCES_DIR])[ ||
      for gl_file in ]gl_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gl_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([gl_LIBSOURCES_DIR])
  m4_popdef([gl_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gl_libobjs=
    gl_ltlibobjs=
    if test -n "$gl_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $gl_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gl_libobjs="$gl_libobjs $i.$ac_objext"
        gl_ltlibobjs="$gl_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([gl_LIBOBJS], [$gl_libobjs])
    AC_SUBST([gl_LTLIBOBJS], [$gl_ltlibobjs])
  ])
  gltests_libdeps=
  gltests_ltlibdeps=
  m4_pushdef([AC_LIBOBJ], m4_defn([gltests_LIBOBJ]))
  m4_pushdef([AC_REPLACE_FUNCS], m4_defn([gltests_REPLACE_FUNCS]))
  m4_pushdef([AC_LIBSOURCES], m4_defn([gltests_LIBSOURCES]))
  m4_pushdef([gltests_LIBSOURCES_LIST], [])
  m4_pushdef([gltests_LIBSOURCES_DIR], [])
  gl_COMMON
  gl_source_base='tests'
changequote(,)dnl
  gltests_WITNESS=IN_`echo "${PACKAGE-$PACKAGE_TARNAME}" | LC_ALL=C tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ | LC_ALL=C sed -e 's/[^A-Z0-9_]/_/g'`_GNULIB_TESTS
changequote([, ])dnl
  AC_SUBST([gltests_WITNESS])
  gl_module_indicator_condition=$gltests_WITNESS
  m4_pushdef([gl_MODULE_INDICATOR_CONDITION], [$gl_module_indicator_condition])
  m4_pattern_allow([^gl_GNULIB_ENABLED_])
  m4_popdef([gl_MODULE_INDICATOR_CONDITION])
  m4_ifval(gltests_LIBSOURCES_LIST, [
    m4_syscmd([test ! -d ]m4_defn([gltests_LIBSOURCES_DIR])[ ||
      for gl_file in ]gltests_LIBSOURCES_LIST[ ; do
        if test ! -r ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file ; then
          echo "missing file ]m4_defn([gltests_LIBSOURCES_DIR])[/$gl_file" >&2
          exit 1
        fi
      done])dnl
      m4_if(m4_sysval, [0], [],
        [AC_FATAL([expected source file, required through AC_LIBSOURCES, not found])])
  ])
  m4_popdef([gltests_LIBSOURCES_DIR])
  m4_popdef([gltests_LIBSOURCES_LIST])
  m4_popdef([AC_LIBSOURCES])
  m4_popdef([AC_REPLACE_FUNCS])
  m4_popdef([AC_LIBOBJ])
  AC_CONFIG_COMMANDS_PRE([
    gltests_libobjs=
    gltests_ltlibobjs=
    if test -n "$gltests_LIBOBJS"; then
      # Remove the extension.
      sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $gltests_LIBOBJS; do echo "$i"; done | sed -e "$sed_drop_objext" | sort | uniq`; do
        gltests_libobjs="$gltests_libobjs $i.$ac_objext"
        gltests_ltlibobjs="$gltests_ltlibobjs $i.lo"
      done
    fi
    AC_SUBST([gltests_LIBOBJS], [$gltests_libobjs])
    AC_SUBST([gltests_LTLIBOBJS], [$gltests_ltlibobjs])
  ])
  LIBGNU_LIBDEPS="$gl_libdeps"
  AC_SUBST([LIBGNU_LIBDEPS])
  LIBGNU_LTLIBDEPS="$gl_ltlibdeps"
  AC_SUBST([LIBGNU_LTLIBDEPS])
])
m4trace:m4/gnulib-comp.m4:736: -1- AC_DEFUN([gl_LIBOBJ], [
  AS_LITERAL_IF([$1], [gl_LIBSOURCES([$1.c])])dnl
  gl_LIBOBJS="$gl_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:743: -1- AC_DEFUN([gl_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gl_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:752: -1- AC_DEFUN([gl_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gl_LIBSOURCES_DIR], [lib])
      m4_append([gl_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:763: -1- AC_DEFUN([gltests_LIBOBJ], [
  AS_LITERAL_IF([$1], [gltests_LIBSOURCES([$1.c])])dnl
  gltests_LIBOBJS="$gltests_LIBOBJS $1.$ac_objext"
])
m4trace:m4/gnulib-comp.m4:770: -1- AC_DEFUN([gltests_REPLACE_FUNCS], [
  m4_foreach_w([gl_NAME], [$1], [AC_LIBSOURCES(gl_NAME[.c])])dnl
  AC_CHECK_FUNCS([$1], , [gltests_LIBOBJ($ac_func)])
])
m4trace:m4/gnulib-comp.m4:779: -1- AC_DEFUN([gltests_LIBSOURCES], [
  m4_foreach([_gl_NAME], [$1], [
    m4_if(_gl_NAME, [alloca.c], [], [
      m4_define([gltests_LIBSOURCES_DIR], [tests])
      m4_append([gltests_LIBSOURCES_LIST], _gl_NAME, [ ])
    ])
  ])
])
m4trace:m4/gnulib-comp.m4:790: -1- AC_DEFUN([gl_FILE_LIST], [
  build-aux/snippet/_Noreturn.h
  build-aux/snippet/arg-nonnull.h
  build-aux/snippet/c++defs.h
  build-aux/snippet/warn-on-use.h
  build-aux/update-copyright
  lib/acl-errno-valid.c
  lib/acl-internal.h
  lib/acl.h
  lib/acl_entries.c
  lib/alloca.in.h
  lib/allocator.c
  lib/allocator.h
  lib/at-func.c
  lib/binary-io.c
  lib/binary-io.h
  lib/byteswap.in.h
  lib/c-ctype.c
  lib/c-ctype.h
  lib/c-strcase.h
  lib/c-strcasecmp.c
  lib/c-strncasecmp.c
  lib/careadlinkat.c
  lib/careadlinkat.h
  lib/close-stream.c
  lib/close-stream.h
  lib/count-one-bits.c
  lib/count-one-bits.h
  lib/count-trailing-zeros.c
  lib/count-trailing-zeros.h
  lib/dirent.in.h
  lib/dosname.h
  lib/dtoastr.c
  lib/dtotimespec.c
  lib/dup2.c
  lib/errno.in.h
  lib/euidaccess.c
  lib/execinfo.c
  lib/execinfo.in.h
  lib/faccessat.c
  lib/fcntl.c
  lib/fcntl.in.h
  lib/fdatasync.c
  lib/fdopendir.c
  lib/file-has-acl.c
  lib/filemode.c
  lib/filemode.h
  lib/fpending.c
  lib/fpending.h
  lib/fstatat.c
  lib/fsync.c
  lib/ftoastr.c
  lib/ftoastr.h
  lib/getdtablesize.c
  lib/getgroups.c
  lib/getloadavg.c
  lib/getopt.c
  lib/getopt.in.h
  lib/getopt1.c
  lib/getopt_int.h
  lib/gettext.h
  lib/gettime.c
  lib/gettimeofday.c
  lib/gl_openssl.h
  lib/group-member.c
  lib/intprops.h
  lib/inttypes.in.h
  lib/lstat.c
  lib/md5.c
  lib/md5.h
  lib/memrchr.c
  lib/mkostemp.c
  lib/mktime-internal.h
  lib/mktime.c
  lib/openat-priv.h
  lib/openat-proc.c
  lib/openat.h
  lib/pathmax.h
  lib/pipe2.c
  lib/pselect.c
  lib/pthread_sigmask.c
  lib/putenv.c
  lib/qcopy-acl.c
  lib/qset-acl.c
  lib/readlink.c
  lib/readlinkat.c
  lib/root-uid.h
  lib/secure_getenv.c
  lib/sha1.c
  lib/sha1.h
  lib/sha256.c
  lib/sha256.h
  lib/sha512.c
  lib/sha512.h
  lib/sig2str.c
  lib/sig2str.h
  lib/signal.in.h
  lib/stat-time.c
  lib/stat-time.h
  lib/stat.c
  lib/stdalign.in.h
  lib/stdarg.in.h
  lib/stdbool.in.h
  lib/stddef.in.h
  lib/stdint.in.h
  lib/stdio.in.h
  lib/stdlib.in.h
  lib/strftime.c
  lib/strftime.h
  lib/string.in.h
  lib/strtoimax.c
  lib/strtol.c
  lib/strtoll.c
  lib/strtoul.c
  lib/strtoull.c
  lib/strtoumax.c
  lib/symlink.c
  lib/sys_select.in.h
  lib/sys_stat.in.h
  lib/sys_time.in.h
  lib/tempname.c
  lib/tempname.h
  lib/time.in.h
  lib/time_r.c
  lib/timespec-add.c
  lib/timespec-sub.c
  lib/timespec.c
  lib/timespec.h
  lib/u64.c
  lib/u64.h
  lib/unistd.c
  lib/unistd.in.h
  lib/unsetenv.c
  lib/utimens.c
  lib/utimens.h
  lib/verify.h
  lib/xalloc-oversized.h
  m4/00gnulib.m4
  m4/absolute-header.m4
  m4/acl.m4
  m4/alloca.m4
  m4/byteswap.m4
  m4/c-strtod.m4
  m4/clock_time.m4
  m4/close-stream.m4
  m4/count-one-bits.m4
  m4/count-trailing-zeros.m4
  m4/dirent_h.m4
  m4/dup2.m4
  m4/environ.m4
  m4/errno_h.m4
  m4/euidaccess.m4
  m4/execinfo.m4
  m4/extensions.m4
  m4/extern-inline.m4
  m4/faccessat.m4
  m4/fcntl-o.m4
  m4/fcntl.m4
  m4/fcntl_h.m4
  m4/fdatasync.m4
  m4/fdopendir.m4
  m4/filemode.m4
  m4/fpending.m4
  m4/fstatat.m4
  m4/fsync.m4
  m4/getdtablesize.m4
  m4/getgroups.m4
  m4/getloadavg.m4
  m4/getopt.m4
  m4/gettime.m4
  m4/gettimeofday.m4
  m4/gl-openssl.m4
  m4/gnulib-common.m4
  m4/group-member.m4
  m4/include_next.m4
  m4/inttypes.m4
  m4/largefile.m4
  m4/longlong.m4
  m4/lstat.m4
  m4/manywarnings.m4
  m4/md5.m4
  m4/memrchr.m4
  m4/mkostemp.m4
  m4/mktime.m4
  m4/multiarch.m4
  m4/nocrash.m4
  m4/off_t.m4
  m4/pathmax.m4
  m4/pipe2.m4
  m4/pselect.m4
  m4/pthread_sigmask.m4
  m4/putenv.m4
  m4/readlink.m4
  m4/readlinkat.m4
  m4/secure_getenv.m4
  m4/setenv.m4
  m4/sha1.m4
  m4/sha256.m4
  m4/sha512.m4
  m4/sig2str.m4
  m4/signal_h.m4
  m4/socklen.m4
  m4/ssize_t.m4
  m4/st_dm_mode.m4
  m4/stat-time.m4
  m4/stat.m4
  m4/stdalign.m4
  m4/stdarg.m4
  m4/stdbool.m4
  m4/stddef_h.m4
  m4/stdint.m4
  m4/stdio_h.m4
  m4/stdlib_h.m4
  m4/strftime.m4
  m4/string_h.m4
  m4/strtoimax.m4
  m4/strtoll.m4
  m4/strtoull.m4
  m4/strtoumax.m4
  m4/symlink.m4
  m4/sys_select_h.m4
  m4/sys_socket_h.m4
  m4/sys_stat_h.m4
  m4/sys_time_h.m4
  m4/tempname.m4
  m4/time_h.m4
  m4/time_r.m4
  m4/timer_time.m4
  m4/timespec.m4
  m4/tm_gmtoff.m4
  m4/unistd_h.m4
  m4/utimbuf.m4
  m4/utimens.m4
  m4/utimes.m4
  m4/warn-on-use.m4
  m4/warnings.m4
  m4/wchar_t.m4
])
m4trace:m4/group-member.m4:11: -1- AC_DEFUN([gl_FUNC_GROUP_MEMBER], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare group_member().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  dnl Do this replacement check manually because I want the hyphen
  dnl (not the underscore) in the filename.
  AC_CHECK_FUNC([group_member], , [
    HAVE_GROUP_MEMBER=0
  ])
])
m4trace:m4/group-member.m4:26: -1- AC_DEFUN([gl_PREREQ_GROUP_MEMBER], [
  AC_REQUIRE([AC_FUNC_GETGROUPS])
])
m4trace:m4/include_next.m4:35: -1- AC_DEFUN([gl_INCLUDE_NEXT], [
  AC_LANG_PREPROC_REQUIRE()
  AC_CACHE_CHECK([whether the preprocessor supports include_next],
    [gl_cv_have_include_next],
    [rm -rf conftestd1a conftestd1b conftestd2
     mkdir conftestd1a conftestd1b conftestd2
     dnl IBM C 9.0, 10.1 (original versions, prior to the 2009-01 updates) on
     dnl AIX 6.1 support include_next when used as first preprocessor directive
     dnl in a file, but not when preceded by another include directive. Check
     dnl for this bug by including <stdio.h>.
     dnl Additionally, with this same compiler, include_next is a no-op when
     dnl used in a header file that was included by specifying its absolute
     dnl file name. Despite these two bugs, include_next is used in the
     dnl compiler's <math.h>. By virtue of the second bug, we need to use
     dnl include_next as well in this case.
     cat <<EOF > conftestd1a/conftest.h
#define DEFINED_IN_CONFTESTD1
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd1b/conftest.h
#define DEFINED_IN_CONFTESTD1
#include <stdio.h>
#include_next <conftest.h>
#ifdef DEFINED_IN_CONFTESTD2
int foo;
#else
#error "include_next doesn't work"
#endif
EOF
     cat <<EOF > conftestd2/conftest.h
#ifndef DEFINED_IN_CONFTESTD1
#error "include_next test doesn't work"
#endif
#define DEFINED_IN_CONFTESTD2
EOF
     gl_save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1b -Iconftestd2"
dnl We intentionally avoid using AC_LANG_SOURCE here.
     AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
       [gl_cv_have_include_next=yes],
       [CPPFLAGS="$gl_save_CPPFLAGS -Iconftestd1a -Iconftestd2"
        AC_COMPILE_IFELSE([AC_LANG_DEFINES_PROVIDED[#include <conftest.h>]],
          [gl_cv_have_include_next=buggy],
          [gl_cv_have_include_next=no])
       ])
     CPPFLAGS="$gl_save_CPPFLAGS"
     rm -rf conftestd1a conftestd1b conftestd2
    ])
  PRAGMA_SYSTEM_HEADER=
  if test $gl_cv_have_include_next = yes; then
    INCLUDE_NEXT=include_next
    INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    if test -n "$GCC"; then
      PRAGMA_SYSTEM_HEADER='#pragma GCC system_header'
    fi
  else
    if test $gl_cv_have_include_next = buggy; then
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include_next
    else
      INCLUDE_NEXT=include
      INCLUDE_NEXT_AS_FIRST_DIRECTIVE=include
    fi
  fi
  AC_SUBST([INCLUDE_NEXT])
  AC_SUBST([INCLUDE_NEXT_AS_FIRST_DIRECTIVE])
  AC_SUBST([PRAGMA_SYSTEM_HEADER])
  AC_CACHE_CHECK([whether system header files limit the line length],
    [gl_cv_pragma_columns],
    [dnl HP NonStop systems, which define __TANDEM, have this misfeature.
     AC_EGREP_CPP([choke me],
       [
#ifdef __TANDEM
choke me
#endif
       ],
       [gl_cv_pragma_columns=yes],
       [gl_cv_pragma_columns=no])
    ])
  if test $gl_cv_pragma_columns = yes; then
    PRAGMA_COLUMNS="#pragma COLUMNS 10000"
  else
    PRAGMA_COLUMNS=
  fi
  AC_SUBST([PRAGMA_COLUMNS])
])
m4trace:m4/include_next.m4:153: -1- AC_DEFUN([gl_CHECK_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [check])
])
m4trace:m4/include_next.m4:163: -1- AC_DEFUN([gl_NEXT_HEADERS], [
  gl_NEXT_HEADERS_INTERNAL([$1], [assume])
])
m4trace:m4/include_next.m4:169: -1- AC_DEFUN([gl_NEXT_HEADERS_INTERNAL], [
  AC_REQUIRE([gl_INCLUDE_NEXT])
  AC_REQUIRE([AC_CANONICAL_HOST])

  m4_if([$2], [check],
    [AC_CHECK_HEADERS_ONCE([$1])
    ])

dnl FIXME: gl_next_header and gl_header_exists must be used unquoted
dnl until we can assume autoconf 2.64 or newer.
  m4_foreach_w([gl_HEADER_NAME], [$1],
    [AS_VAR_PUSHDEF([gl_next_header],
                    [gl_cv_next_]m4_defn([gl_HEADER_NAME]))
     if test $gl_cv_have_include_next = yes; then
       AS_VAR_SET(gl_next_header, ['<'gl_HEADER_NAME'>'])
     else
       AC_CACHE_CHECK(
         [absolute name of <]m4_defn([gl_HEADER_NAME])[>],
         m4_defn([gl_next_header]),
         [m4_if([$2], [check],
            [AS_VAR_PUSHDEF([gl_header_exists],
                            [ac_cv_header_]m4_defn([gl_HEADER_NAME]))
             if test AS_VAR_GET(gl_header_exists) = yes; then
             AS_VAR_POPDEF([gl_header_exists])
            ])
           gl_ABSOLUTE_HEADER_ONE(gl_HEADER_NAME)
           AS_VAR_COPY([gl_header], [gl_cv_absolute_]AS_TR_SH(gl_HEADER_NAME))
           AS_VAR_SET(gl_next_header, ['"'$gl_header'"'])
          m4_if([$2], [check],
            [else
               AS_VAR_SET(gl_next_header, ['<'gl_HEADER_NAME'>'])
             fi
            ])
         ])
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_]m4_defn([gl_HEADER_NAME])),
       [AS_VAR_GET(gl_next_header)])
     if test $gl_cv_have_include_next = yes || test $gl_cv_have_include_next = buggy; then
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include_next'
       gl_next_as_first_directive='<'gl_HEADER_NAME'>'
     else
       # INCLUDE_NEXT_AS_FIRST_DIRECTIVE='include'
       gl_next_as_first_directive=AS_VAR_GET(gl_next_header)
     fi
     AC_SUBST(
       AS_TR_CPP([NEXT_AS_FIRST_DIRECTIVE_]m4_defn([gl_HEADER_NAME])),
       [$gl_next_as_first_directive])
     AS_VAR_POPDEF([gl_next_header])])
])
m4trace:m4/inttypes.m4:10: -1- AC_DEFUN([gl_INTTYPES_H], [
  AC_REQUIRE([gl_INTTYPES_INCOMPLETE])
  gl_INTTYPES_PRI_SCN
])
m4trace:m4/inttypes.m4:16: -1- AC_DEFUN_ONCE([gl_INTTYPES_INCOMPLETE], [
  AC_REQUIRE([gl_STDINT_H])
  AC_CHECK_HEADERS_ONCE([inttypes.h])

  dnl Override <inttypes.h> always, so that the portability warnings work.
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
  gl_CHECK_NEXT_HEADERS([inttypes.h])

  AC_REQUIRE([gl_MULTIARCH])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <inttypes.h>
    ]], [imaxabs imaxdiv strtoimax strtoumax])
])
m4trace:m4/inttypes.m4:34: -1- AC_DEFUN([gl_INTTYPES_PRI_SCN], [
  AC_REQUIRE([gt_INTTYPES_PRI])

  PRIPTR_PREFIX=
  if test -n "$STDINT_H"; then
    dnl Using the gnulib <stdint.h>. It always defines intptr_t to 'long'.
    PRIPTR_PREFIX='"l"'
  else
    dnl Using the system's <stdint.h>.
    for glpfx in '' l ll I64; do
      case $glpfx in
        '')  gltype1='int';;
        l)   gltype1='long int';;
        ll)  gltype1='long long int';;
        I64) gltype1='__int64';;
      esac
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[#include <stdint.h>
           extern intptr_t foo;
           extern $gltype1 foo;]])],
        [PRIPTR_PREFIX='"'$glpfx'"'])
      test -n "$PRIPTR_PREFIX" && break
    done
  fi
  AC_SUBST([PRIPTR_PREFIX])

  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [INT32_MAX_LT_INTMAX_MAX],
    [defined INT32_MAX && defined INTMAX_MAX],
    [INT32_MAX < INTMAX_MAX],
    [sizeof (int) < sizeof (long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [INT64_MAX_EQ_LONG_MAX],
      [defined INT64_MAX],
      [INT64_MAX == LONG_MAX],
      [sizeof (long long int) == sizeof (long int)])
  else
    INT64_MAX_EQ_LONG_MAX=-1
  fi
  gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
    [UINT32_MAX_LT_UINTMAX_MAX],
    [defined UINT32_MAX && defined UINTMAX_MAX],
    [UINT32_MAX < UINTMAX_MAX],
    [sizeof (unsigned int) < sizeof (unsigned long long int)])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION(
      [UINT64_MAX_EQ_ULONG_MAX],
      [defined UINT64_MAX],
      [UINT64_MAX == ULONG_MAX],
      [sizeof (unsigned long long int) == sizeof (unsigned long int)])
  else
    UINT64_MAX_EQ_ULONG_MAX=-1
  fi
])
m4trace:m4/inttypes.m4:97: -1- AC_DEFUN([gl_INTTYPES_CHECK_LONG_LONG_INT_CONDITION], [
  AC_CACHE_CHECK([whether $3],
    [gl_cv_test_$1],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[/* Work also in C++ mode.  */
            #define __STDC_LIMIT_MACROS 1

            /* Work if build is not clean.  */
            #define _GL_JUST_INCLUDE_SYSTEM_STDINT_H

            #include <limits.h>
            #if HAVE_STDINT_H
             #include <stdint.h>
            #endif

            #if $2
             #define CONDITION ($3)
            #elif HAVE_LONG_LONG_INT
             #define CONDITION ($4)
            #else
             #define CONDITION 0
            #endif
            int test[CONDITION ? 1 : -1];]])],
       [gl_cv_test_$1=yes],
       [gl_cv_test_$1=no])])
  if test $gl_cv_test_$1 = yes; then
    $1=1;
  else
    $1=0;
  fi
  AC_SUBST([$1])
])
m4trace:m4/inttypes.m4:132: -1- AC_DEFUN([gl_INTTYPES_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/inttypes.m4:139: -1- AC_DEFUN([gl_INTTYPES_H_DEFAULTS], [
  GNULIB_IMAXABS=0;      AC_SUBST([GNULIB_IMAXABS])
  GNULIB_IMAXDIV=0;      AC_SUBST([GNULIB_IMAXDIV])
  GNULIB_STRTOIMAX=0;    AC_SUBST([GNULIB_STRTOIMAX])
  GNULIB_STRTOUMAX=0;    AC_SUBST([GNULIB_STRTOUMAX])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_IMAXABS=1;   AC_SUBST([HAVE_DECL_IMAXABS])
  HAVE_DECL_IMAXDIV=1;   AC_SUBST([HAVE_DECL_IMAXDIV])
  HAVE_DECL_STRTOIMAX=1; AC_SUBST([HAVE_DECL_STRTOIMAX])
  HAVE_DECL_STRTOUMAX=1; AC_SUBST([HAVE_DECL_STRTOUMAX])
  REPLACE_STRTOIMAX=0;   AC_SUBST([REPLACE_STRTOIMAX])
  REPLACE_STRTOUMAX=0;   AC_SUBST([REPLACE_STRTOUMAX])
  INT32_MAX_LT_INTMAX_MAX=1;  AC_SUBST([INT32_MAX_LT_INTMAX_MAX])
  INT64_MAX_EQ_LONG_MAX='defined _LP64';  AC_SUBST([INT64_MAX_EQ_LONG_MAX])
  PRI_MACROS_BROKEN=0;   AC_SUBST([PRI_MACROS_BROKEN])
  PRIPTR_PREFIX=__PRIPTR_PREFIX;  AC_SUBST([PRIPTR_PREFIX])
  UINT32_MAX_LT_UINTMAX_MAX=1;  AC_SUBST([UINT32_MAX_LT_UINTMAX_MAX])
  UINT64_MAX_EQ_ULONG_MAX='defined _LP64';  AC_SUBST([UINT64_MAX_EQ_ULONG_MAX])
])
m4trace:m4/largefile.m4:11: -1- AC_DEFUN([AC_SYS_LARGEFILE], [AC_ARG_ENABLE(largefile,
               [  --disable-largefile     omit support for large files])
if test "$enable_largefile" != no; then

  AC_CACHE_CHECK([for special C compiler options needed for large files],
    ac_cv_sys_largefile_CC,
    [ac_cv_sys_largefile_CC=no
     if test "$GCC" != yes; then
       ac_save_CC=$CC
       while :; do
         # IRIX 6.2 and later do not support large files by default,
         # so use the C compiler's -n32 option if that helps.
         AC_LANG_CONFTEST([AC_LANG_PROGRAM([_AC_SYS_LARGEFILE_TEST_INCLUDES])])
         AC_COMPILE_IFELSE([], [break])
         CC="$CC -n32"
         AC_COMPILE_IFELSE([], [ac_cv_sys_largefile_CC=' -n32'; break])
         break
       done
       CC=$ac_save_CC
       rm -f conftest.$ac_ext
    fi])
  if test "$ac_cv_sys_largefile_CC" != no; then
    CC=$CC$ac_cv_sys_largefile_CC
  fi

  _AC_SYS_LARGEFILE_MACRO_VALUE(_FILE_OFFSET_BITS, 64,
    ac_cv_sys_file_offset_bits,
    [Number of bits in a file offset, on hosts where this is settable.],
    [_AC_SYS_LARGEFILE_TEST_INCLUDES])
  if test $ac_cv_sys_file_offset_bits = unknown; then
    _AC_SYS_LARGEFILE_MACRO_VALUE(_LARGE_FILES, 1,
      ac_cv_sys_large_files,
      [Define for large files, on AIX-style hosts.],
      [_AC_SYS_LARGEFILE_TEST_INCLUDES])
  fi

  AC_DEFINE([_DARWIN_USE_64_BIT_INODE], [1],
    [Enable large inode numbers on Mac OS X 10.5.])
fi
])
m4trace:m4/largefile.m4:107: -1- AC_DEFUN([gl_LARGEFILE], [
  AC_REQUIRE([AC_CANONICAL_HOST])
  case "$host_os" in
    mingw*)
      dnl Native Windows.
      dnl mingw64 defines off_t to a 64-bit type already, if
      dnl _FILE_OFFSET_BITS=64, which is ensured by AC_SYS_LARGEFILE.
      AC_CACHE_CHECK([for 64-bit off_t], [gl_cv_type_off_t_64],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <sys/types.h>
                int verify_off_t_size[sizeof (off_t) >= 8 ? 1 : -1];
              ]],
              [[]])],
           [gl_cv_type_off_t_64=yes], [gl_cv_type_off_t_64=no])
        ])
      if test $gl_cv_type_off_t_64 = no; then
        WINDOWS_64_BIT_OFF_T=1
      else
        WINDOWS_64_BIT_OFF_T=0
      fi
      dnl But all native Windows platforms (including mingw64) have a 32-bit
      dnl st_size member in 'struct stat'.
      WINDOWS_64_BIT_ST_SIZE=1
      ;;
    *)
      dnl Nothing to do on gnulib's side.
      dnl A 64-bit off_t is
      dnl   - already the default on Mac OS X, FreeBSD, NetBSD, OpenBSD, IRIX,
      dnl     OSF/1, Cygwin,
      dnl   - enabled by _FILE_OFFSET_BITS=64 (ensured by AC_SYS_LARGEFILE) on
      dnl     glibc, HP-UX, Solaris,
      dnl   - enabled by _LARGE_FILES=1 (ensured by AC_SYS_LARGEFILE) on AIX,
      dnl   - impossible to achieve on Minix 3.1.8.
      WINDOWS_64_BIT_OFF_T=0
      WINDOWS_64_BIT_ST_SIZE=0
      ;;
  esac
])
m4trace:m4/longlong.m4:17: -1- AC_DEFUN([AC_TYPE_LONG_LONG_INT], [
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])
  AC_CACHE_CHECK([for long long int], [ac_cv_type_long_long_int],
     [ac_cv_type_long_long_int=yes
      if test "x${ac_cv_prog_cc_c99-no}" = xno; then
        ac_cv_type_long_long_int=$ac_cv_type_unsigned_long_long_int
        if test $ac_cv_type_long_long_int = yes; then
          dnl Catch a bug in Tandem NonStop Kernel (OSS) cc -O circa 2004.
          dnl If cross compiling, assume the bug is not important, since
          dnl nobody cross compiles for this platform as far as we know.
          AC_RUN_IFELSE(
            [AC_LANG_PROGRAM(
               [[@%:@include <limits.h>
                 @%:@ifndef LLONG_MAX
                 @%:@ define HALF \
                          (1LL << (sizeof (long long int) * CHAR_BIT - 2))
                 @%:@ define LLONG_MAX (HALF - 1 + HALF)
                 @%:@endif]],
               [[long long int n = 1;
                 int i;
                 for (i = 0; ; i++)
                   {
                     long long int m = n << i;
                     if (m >> i != n)
                       return 1;
                     if (LLONG_MAX / 2 < m)
                       break;
                   }
                 return 0;]])],
            [],
            [ac_cv_type_long_long_int=no],
            [:])
        fi
      fi])
  if test $ac_cv_type_long_long_int = yes; then
    AC_DEFINE([HAVE_LONG_LONG_INT], [1],
      [Define to 1 if the system has the type 'long long int'.])
  fi
])
m4trace:m4/longlong.m4:67: -1- AC_DEFUN([AC_TYPE_UNSIGNED_LONG_LONG_INT], [
  AC_CACHE_CHECK([for unsigned long long int],
    [ac_cv_type_unsigned_long_long_int],
    [ac_cv_type_unsigned_long_long_int=yes
     if test "x${ac_cv_prog_cc_c99-no}" = xno; then
       AC_LINK_IFELSE(
         [_AC_TYPE_LONG_LONG_SNIPPET],
         [],
         [ac_cv_type_unsigned_long_long_int=no])
     fi])
  if test $ac_cv_type_unsigned_long_long_int = yes; then
    AC_DEFINE([HAVE_UNSIGNED_LONG_LONG_INT], [1],
      [Define to 1 if the system has the type 'unsigned long long int'.])
  fi
])
m4trace:m4/longlong.m4:89: -1- AC_DEFUN([_AC_TYPE_LONG_LONG_SNIPPET], [
  AC_LANG_PROGRAM(
    [[/* For now, do not test the preprocessor; as of 2007 there are too many
         implementations with broken preprocessors.  Perhaps this can
         be revisited in 2012.  In the meantime, code should not expect
         #if to work with literals wider than 32 bits.  */
      /* Test literals.  */
      long long int ll = 9223372036854775807ll;
      long long int nll = -9223372036854775807LL;
      unsigned long long int ull = 18446744073709551615ULL;
      /* Test constant expressions.   */
      typedef int a[((-9223372036854775807LL < 0 && 0 < 9223372036854775807ll)
                     ? 1 : -1)];
      typedef int b[(18446744073709551615ULL <= (unsigned long long int) -1
                     ? 1 : -1)];
      int i = 63;]],
    [[/* Test availability of runtime routines for shift and division.  */
      long long int llmax = 9223372036854775807ll;
      unsigned long long int ullmax = 18446744073709551615ull;
      return ((ll << 63) | (ll >> 63) | (ll < i) | (ll > i)
              | (llmax / ll) | (llmax % ll)
              | (ull << 63) | (ull >> 63) | (ull << i) | (ull >> i)
              | (ullmax / ull) | (ullmax % ull));]])
])
m4trace:m4/lstat.m4:11: -1- AC_DEFUN([gl_FUNC_LSTAT], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  dnl If lstat does not exist, the replacement <sys/stat.h> does
  dnl "#define lstat stat", and lstat.c is a no-op.
  AC_CHECK_FUNCS_ONCE([lstat])
  if test $ac_cv_func_lstat = yes; then
    AC_REQUIRE([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK])
    case "$gl_cv_func_lstat_dereferences_slashed_symlink" in
      *no)
        REPLACE_LSTAT=1
        ;;
    esac
  else
    HAVE_LSTAT=0
  fi
])
m4trace:m4/lstat.m4:30: -1- AC_DEFUN([gl_PREREQ_LSTAT], [:])
m4trace:m4/lstat.m4:32: -1- AC_DEFUN([gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK], [
  dnl We don't use AC_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK any more, because it
  dnl is no longer maintained in Autoconf and because it invokes AC_LIBOBJ.
  AC_CACHE_CHECK([whether lstat correctly handles trailing slash],
    [gl_cv_func_lstat_dereferences_slashed_symlink],
    [rm -f conftest.sym conftest.file
     echo >conftest.file
     if test "$as_ln_s" = "ln -s" && ln -s conftest.file conftest.sym; then
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
            [AC_INCLUDES_DEFAULT],
            [[struct stat sbuf;
              /* Linux will dereference the symlink and fail, as required by
                 POSIX.  That is better in the sense that it means we will not
                 have to compile and use the lstat wrapper.  */
              return lstat ("conftest.sym/", &sbuf) == 0;
            ]])],
         [gl_cv_func_lstat_dereferences_slashed_symlink=yes],
         [gl_cv_func_lstat_dereferences_slashed_symlink=no],
         [case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_lstat_dereferences_slashed_symlink="guessing yes" ;;
                    # If we don't know, assume the worst.
            *)      gl_cv_func_lstat_dereferences_slashed_symlink="guessing no" ;;
          esac
         ])
     else
       # If the 'ln -s' command failed, then we probably don't even
       # have an lstat function.
       gl_cv_func_lstat_dereferences_slashed_symlink="guessing no"
     fi
     rm -f conftest.sym conftest.file
    ])
  case "$gl_cv_func_lstat_dereferences_slashed_symlink" in
    *yes)
      AC_DEFINE_UNQUOTED([LSTAT_FOLLOWS_SLASHED_SYMLINK], [1],
        [Define to 1 if 'lstat' dereferences a symlink specified
         with a trailing slash.])
      ;;
  esac
])
m4trace:m4/manywarnings.m4:14: -1- AC_DEFUN([gl_MANYWARN_COMPLEMENT], [
  gl_warn_set=
  set x $2; shift
  for gl_warn_item
  do
    case " $3 " in
      *" $gl_warn_item "*)
        ;;
      *)
        gl_warn_set="$gl_warn_set $gl_warn_item"
        ;;
    esac
  done
  $1=$gl_warn_set
])
m4trace:m4/manywarnings.m4:36: -1- AC_DEFUN([gl_MANYWARN_ALL_GCC], [
  dnl First, check for some issues that only occur when combining multiple
  dnl gcc warning categories.
  AC_REQUIRE([AC_PROG_CC])
  if test -n "$GCC"; then

    dnl Check if -W -Werror -Wno-missing-field-initializers is supported
    dnl with the current $CC $CFLAGS $CPPFLAGS.
    AC_MSG_CHECKING([whether -Wno-missing-field-initializers is supported])
    AC_CACHE_VAL([gl_cv_cc_nomfi_supported], [
      gl_save_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS -W -Werror -Wno-missing-field-initializers"
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[]], [[]])],
        [gl_cv_cc_nomfi_supported=yes],
        [gl_cv_cc_nomfi_supported=no])
      CFLAGS="$gl_save_CFLAGS"])
    AC_MSG_RESULT([$gl_cv_cc_nomfi_supported])

    if test "$gl_cv_cc_nomfi_supported" = yes; then
      dnl Now check whether -Wno-missing-field-initializers is needed
      dnl for the { 0, } construct.
      AC_MSG_CHECKING([whether -Wno-missing-field-initializers is needed])
      AC_CACHE_VAL([gl_cv_cc_nomfi_needed], [
        gl_save_CFLAGS="$CFLAGS"
        CFLAGS="$CFLAGS -W -Werror"
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM(
             [[void f (void)
               {
                 typedef struct { int a; int b; } s_t;
                 s_t s1 = { 0, };
               }
             ]],
             [[]])],
          [gl_cv_cc_nomfi_needed=no],
          [gl_cv_cc_nomfi_needed=yes])
        CFLAGS="$gl_save_CFLAGS"
      ])
      AC_MSG_RESULT([$gl_cv_cc_nomfi_needed])
    fi

    dnl Next, check if -Werror -Wuninitialized is useful with the
    dnl user's choice of $CFLAGS; some versions of gcc warn that it
    dnl has no effect if -O is not also used
    AC_MSG_CHECKING([whether -Wuninitialized is supported])
    AC_CACHE_VAL([gl_cv_cc_uninitialized_supported], [
      gl_save_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS -Werror -Wuninitialized"
      AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM([[]], [[]])],
        [gl_cv_cc_uninitialized_supported=yes],
        [gl_cv_cc_uninitialized_supported=no])
      CFLAGS="$gl_save_CFLAGS"])
    AC_MSG_RESULT([$gl_cv_cc_uninitialized_supported])

  fi

  # List all gcc warning categories.
  gl_manywarn_set=
  for gl_manywarn_item in \
    -W \
    -Wabi \
    -Waddress \
    -Waggressive-loop-optimizations \
    -Wall \
    -Warray-bounds \
    -Wattributes \
    -Wbad-function-cast \
    -Wbuiltin-macro-redefined \
    -Wcast-align \
    -Wchar-subscripts \
    -Wclobbered \
    -Wcomment \
    -Wcomments \
    -Wcoverage-mismatch \
    -Wcpp \
    -Wdeprecated \
    -Wdeprecated-declarations \
    -Wdisabled-optimization \
    -Wdiv-by-zero \
    -Wdouble-promotion \
    -Wempty-body \
    -Wendif-labels \
    -Wenum-compare \
    -Wextra \
    -Wformat-contains-nul \
    -Wformat-extra-args \
    -Wformat-nonliteral \
    -Wformat-security \
    -Wformat-y2k \
    -Wformat-zero-length \
    -Wfree-nonheap-object \
    -Wignored-qualifiers \
    -Wimplicit \
    -Wimplicit-function-declaration \
    -Wimplicit-int \
    -Winit-self \
    -Winline \
    -Wint-to-pointer-cast \
    -Winvalid-memory-model \
    -Winvalid-pch \
    -Wjump-misses-init \
    -Wlogical-op \
    -Wmain \
    -Wmaybe-uninitialized \
    -Wmissing-braces \
    -Wmissing-declarations \
    -Wmissing-field-initializers \
    -Wmissing-include-dirs \
    -Wmissing-parameter-type \
    -Wmissing-prototypes \
    -Wmultichar \
    -Wnarrowing \
    -Wnested-externs \
    -Wnonnull \
    -Wnormalized=nfc \
    -Wold-style-declaration \
    -Wold-style-definition \
    -Woverflow \
    -Woverlength-strings \
    -Woverride-init \
    -Wpacked \
    -Wpacked-bitfield-compat \
    -Wparentheses \
    -Wpointer-arith \
    -Wpointer-sign \
    -Wpointer-to-int-cast \
    -Wpragmas \
    -Wreturn-local-addr \
    -Wreturn-type \
    -Wsequence-point \
    -Wshadow \
    -Wsizeof-pointer-memaccess \
    -Wstack-protector \
    -Wstrict-aliasing \
    -Wstrict-overflow \
    -Wstrict-prototypes \
    -Wsuggest-attribute=const \
    -Wsuggest-attribute=format \
    -Wsuggest-attribute=noreturn \
    -Wsuggest-attribute=pure \
    -Wswitch \
    -Wswitch-default \
    -Wsync-nand \
    -Wsystem-headers \
    -Wtrampolines \
    -Wtrigraphs \
    -Wtype-limits \
    -Wuninitialized \
    -Wunknown-pragmas \
    -Wunsafe-loop-optimizations \
    -Wunused \
    -Wunused-but-set-parameter \
    -Wunused-but-set-variable \
    -Wunused-function \
    -Wunused-label \
    -Wunused-local-typedefs \
    -Wunused-macros \
    -Wunused-parameter \
    -Wunused-result \
    -Wunused-value \
    -Wunused-variable \
    -Wvarargs \
    -Wvariadic-macros \
    -Wvector-operation-performance \
    -Wvla \
    -Wvolatile-register-var \
    -Wwrite-strings \
    -fdiagnostics-show-option \
    -funit-at-a-time \
    \
    ; do
    gl_manywarn_set="$gl_manywarn_set $gl_manywarn_item"
  done

  # Disable specific options as needed.
  if test "$gl_cv_cc_nomfi_needed" = yes; then
    gl_manywarn_set="$gl_manywarn_set -Wno-missing-field-initializers"
  fi

  if test "$gl_cv_cc_uninitialized_supported" = no; then
    gl_manywarn_set="$gl_manywarn_set -Wno-uninitialized"
  fi

  $1=$gl_manywarn_set
])
m4trace:m4/md5.m4:7: -1- AC_DEFUN([gl_MD5], [
  dnl Prerequisites of lib/md5.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_MD5 and LIB_CRYPTO
  gl_CRYPTO_CHECK([MD5])
])
m4trace:m4/memrchr.m4:8: -1- AC_DEFUN([gl_FUNC_MEMRCHR], [
  dnl Persuade glibc <string.h> to declare memrchr().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_HEADER_STRING_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([memrchr])
  if test $ac_cv_have_decl_memrchr = no; then
    HAVE_DECL_MEMRCHR=0
  fi

  AC_CHECK_FUNCS([memrchr])
])
m4trace:m4/memrchr.m4:23: -1- AC_DEFUN([gl_PREREQ_MEMRCHR], [:])
m4trace:m4/mkostemp.m4:7: -1- AC_DEFUN([gl_FUNC_MKOSTEMP], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])

  dnl Persuade glibc <stdlib.h> to declare mkostemp().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([mkostemp])
  if test $ac_cv_func_mkostemp != yes; then
    HAVE_MKOSTEMP=0
  fi
])
m4trace:m4/mkostemp.m4:21: -1- AC_DEFUN([gl_PREREQ_MKOSTEMP], [
])
m4trace:m4/mktime.m4:10: -1- AC_DEFUN([gl_FUNC_MKTIME], [
  AC_REQUIRE([gl_HEADER_TIME_H_DEFAULTS])

  dnl We don't use AC_FUNC_MKTIME any more, because it is no longer maintained
  dnl in Autoconf and because it invokes AC_LIBOBJ.
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_DECLS_ONCE([alarm])
  AC_REQUIRE([gl_MULTIARCH])
  if test $APPLE_UNIVERSAL_BUILD = 1; then
    # A universal build on Apple Mac OS X platforms.
    # The test result would be 'yes' in 32-bit mode and 'no' in 64-bit mode.
    # But we need a configuration result that is valid in both modes.
    gl_cv_func_working_mktime=no
  fi
  AC_CACHE_CHECK([for working mktime], [gl_cv_func_working_mktime],
    [AC_RUN_IFELSE(
       [AC_LANG_SOURCE(
[[/* Test program from Paul Eggert and Tony Leneis.  */
#include <limits.h>
#include <stdlib.h>
#include <time.h>

#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif

#if HAVE_DECL_ALARM
# include <signal.h>
#endif

/* Work around redefinition to rpl_putenv by other config tests.  */
#undef putenv

static time_t time_t_max;
static time_t time_t_min;

/* Values we'll use to set the TZ environment variable.  */
static char *tz_strings[] = {
  (char *) 0, "TZ=GMT0", "TZ=JST-9",
  "TZ=EST+3EDT+2,M10.1.0/00:00:00,M2.3.0/00:00:00"
};
#define N_STRINGS (sizeof (tz_strings) / sizeof (tz_strings[0]))

/* Return 0 if mktime fails to convert a date in the spring-forward gap.
   Based on a problem report from Andreas Jaeger.  */
static int
spring_forward_gap ()
{
  /* glibc (up to about 1998-10-07) failed this test. */
  struct tm tm;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  putenv ("TZ=PST8PDT,M4.1.0,M10.5.0");

  tm.tm_year = 98;
  tm.tm_mon = 3;
  tm.tm_mday = 5;
  tm.tm_hour = 2;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  return mktime (&tm) != (time_t) -1;
}

static int
mktime_test1 (time_t now)
{
  struct tm *lt;
  return ! (lt = localtime (&now)) || mktime (lt) == now;
}

static int
mktime_test (time_t now)
{
  return (mktime_test1 (now)
          && mktime_test1 ((time_t) (time_t_max - now))
          && mktime_test1 ((time_t) (time_t_min + now)));
}

static int
irix_6_4_bug ()
{
  /* Based on code from Ariel Faigon.  */
  struct tm tm;
  tm.tm_year = 96;
  tm.tm_mon = 3;
  tm.tm_mday = 0;
  tm.tm_hour = 0;
  tm.tm_min = 0;
  tm.tm_sec = 0;
  tm.tm_isdst = -1;
  mktime (&tm);
  return tm.tm_mon == 2 && tm.tm_mday == 31;
}

static int
bigtime_test (int j)
{
  struct tm tm;
  time_t now;
  tm.tm_year = tm.tm_mon = tm.tm_mday = tm.tm_hour = tm.tm_min = tm.tm_sec = j;
  now = mktime (&tm);
  if (now != (time_t) -1)
    {
      struct tm *lt = localtime (&now);
      if (! (lt
             && lt->tm_year == tm.tm_year
             && lt->tm_mon == tm.tm_mon
             && lt->tm_mday == tm.tm_mday
             && lt->tm_hour == tm.tm_hour
             && lt->tm_min == tm.tm_min
             && lt->tm_sec == tm.tm_sec
             && lt->tm_yday == tm.tm_yday
             && lt->tm_wday == tm.tm_wday
             && ((lt->tm_isdst < 0 ? -1 : 0 < lt->tm_isdst)
                  == (tm.tm_isdst < 0 ? -1 : 0 < tm.tm_isdst))))
        return 0;
    }
  return 1;
}

static int
year_2050_test ()
{
  /* The correct answer for 2050-02-01 00:00:00 in Pacific time,
     ignoring leap seconds.  */
  unsigned long int answer = 2527315200UL;

  struct tm tm;
  time_t t;
  tm.tm_year = 2050 - 1900;
  tm.tm_mon = 2 - 1;
  tm.tm_mday = 1;
  tm.tm_hour = tm.tm_min = tm.tm_sec = 0;
  tm.tm_isdst = -1;

  /* Use the portable POSIX.1 specification "TZ=PST8PDT,M4.1.0,M10.5.0"
     instead of "TZ=America/Vancouver" in order to detect the bug even
     on systems that don't support the Olson extension, or don't have the
     full zoneinfo tables installed.  */
  putenv ("TZ=PST8PDT,M4.1.0,M10.5.0");

  t = mktime (&tm);

  /* Check that the result is either a failure, or close enough
     to the correct answer that we can assume the discrepancy is
     due to leap seconds.  */
  return (t == (time_t) -1
          || (0 < t && answer - 120 <= t && t <= answer + 120));
}

int
main ()
{
  int result = 0;
  time_t t, delta;
  int i, j;
  int time_t_signed_magnitude = (time_t) ~ (time_t) 0 < (time_t) -1;
  int time_t_signed = ! ((time_t) 0 < (time_t) -1);

#if HAVE_DECL_ALARM
  /* This test makes some buggy mktime implementations loop.
     Give up after 60 seconds; a mktime slower than that
     isn't worth using anyway.  */
  signal (SIGALRM, SIG_DFL);
  alarm (60);
#endif

  time_t_max = (! time_t_signed
                ? (time_t) -1
                : ((((time_t) 1 << (sizeof (time_t) * CHAR_BIT - 2)) - 1)
                   * 2 + 1));
  time_t_min = (! time_t_signed
                ? (time_t) 0
                : time_t_signed_magnitude
                ? ~ (time_t) 0
                : ~ time_t_max);

  delta = time_t_max / 997; /* a suitable prime number */
  for (i = 0; i < N_STRINGS; i++)
    {
      if (tz_strings[i])
        putenv (tz_strings[i]);

      for (t = 0; t <= time_t_max - delta && (result & 1) == 0; t += delta)
        if (! mktime_test (t))
          result |= 1;
      if ((result & 2) == 0
          && ! (mktime_test ((time_t) 1)
                && mktime_test ((time_t) (60 * 60))
                && mktime_test ((time_t) (60 * 60 * 24))))
        result |= 2;

      for (j = 1; (result & 4) == 0; j <<= 1)
        {
          if (! bigtime_test (j))
            result |= 4;
          if (INT_MAX / 2 < j)
            break;
        }
      if ((result & 8) == 0 && ! bigtime_test (INT_MAX))
        result |= 8;
    }
  if (! irix_6_4_bug ())
    result |= 16;
  if (! spring_forward_gap ())
    result |= 32;
  if (! year_2050_test ())
    result |= 64;
  return result;
}]])],
       [gl_cv_func_working_mktime=yes],
       [gl_cv_func_working_mktime=no],
       [gl_cv_func_working_mktime=no])
    ])

  if test $gl_cv_func_working_mktime = no; then
    REPLACE_MKTIME=1
  else
    REPLACE_MKTIME=0
  fi
])
m4trace:m4/mktime.m4:237: -1- AC_DEFUN([gl_FUNC_MKTIME_INTERNAL], [
  AC_REQUIRE([gl_FUNC_MKTIME])
  if test $REPLACE_MKTIME = 0; then
    dnl BeOS has __mktime_internal in libc, but other platforms don't.
    AC_CHECK_FUNC([__mktime_internal],
      [AC_DEFINE([mktime_internal], [__mktime_internal],
         [Define to the real name of the mktime_internal function.])
      ],
      [dnl mktime works but it doesn't export __mktime_internal,
       dnl so we need to substitute our own mktime implementation.
       REPLACE_MKTIME=1
      ])
  fi
])
m4trace:m4/mktime.m4:253: -1- AC_DEFUN([gl_PREREQ_MKTIME], [:])
m4trace:m4/multiarch.m4:21: -1- AC_DEFUN_ONCE([gl_MULTIARCH], [
  dnl Code similar to autoconf-2.63 AC_C_BIGENDIAN.
  gl_cv_c_multiarch=no
  AC_COMPILE_IFELSE(
    [AC_LANG_SOURCE(
      [[#ifndef __APPLE_CC__
         not a universal capable compiler
        #endif
        typedef int dummy;
      ]])],
    [
     dnl Check for potential -arch flags.  It is not universal unless
     dnl there are at least two -arch flags with different values.
     arch=
     prev=
     for word in ${CC} ${CFLAGS} ${CPPFLAGS} ${LDFLAGS}; do
       if test -n "$prev"; then
         case $word in
           i?86 | x86_64 | ppc | ppc64)
             if test -z "$arch" || test "$arch" = "$word"; then
               arch="$word"
             else
               gl_cv_c_multiarch=yes
             fi
             ;;
         esac
         prev=
       else
         if test "x$word" = "x-arch"; then
           prev=arch
         fi
       fi
     done
    ])
  if test $gl_cv_c_multiarch = yes; then
    APPLE_UNIVERSAL_BUILD=1
  else
    APPLE_UNIVERSAL_BUILD=0
  fi
  AC_SUBST([APPLE_UNIVERSAL_BUILD])
])
m4trace:m4/nocrash.m4:18: -1- AC_DEFUN([GL_NOCRASH], [[
#include <stdlib.h>
#if defined __MACH__ && defined __APPLE__
/* Avoid a crash on Mac OS X.  */
#include <mach/mach.h>
#include <mach/mach_error.h>
#include <mach/thread_status.h>
#include <mach/exception.h>
#include <mach/task.h>
#include <pthread.h>
/* The exception port on which our thread listens.  */
static mach_port_t our_exception_port;
/* The main function of the thread listening for exceptions of type
   EXC_BAD_ACCESS.  */
static void *
mach_exception_thread (void *arg)
{
  /* Buffer for a message to be received.  */
  struct {
    mach_msg_header_t head;
    mach_msg_body_t msgh_body;
    char data[1024];
  } msg;
  mach_msg_return_t retval;
  /* Wait for a message on the exception port.  */
  retval = mach_msg (&msg.head, MACH_RCV_MSG | MACH_RCV_LARGE, 0, sizeof (msg),
                     our_exception_port, MACH_MSG_TIMEOUT_NONE, MACH_PORT_NULL);
  if (retval != MACH_MSG_SUCCESS)
    abort ();
  exit (1);
}
static void
nocrash_init (void)
{
  mach_port_t self = mach_task_self ();
  /* Allocate a port on which the thread shall listen for exceptions.  */
  if (mach_port_allocate (self, MACH_PORT_RIGHT_RECEIVE, &our_exception_port)
      == KERN_SUCCESS) {
    /* See http://web.mit.edu/darwin/src/modules/xnu/osfmk/man/mach_port_insert_right.html.  */
    if (mach_port_insert_right (self, our_exception_port, our_exception_port,
                                MACH_MSG_TYPE_MAKE_SEND)
        == KERN_SUCCESS) {
      /* The exceptions we want to catch.  Only EXC_BAD_ACCESS is interesting
         for us.  */
      exception_mask_t mask = EXC_MASK_BAD_ACCESS;
      /* Create the thread listening on the exception port.  */
      pthread_attr_t attr;
      pthread_t thread;
      if (pthread_attr_init (&attr) == 0
          && pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED) == 0
          && pthread_create (&thread, &attr, mach_exception_thread, NULL) == 0) {
        pthread_attr_destroy (&attr);
        /* Replace the exception port info for these exceptions with our own.
           Note that we replace the exception port for the entire task, not only
           for a particular thread.  This has the effect that when our exception
           port gets the message, the thread specific exception port has already
           been asked, and we don't need to bother about it.
           See http://web.mit.edu/darwin/src/modules/xnu/osfmk/man/task_set_exception_ports.html.  */
        task_set_exception_ports (self, mask, our_exception_port,
                                  EXCEPTION_DEFAULT, MACHINE_THREAD_STATE);
      }
    }
  }
}
#elif (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__
/* Avoid a crash on native Windows.  */
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <winerror.h>
static LONG WINAPI
exception_filter (EXCEPTION_POINTERS *ExceptionInfo)
{
  switch (ExceptionInfo->ExceptionRecord->ExceptionCode)
    {
    case EXCEPTION_ACCESS_VIOLATION:
    case EXCEPTION_IN_PAGE_ERROR:
    case EXCEPTION_STACK_OVERFLOW:
    case EXCEPTION_GUARD_PAGE:
    case EXCEPTION_PRIV_INSTRUCTION:
    case EXCEPTION_ILLEGAL_INSTRUCTION:
    case EXCEPTION_DATATYPE_MISALIGNMENT:
    case EXCEPTION_ARRAY_BOUNDS_EXCEEDED:
    case EXCEPTION_NONCONTINUABLE_EXCEPTION:
      exit (1);
    }
  return EXCEPTION_CONTINUE_SEARCH;
}
static void
nocrash_init (void)
{
  SetUnhandledExceptionFilter ((LPTOP_LEVEL_EXCEPTION_FILTER) exception_filter);
}
#else
/* Avoid a crash on POSIX systems.  */
#include <signal.h>
/* A POSIX signal handler.  */
static void
exception_handler (int sig)
{
  exit (1);
}
static void
nocrash_init (void)
{
#ifdef SIGSEGV
  signal (SIGSEGV, exception_handler);
#endif
#ifdef SIGBUS
  signal (SIGBUS, exception_handler);
#endif
}
#endif
]])
m4trace:m4/off_t.m4:10: -1- AC_DEFUN([gl_TYPE_OFF_T], [
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_OFF_T=0
  ])
  AC_SUBST([WINDOWS_64_BIT_OFF_T])
])
m4trace:m4/pathmax.m4:8: -1- AC_DEFUN([gl_PATHMAX], [
  dnl Prerequisites of lib/pathmax.h.
  AC_CHECK_HEADERS_ONCE([sys/param.h])
])
m4trace:m4/pathmax.m4:16: -1- AC_DEFUN([gl_PATHMAX_SNIPPET], [[
/* Arrange to define PATH_MAX, like "pathmax.h" does. */
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
#include <limits.h>
#if defined HAVE_SYS_PARAM_H && !defined PATH_MAX && !defined MAXPATHLEN
# include <sys/param.h>
#endif
#if !defined PATH_MAX && defined MAXPATHLEN
# define PATH_MAX MAXPATHLEN
#endif
#ifdef __hpux
# undef PATH_MAX
# define PATH_MAX 1024
#endif
#if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__
# undef PATH_MAX
# define PATH_MAX 260
#endif
]])
m4trace:m4/pathmax.m4:39: -1- AC_DEFUN([gl_PATHMAX_SNIPPET_PREREQ], [
  AC_CHECK_HEADERS_ONCE([unistd.h sys/param.h])
])
m4trace:m4/pipe2.m4:7: -1- AC_DEFUN([gl_FUNC_PIPE2], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  dnl Persuade glibc <unistd.h> to declare pipe2().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_CHECK_FUNCS_ONCE([pipe2])
  if test $ac_cv_func_pipe2 != yes; then
    HAVE_PIPE2=0
  fi
])
m4trace:m4/pselect.m4:7: -1- AC_DEFUN([gl_FUNC_PSELECT], [
  AC_REQUIRE([gl_HEADER_SYS_SELECT])
  AC_REQUIRE([AC_C_RESTRICT])
  AC_CHECK_FUNCS_ONCE([pselect])

  if test $ac_cv_func_pselect = yes; then
    AC_CACHE_CHECK([whether signature of pselect conforms to POSIX],
      gl_cv_sig_pselect,
      [AC_LINK_IFELSE(
         [AC_LANG_PROGRAM(
              [[#include <sys/select.h>
                ]],
              [[int (*p) (int, fd_set *, fd_set *, fd_set *restrict,
                          struct timespec const *restrict,
                          sigset_t const *restrict) = pselect;
                return !p;]])],
         [gl_cv_sig_pselect=yes],
         [gl_cv_sig_pselect=no])])

    dnl On FreeBSD 8.2, pselect() doesn't always reject bad fds.
    AC_CACHE_CHECK([whether pselect detects invalid fds],
      [gl_cv_func_pselect_detects_ebadf],
      [
        AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/time.h>
#if HAVE_SYS_SELECT_H
# include <sys/select.h>
#endif
#include <unistd.h>
#include <errno.h>
]],[[
  fd_set set;
  dup2(0, 16);
  FD_ZERO(&set);
  FD_SET(16, &set);
  close(16);
  struct timespec timeout;
  timeout.tv_sec = 0;
  timeout.tv_nsec = 5000;
  return pselect (17, &set, NULL, NULL, &timeout, NULL) != -1 || errno != EBADF;
]])], [gl_cv_func_pselect_detects_ebadf=yes],
      [gl_cv_func_pselect_detects_ebadf=no],
          [
           case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_pselect_detects_ebadf="guessing yes" ;;
                    # If we don't know, assume the worst.
            *)      gl_cv_func_pselect_detects_ebadf="guessing no" ;;
           esac
          ])
      ])
    case $gl_cv_func_pselect_detects_ebadf in
      *yes) ;;
      *) REPLACE_PSELECT=1 ;;
    esac
  fi

  if test $ac_cv_func_pselect = no || test $gl_cv_sig_pselect = no; then
    REPLACE_PSELECT=1
  fi
])
m4trace:m4/pthread_sigmask.m4:7: -1- AC_DEFUN([gl_FUNC_PTHREAD_SIGMASK], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])

  AC_CHECK_FUNCS_ONCE([pthread_sigmask])
  LIB_PTHREAD_SIGMASK=

  dnl Test whether the gnulib module 'threadlib' is in use.
  dnl Some packages like Emacs use --avoid=threadlib.
  dnl Write the symbol in such a way that it does not cause 'aclocal' to pick
  dnl the threadlib.m4 file that is installed in $PREFIX/share/aclocal/.
  m4_ifdef([gl_][THREADLIB], [
    AC_REQUIRE([gl_][THREADLIB])

    if test "$gl_threads_api" = posix; then
      if test $ac_cv_func_pthread_sigmask = yes; then
        dnl pthread_sigmask is available without -lpthread.
        :
      else
        if test -n "$LIBMULTITHREAD"; then
          AC_CACHE_CHECK([for pthread_sigmask in $LIBMULTITHREAD],
            [gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD],
            [gl_save_LIBS="$LIBS"
             LIBS="$LIBS $LIBMULTITHREAD"
             AC_LINK_IFELSE(
               [AC_LANG_PROGRAM(
                  [[#include <pthread.h>
                    #include <signal.h>
                  ]],
                  [[return pthread_sigmask (0, (sigset_t *) 0, (sigset_t *) 0);]])
               ],
               [gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD=yes],
               [gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD=no])
             LIBS="$gl_save_LIBS"
            ])
          if test $gl_cv_func_pthread_sigmask_in_LIBMULTITHREAD = yes; then
            dnl pthread_sigmask is available with -lpthread.
            LIB_PTHREAD_SIGMASK="$LIBMULTITHREAD"
          else
            dnl pthread_sigmask is not available at all.
            HAVE_PTHREAD_SIGMASK=0
          fi
        else
          dnl pthread_sigmask is not available at all.
          HAVE_PTHREAD_SIGMASK=0
        fi
      fi
    else
      dnl pthread_sigmask may exist but does not interoperate with the chosen
      dnl multithreading facility.
      dnl If "$gl_threads_api" = pth, we could use the function pth_sigmask,
      dnl but it is equivalent to sigprocmask, so we choose to emulate
      dnl pthread_sigmask with sigprocmask also in this case. This yields fewer
      dnl link dependencies.
      if test $ac_cv_func_pthread_sigmask = yes; then
        REPLACE_PTHREAD_SIGMASK=1
      else
        HAVE_PTHREAD_SIGMASK=0
      fi
    fi
  ], [
    dnl The module 'threadlib' is not in use, due to --avoid=threadlib being
    dnl specified.
    dnl The package either has prepared CPPFLAGS and LIBS for use of POSIX:2008
    dnl threads, or wants to build single-threaded programs.
    if test $ac_cv_func_pthread_sigmask = yes; then
      dnl pthread_sigmask exists and does not require extra libraries.
      dnl Assume that it is declared.
      :
    else
      dnl pthread_sigmask either does not exist or needs extra libraries.
      HAVE_PTHREAD_SIGMASK=0
      dnl Define the symbol rpl_pthread_sigmask, not pthread_sigmask,
      dnl so as to not accidentally override the system's pthread_sigmask
      dnl symbol from libpthread. This is necessary on IRIX 6.5.
      REPLACE_PTHREAD_SIGMASK=1
    fi
  ])

  AC_SUBST([LIB_PTHREAD_SIGMASK])
  dnl We don't need a variable LTLIB_PTHREAD_SIGMASK, because when
  dnl "$gl_threads_api" = posix, $LTLIBMULTITHREAD and $LIBMULTITHREAD are the
  dnl same: either both empty or both "-lpthread".

  dnl Now test for some bugs in the system function.
  if test $HAVE_PTHREAD_SIGMASK = 1; then
    AC_REQUIRE([AC_PROG_CC])
    AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles

    dnl On FreeBSD 6.4, HP-UX 11.31, Solaris 9, in programs that are not linked
    dnl with -lpthread, the pthread_sigmask() function always returns 0 and has
    dnl no effect.
    if test -z "$LIB_PTHREAD_SIGMASK"; then
      AC_CACHE_CHECK([whether pthread_sigmask works without -lpthread],
        [gl_cv_func_pthread_sigmask_in_libc_works],
        [
          AC_RUN_IFELSE(
            [AC_LANG_SOURCE([[
#include <pthread.h>
#include <signal.h>
#include <stddef.h>
int main ()
{
  sigset_t set;
  sigemptyset (&set);
  return pthread_sigmask (1729, &set, NULL) != 0;
}]])],
            [gl_cv_func_pthread_sigmask_in_libc_works=no],
            [gl_cv_func_pthread_sigmask_in_libc_works=yes],
            [
changequote(,)dnl
             case "$host_os" in
               freebsd* | hpux* | solaris | solaris2.[2-9]*)
                 gl_cv_func_pthread_sigmask_in_libc_works="guessing no";;
               *)
                 gl_cv_func_pthread_sigmask_in_libc_works="guessing yes";;
             esac
changequote([,])dnl
            ])
        ])
      case "$gl_cv_func_pthread_sigmask_in_libc_works" in
        *no)
          REPLACE_PTHREAD_SIGMASK=1
          AC_DEFINE([PTHREAD_SIGMASK_INEFFECTIVE], [1],
            [Define to 1 if pthread_sigmask() may returns 0 and have no effect.])
          ;;
      esac
    fi

    dnl On Cygwin 1.7.5, the pthread_sigmask() has a wrong return value
    dnl convention: Upon failure, it returns -1 and sets errno.
    AC_CACHE_CHECK([whether pthread_sigmask returns error numbers],
      [gl_cv_func_pthread_sigmask_return_works],
      [
        gl_save_LIBS="$LIBS"
        LIBS="$LIBS $LIB_PTHREAD_SIGMASK"
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <pthread.h>
#include <signal.h>
#include <stddef.h>
int main ()
{
  sigset_t set;
  sigemptyset (&set);
  if (pthread_sigmask (1729, &set, NULL) == -1)
    return 1;
  return 0;
}]])],
          [gl_cv_func_pthread_sigmask_return_works=yes],
          [gl_cv_func_pthread_sigmask_return_works=no],
          [case "$host_os" in
             cygwin*)
               gl_cv_func_pthread_sigmask_return_works="guessing no";;
             *)
               gl_cv_func_pthread_sigmask_return_works="guessing yes";;
           esac
          ])
        LIBS="$gl_save_LIBS"
      ])
    case "$gl_cv_func_pthread_sigmask_return_works" in
      *no)
        REPLACE_PTHREAD_SIGMASK=1
        AC_DEFINE([PTHREAD_SIGMASK_FAILS_WITH_ERRNO], [1],
          [Define to 1 if pthread_sigmask(), when it fails, returns -1 and sets errno.])
        ;;
    esac

    dnl On IRIX 6.5, in a single-threaded program, pending signals are not
    dnl immediately delivered when they are unblocked through pthread_sigmask,
    dnl only a little while later.
    AC_CACHE_CHECK([whether pthread_sigmask unblocks signals correctly],
      [gl_cv_func_pthread_sigmask_unblock_works],
      [
        case "$host_os" in
          irix*)
            gl_cv_func_pthread_sigmask_unblock_works="guessing no";;
          *)
            gl_cv_func_pthread_sigmask_unblock_works="guessing yes";;
        esac
        dnl Here we link against $LIBMULTITHREAD, not only $LIB_PTHREAD_SIGMASK,
        dnl otherwise we get a false positive on those platforms where
        dnl $gl_cv_func_pthread_sigmask_in_libc_works is "no".
        gl_save_LIBS="$LIBS"
        LIBS="$LIBS $LIBMULTITHREAD"
        AC_RUN_IFELSE(
          [AC_LANG_SOURCE([[
#include <pthread.h>
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
static volatile int sigint_occurred;
static void
sigint_handler (int sig)
{
  sigint_occurred++;
}
int main ()
{
  sigset_t set;
  int pid = getpid ();
  char command[80];
  signal (SIGINT, sigint_handler);
  sigemptyset (&set);
  sigaddset (&set, SIGINT);
  if (!(pthread_sigmask (SIG_BLOCK, &set, NULL) == 0))
    return 1;
  sprintf (command, "sh -c 'sleep 1; kill -%d %d' &", SIGINT, pid);
  if (!(system (command) == 0))
    return 2;
  sleep (2);
  if (!(sigint_occurred == 0))
    return 3;
  if (!(pthread_sigmask (SIG_UNBLOCK, &set, NULL) == 0))
    return 4;
  if (!(sigint_occurred == 1)) /* This fails on IRIX.  */
    return 5;
  return 0;
}]])],
          [:],
          [gl_cv_func_pthread_sigmask_unblock_works=no],
          [:])
        LIBS="$gl_save_LIBS"
      ])
    case "$gl_cv_func_pthread_sigmask_unblock_works" in
      *no)
        REPLACE_PTHREAD_SIGMASK=1
        AC_DEFINE([PTHREAD_SIGMASK_UNBLOCK_BUG], [1],
          [Define to 1 if pthread_sigmask() unblocks signals incorrectly.])
        ;;
    esac
  fi
])
m4trace:m4/pthread_sigmask.m4:243: -1- AC_DEFUN([gl_PREREQ_PTHREAD_SIGMASK], [
  if test $HAVE_PTHREAD_SIGMASK = 1; then
    AC_DEFINE([HAVE_PTHREAD_SIGMASK], [1],
      [Define to 1 if the pthread_sigmask function can be used (despite bugs).])
  fi
])
m4trace:m4/putenv.m4:12: -1- AC_DEFUN([gl_FUNC_PUTENV], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CACHE_CHECK([for putenv compatible with GNU and SVID],
   [gl_cv_func_svid_putenv],
   [AC_RUN_IFELSE([AC_LANG_PROGRAM([AC_INCLUDES_DEFAULT],[[
    /* Put it in env.  */
    if (putenv ("CONFTEST_putenv=val"))
      return 1;

    /* Try to remove it.  */
    if (putenv ("CONFTEST_putenv"))
      return 2;

    /* Make sure it was deleted.  */
    if (getenv ("CONFTEST_putenv") != 0)
      return 3;

    return 0;
              ]])],
             gl_cv_func_svid_putenv=yes,
             gl_cv_func_svid_putenv=no,
             dnl When crosscompiling, assume putenv is broken.
             [case "$host_os" in
                        # Guess yes on glibc systems.
                *-gnu*) gl_cv_func_svid_putenv="guessing yes" ;;
                        # If we don't know, assume the worst.
                *)      gl_cv_func_svid_putenv="guessing no" ;;
              esac
             ])
   ])
  case "$gl_cv_func_svid_putenv" in
    *yes) ;;
    *)
      REPLACE_PUTENV=1
      ;;
  esac
])
m4trace:m4/putenv.m4:53: -1- AC_DEFUN([gl_PREREQ_PUTENV], [
  AC_CHECK_DECLS([_putenv])
])
m4trace:m4/readlink.m4:7: -1- AC_DEFUN([gl_FUNC_READLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([readlink])
  if test $ac_cv_func_readlink = no; then
    HAVE_READLINK=0
  else
    AC_CACHE_CHECK([whether readlink signature is correct],
      [gl_cv_decl_readlink_works],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
      /* Cause compilation failure if original declaration has wrong type.  */
      ssize_t readlink (const char *, char *, size_t);]])],
         [gl_cv_decl_readlink_works=yes], [gl_cv_decl_readlink_works=no])])
    dnl Solaris 9 ignores trailing slash.
    dnl FreeBSD 7.2 dereferences only one level of links with trailing slash.
    AC_CACHE_CHECK([whether readlink handles trailing slash correctly],
      [gl_cv_func_readlink_works],
      [# We have readlink, so assume ln -s works.
       ln -s conftest.no-such conftest.link
       ln -s conftest.link conftest.lnk2
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
]], [[char buf[20];
      return readlink ("conftest.lnk2/", buf, sizeof buf) != -1;]])],
         [gl_cv_func_readlink_works=yes], [gl_cv_func_readlink_works=no],
         [case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_readlink_works="guessing yes" ;;
                    # If we don't know, assume the worst.
            *)      gl_cv_func_readlink_works="guessing no" ;;
          esac
         ])
      rm -f conftest.link conftest.lnk2])
    case "$gl_cv_func_readlink_works" in
      *yes)
        if test "$gl_cv_decl_readlink_works" != yes; then
          REPLACE_READLINK=1
        fi
        ;;
      *)
        AC_DEFINE([READLINK_TRAILING_SLASH_BUG], [1], [Define to 1 if readlink
          fails to recognize a trailing slash.])
        REPLACE_READLINK=1
        ;;
    esac
  fi
])
m4trace:m4/readlink.m4:61: -1- AC_DEFUN([gl_FUNC_READLINK_SEPARATE], [
  AC_CHECK_FUNCS_ONCE([readlink])
  gl_PREREQ_READLINK
])
m4trace:m4/readlink.m4:68: -1- AC_DEFUN([gl_PREREQ_READLINK], [
  :
])
m4trace:m4/readlinkat.m4:11: -1- AC_DEFUN([gl_FUNC_READLINKAT], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_FUNCS_ONCE([readlinkat])
  if test $ac_cv_func_readlinkat = no; then
    HAVE_READLINKAT=0
  fi
])
m4trace:m4/secure_getenv.m4:7: -1- AC_DEFUN([gl_FUNC_SECURE_GETENV], [
  dnl Persuade glibc <stdlib.h> to declare secure_getenv().
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([secure_getenv])
  if test $ac_cv_func_secure_getenv = no; then
    HAVE_SECURE_GETENV=0
  fi
])
m4trace:m4/secure_getenv.m4:20: -1- AC_DEFUN([gl_PREREQ_SECURE_GETENV], [
  AC_CHECK_FUNCS([__secure_getenv])
  if test $ac_cv_func___secure_getenv = no; then
    AC_CHECK_FUNCS([issetugid])
  fi
])
m4trace:m4/setenv.m4:7: -1- AC_DEFUN([gl_FUNC_SETENV], [
  AC_REQUIRE([gl_FUNC_SETENV_SEPARATE])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  if test $ac_cv_func_setenv = no; then
    HAVE_SETENV=0
  else
    AC_CACHE_CHECK([whether setenv validates arguments],
      [gl_cv_func_setenv_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
       #include <stdlib.h>
       #include <errno.h>
       #include <string.h>
      ]], [[
       int result = 0;
       {
         if (setenv ("", "", 0) != -1)
           result |= 1;
         else if (errno != EINVAL)
           result |= 2;
       }
       {
         if (setenv ("a", "=", 1) != 0)
           result |= 4;
         else if (strcmp (getenv ("a"), "=") != 0)
           result |= 8;
       }
       return result;
      ]])],
      [gl_cv_func_setenv_works=yes], [gl_cv_func_setenv_works=no],
      [case "$host_os" in
                 # Guess yes on glibc systems.
         *-gnu*) gl_cv_func_setenv_works="guessing yes" ;;
                 # If we don't know, assume the worst.
         *)      gl_cv_func_setenv_works="guessing no" ;;
       esac
      ])])
    case "$gl_cv_func_setenv_works" in
      *yes) ;;
      *)
        REPLACE_SETENV=1
        ;;
    esac
  fi
])
m4trace:m4/setenv.m4:55: -1- AC_DEFUN([gl_FUNC_SETENV_SEPARATE], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_CHECK_DECLS_ONCE([setenv])
  if test $ac_cv_have_decl_setenv = no; then
    HAVE_DECL_SETENV=0
  fi
  AC_CHECK_FUNCS_ONCE([setenv])
  gl_PREREQ_SETENV
])
m4trace:m4/setenv.m4:66: -1- AC_DEFUN([gl_FUNC_UNSETENV], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_DECLS_ONCE([unsetenv])
  if test $ac_cv_have_decl_unsetenv = no; then
    HAVE_DECL_UNSETENV=0
  fi
  AC_CHECK_FUNCS([unsetenv])
  if test $ac_cv_func_unsetenv = no; then
    HAVE_UNSETENV=0
  else
    HAVE_UNSETENV=1
    dnl Some BSDs return void, failing to do error checking.
    AC_CACHE_CHECK([for unsetenv() return type], [gt_cv_func_unsetenv_ret],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[
#undef _BSD
#define _BSD 1 /* unhide unsetenv declaration in OSF/1 5.1 <stdlib.h> */
#include <stdlib.h>
extern
#ifdef __cplusplus
"C"
#endif
int unsetenv (const char *name);
            ]],
            [[]])],
         [gt_cv_func_unsetenv_ret='int'],
         [gt_cv_func_unsetenv_ret='void'])])
    if test $gt_cv_func_unsetenv_ret = 'void'; then
      AC_DEFINE([VOID_UNSETENV], [1], [Define to 1 if unsetenv returns void
       instead of int.])
      REPLACE_UNSETENV=1
    fi

    dnl Solaris 10 unsetenv does not remove all copies of a name.
    dnl Haiku alpha 2 unsetenv gets confused by assignment to environ.
    dnl OpenBSD 4.7 unsetenv("") does not fail.
    AC_CACHE_CHECK([whether unsetenv obeys POSIX],
      [gl_cv_func_unsetenv_works],
      [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
       #include <stdlib.h>
       #include <errno.h>
       extern char **environ;
      ]], [[
       char entry1[] = "a=1";
       char entry2[] = "b=2";
       char *env[] = { entry1, entry2, NULL };
       if (putenv ((char *) "a=1")) return 1;
       if (putenv (entry2)) return 2;
       entry2[0] = 'a';
       unsetenv ("a");
       if (getenv ("a")) return 3;
       if (!unsetenv ("") || errno != EINVAL) return 4;
       entry2[0] = 'b';
       environ = env;
       if (!getenv ("a")) return 5;
       entry2[0] = 'a';
       unsetenv ("a");
       if (getenv ("a")) return 6;
      ]])],
      [gl_cv_func_unsetenv_works=yes], [gl_cv_func_unsetenv_works=no],
      [case "$host_os" in
                 # Guess yes on glibc systems.
         *-gnu*) gl_cv_func_unsetenv_works="guessing yes" ;;
                 # If we don't know, assume the worst.
         *)      gl_cv_func_unsetenv_works="guessing no" ;;
       esac
      ])])
    case "$gl_cv_func_unsetenv_works" in
      *yes) ;;
      *)
        REPLACE_UNSETENV=1
        ;;
    esac
  fi
])
m4trace:m4/setenv.m4:146: -1- AC_DEFUN([gl_PREREQ_SETENV], [
  AC_REQUIRE([AC_FUNC_ALLOCA])
  AC_REQUIRE([gl_ENVIRON])
  AC_CHECK_HEADERS_ONCE([unistd.h])
  AC_CHECK_HEADERS([search.h])
  AC_CHECK_FUNCS([tsearch])
])
m4trace:m4/setenv.m4:156: -1- AC_DEFUN([gl_PREREQ_UNSETENV], [
  AC_REQUIRE([gl_ENVIRON])
  AC_CHECK_HEADERS_ONCE([unistd.h])
])
m4trace:m4/sha1.m4:7: -1- AC_DEFUN([gl_SHA1], [
  dnl Prerequisites of lib/sha1.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA1 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA1])
])
m4trace:m4/sha256.m4:7: -1- AC_DEFUN([gl_SHA256], [
  dnl Prerequisites of lib/sha256.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA256 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA256])
])
m4trace:m4/sha512.m4:7: -1- AC_DEFUN([gl_SHA512], [
  dnl Prerequisites of lib/sha512.c.
  AC_REQUIRE([gl_BIGENDIAN])

  dnl Determine HAVE_OPENSSL_SHA512 and LIB_CRYPTO
  gl_CRYPTO_CHECK([SHA512])
])
m4trace:m4/sig2str.m4:7: -1- AC_DEFUN([gl_FUNC_SIG2STR], [
  AC_CHECK_FUNCS([sig2str])
])
m4trace:m4/sig2str.m4:13: -1- AC_DEFUN([gl_PREREQ_SIG2STR], [
  :
])
m4trace:m4/signal_h.m4:7: -1- AC_DEFUN([gl_SIGNAL_H], [
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  AC_REQUIRE([gl_CHECK_TYPE_SIGSET_T])
  gl_NEXT_HEADERS([signal.h])

# AIX declares sig_atomic_t to already include volatile, and C89 compilers
# then choke on 'volatile sig_atomic_t'.  C99 requires that it compile.
  AC_CHECK_TYPE([volatile sig_atomic_t], [],
    [HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=0], [[
#include <signal.h>
    ]])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  AC_REQUIRE([AC_TYPE_UID_T])

  dnl Persuade glibc <signal.h> to define sighandler_t.
  AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_TYPE([sighandler_t], [], [HAVE_SIGHANDLER_T=0], [[
#include <signal.h>
    ]])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <signal.h>
    ]], [pthread_sigmask sigaction
    sigaddset sigdelset sigemptyset sigfillset sigismember
    sigpending sigprocmask])
])
m4trace:m4/signal_h.m4:39: -1- AC_DEFUN([gl_CHECK_TYPE_SIGSET_T], [
  AC_CHECK_TYPES([sigset_t],
    [gl_cv_type_sigset_t=yes], [gl_cv_type_sigset_t=no],
    [[
      #include <signal.h>
      /* Mingw defines sigset_t not in <signal.h>, but in <sys/types.h>.  */
      #include <sys/types.h>
    ]])
  if test $gl_cv_type_sigset_t != yes; then
    HAVE_SIGSET_T=0
  fi
])
m4trace:m4/signal_h.m4:53: -1- AC_DEFUN([gl_SIGNAL_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_SIGNAL_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/signal_h.m4:62: -1- AC_DEFUN([gl_SIGNAL_H_DEFAULTS], [
  GNULIB_PTHREAD_SIGMASK=0;    AC_SUBST([GNULIB_PTHREAD_SIGMASK])
  GNULIB_RAISE=0;              AC_SUBST([GNULIB_RAISE])
  GNULIB_SIGNAL_H_SIGPIPE=0;   AC_SUBST([GNULIB_SIGNAL_H_SIGPIPE])
  GNULIB_SIGPROCMASK=0;        AC_SUBST([GNULIB_SIGPROCMASK])
  GNULIB_SIGACTION=0;          AC_SUBST([GNULIB_SIGACTION])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_POSIX_SIGNALBLOCKING=1; AC_SUBST([HAVE_POSIX_SIGNALBLOCKING])
  HAVE_PTHREAD_SIGMASK=1;      AC_SUBST([HAVE_PTHREAD_SIGMASK])
  HAVE_RAISE=1;                AC_SUBST([HAVE_RAISE])
  HAVE_SIGSET_T=1;             AC_SUBST([HAVE_SIGSET_T])
  HAVE_SIGINFO_T=1;            AC_SUBST([HAVE_SIGINFO_T])
  HAVE_SIGACTION=1;            AC_SUBST([HAVE_SIGACTION])
  HAVE_STRUCT_SIGACTION_SA_SIGACTION=1;
                               AC_SUBST([HAVE_STRUCT_SIGACTION_SA_SIGACTION])
  HAVE_TYPE_VOLATILE_SIG_ATOMIC_T=1;
                               AC_SUBST([HAVE_TYPE_VOLATILE_SIG_ATOMIC_T])
  HAVE_SIGHANDLER_T=1;         AC_SUBST([HAVE_SIGHANDLER_T])
  REPLACE_PTHREAD_SIGMASK=0;   AC_SUBST([REPLACE_PTHREAD_SIGMASK])
  REPLACE_RAISE=0;             AC_SUBST([REPLACE_RAISE])
])
m4trace:m4/socklen.m4:15: -1- AC_DEFUN([gl_TYPE_SOCKLEN_T], [AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])dnl
   AC_CHECK_TYPE([socklen_t], ,
     [AC_MSG_CHECKING([for socklen_t equivalent])
      AC_CACHE_VAL([gl_cv_socklen_t_equiv],
        [# Systems have either "struct sockaddr *" or
         # "void *" as the second argument to getpeername
         gl_cv_socklen_t_equiv=
         for arg2 in "struct sockaddr" void; do
           for t in int size_t "unsigned int" "long int" "unsigned long int"; do
             AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
                 [[#include <sys/types.h>
                   #include <sys/socket.h>

                   int getpeername (int, $arg2 *, $t *);]],
                 [[$t len;
                  getpeername (0, 0, &len);]])],
               [gl_cv_socklen_t_equiv="$t"])
             test "$gl_cv_socklen_t_equiv" != "" && break
           done
           test "$gl_cv_socklen_t_equiv" != "" && break
         done
      ])
      if test "$gl_cv_socklen_t_equiv" = ""; then
        AC_MSG_ERROR([Cannot find a type to use in place of socklen_t])
      fi
      AC_MSG_RESULT([$gl_cv_socklen_t_equiv])
      AC_DEFINE_UNQUOTED([socklen_t], [$gl_cv_socklen_t_equiv],
        [type to use in place of socklen_t if not defined])],
     [gl_SOCKET_HEADERS])])
m4trace:m4/socklen.m4:52: -1- AC_DEFUN([gl_SOCKET_HEADERS], [
/* <sys/types.h> is not needed according to POSIX, but the
   <sys/socket.h> in i386-unknown-freebsd4.10 and
   powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#elif HAVE_WS2TCPIP_H
# include <ws2tcpip.h>
#endif
])
m4trace:m4/socklen.m4:68: -1- AC_DEFUN([gl_CHECK_SOCKET_HEADERS], [AC_CHECK_HEADERS_ONCE([sys/socket.h])
   if test $ac_cv_header_sys_socket_h = no; then
     dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
     dnl the check for those headers unconditional; yet cygwin reports
     dnl that the headers are present but cannot be compiled (since on
     dnl cygwin, all socket information should come from sys/socket.h).
     AC_CHECK_HEADERS([ws2tcpip.h])
   fi
  ])
m4trace:m4/ssize_t.m4:10: -1- AC_DEFUN([gt_TYPE_SSIZE_T], [
  AC_CACHE_CHECK([for ssize_t], [gt_cv_ssize_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <sys/types.h>]],
          [[int x = sizeof (ssize_t *) + sizeof (ssize_t);
            return !x;]])],
       [gt_cv_ssize_t=yes], [gt_cv_ssize_t=no])])
  if test $gt_cv_ssize_t = no; then
    AC_DEFINE([ssize_t], [int],
              [Define as a signed type of the same size as size_t.])
  fi
])
m4trace:m4/st_dm_mode.m4:10: -1- AC_DEFUN([AC_STRUCT_ST_DM_MODE], [AC_CACHE_CHECK([for st_dm_mode in struct stat], [ac_cv_struct_st_dm_mode],
   [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
#include <sys/types.h>
#include <sys/stat.h>]], [[struct stat s; s.st_dm_mode;]])],
     [ac_cv_struct_st_dm_mode=yes],
     [ac_cv_struct_st_dm_mode=no])])

  if test $ac_cv_struct_st_dm_mode = yes; then
    AC_DEFINE([HAVE_ST_DM_MODE], [1],
              [Define if struct stat has an st_dm_mode member. ])
  fi
 
])
m4trace:m4/stat-time.m4:20: -1- AC_DEFUN([gl_STAT_TIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])

  AC_CHECK_MEMBERS([struct stat.st_atim.tv_nsec],
    [AC_CACHE_CHECK([whether struct stat.st_atim is of type struct timespec],
       [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec],
       [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(
          [[
            #include <sys/types.h>
            #include <sys/stat.h>
            #if HAVE_SYS_TIME_H
            # include <sys/time.h>
            #endif
            #include <time.h>
            struct timespec ts;
            struct stat st;
          ]],
          [[
            st.st_atim = ts;
          ]])],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=yes],
          [ac_cv_typeof_struct_stat_st_atim_is_struct_timespec=no])])
     if test $ac_cv_typeof_struct_stat_st_atim_is_struct_timespec = yes; then
       AC_DEFINE([TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC], [1],
         [Define to 1 if the type of the st_atim member of a struct stat is
          struct timespec.])
     fi],
    [AC_CHECK_MEMBERS([struct stat.st_atimespec.tv_nsec], [],
       [AC_CHECK_MEMBERS([struct stat.st_atimensec], [],
          [AC_CHECK_MEMBERS([struct stat.st_atim.st__tim.tv_nsec], [], [],
             [#include <sys/types.h>
              #include <sys/stat.h>])],
          [#include <sys/types.h>
           #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat-time.m4:70: -1- AC_DEFUN([gl_STAT_BIRTHTIME], [
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CHECK_MEMBERS([struct stat.st_birthtimespec.tv_nsec], [],
    [AC_CHECK_MEMBERS([struct stat.st_birthtimensec], [],
      [AC_CHECK_MEMBERS([struct stat.st_birthtim.tv_nsec], [], [],
         [#include <sys/types.h>
          #include <sys/stat.h>])],
       [#include <sys/types.h>
        #include <sys/stat.h>])],
    [#include <sys/types.h>
     #include <sys/stat.h>])
])
m4trace:m4/stat.m4:9: -1- AC_DEFUN([gl_FUNC_STAT], [
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  AC_CHECK_FUNCS_ONCE([lstat])
  dnl mingw is the only known platform where stat(".") and stat("./") differ
  AC_CACHE_CHECK([whether stat handles trailing slashes on directories],
      [gl_cv_func_stat_dir_slash],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <sys/stat.h>
]], [[struct stat st; return stat (".", &st) != stat ("./", &st);]])],
         [gl_cv_func_stat_dir_slash=yes], [gl_cv_func_stat_dir_slash=no],
         [case $host_os in
            mingw*) gl_cv_func_stat_dir_slash="guessing no";;
            *) gl_cv_func_stat_dir_slash="guessing yes";;
          esac])])
  dnl AIX 7.1, Solaris 9, mingw64 mistakenly succeed on stat("file/").
  dnl (For mingw, this is due to a broken stat() override in libmingwex.a.)
  dnl FreeBSD 7.2 mistakenly succeeds on stat("link-to-file/").
  AC_CACHE_CHECK([whether stat handles trailing slashes on files],
      [gl_cv_func_stat_file_slash],
      [touch conftest.tmp
       # Assume that if we have lstat, we can also check symlinks.
       if test $ac_cv_func_lstat = yes; then
         ln -s conftest.tmp conftest.lnk
       fi
       AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <sys/stat.h>
]], [[int result = 0;
      struct stat st;
      if (!stat ("conftest.tmp/", &st))
        result |= 1;
#if HAVE_LSTAT
      if (!stat ("conftest.lnk/", &st))
        result |= 2;
#endif
      return result;
           ]])],
         [gl_cv_func_stat_file_slash=yes], [gl_cv_func_stat_file_slash=no],
         [case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_stat_file_slash="guessing yes" ;;
                    # If we don't know, assume the worst.
            *)      gl_cv_func_stat_file_slash="guessing no" ;;
          esac
         ])
       rm -f conftest.tmp conftest.lnk])
  case $gl_cv_func_stat_dir_slash in
    *no) REPLACE_STAT=1
      AC_DEFINE([REPLACE_FUNC_STAT_DIR], [1], [Define to 1 if stat needs
        help when passed a directory name with a trailing slash]);;
  esac
  case $gl_cv_func_stat_file_slash in
    *no) REPLACE_STAT=1
      AC_DEFINE([REPLACE_FUNC_STAT_FILE], [1], [Define to 1 if stat needs
        help when passed a file name with a trailing slash]);;
  esac
])
m4trace:m4/stat.m4:71: -1- AC_DEFUN([gl_PREREQ_STAT], [:])
m4trace:m4/stdalign.m4:10: -1- AC_DEFUN([gl_STDALIGN_H], [
  AC_CACHE_CHECK([for working stdalign.h],
    [gl_cv_header_working_stdalign_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stdalign.h>
            #include <stddef.h>

            /* Test that alignof yields a result consistent with offsetof.
               This catches GCC bug 52023
               <http://gcc.gnu.org/bugzilla/show_bug.cgi?id=52023>.  */
            #ifdef __cplusplus
               template <class t> struct alignof_helper { char a; t b; };
            # define ao(type) offsetof (alignof_helper<type>, b)
            #else
            # define ao(type) offsetof (struct { char a; type b; }, b)
            #endif
            char test_double[ao (double) % _Alignof (double) == 0 ? 1 : -1];
            char test_long[ao (long int) % _Alignof (long int) == 0 ? 1 : -1];
            char test_alignof[alignof (double) == _Alignof (double) ? 1 : -1];

            /* Test _Alignas only on platforms where gnulib can help.  */
            #if \
                ((defined __cplusplus && 201103 <= __cplusplus) \
                 || __GNUC__ || __IBMC__ || __IBMCPP__ || __ICC \
                 || 0x5110 <= __SUNPRO_C || 1300 <= _MSC_VER)
              struct alignas_test { char c; char alignas (8) alignas_8; };
              char test_alignas[offsetof (struct alignas_test, alignas_8) == 8
                                ? 1 : -1];
            #endif
          ]])],
       [gl_cv_header_working_stdalign_h=yes],
       [gl_cv_header_working_stdalign_h=no])])

  if test $gl_cv_header_working_stdalign_h = yes; then
    STDALIGN_H=''
  else
    STDALIGN_H='stdalign.h'
  fi

  AC_SUBST([STDALIGN_H])
  AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [test -n "$STDALIGN_H"])
])
m4trace:m4/stdarg.m4:10: -1- AC_DEFUN([gl_STDARG_H], [
  STDARG_H=''
  NEXT_STDARG_H='<stdarg.h>'
  AC_MSG_CHECKING([for va_copy])
  AC_CACHE_VAL([gl_cv_func_va_copy], [
    AC_COMPILE_IFELSE(
      [AC_LANG_PROGRAM(
         [[#include <stdarg.h>]],
         [[
#ifndef va_copy
void (*func) (va_list, va_list) = va_copy;
#endif
         ]])],
      [gl_cv_func_va_copy=yes],
      [gl_cv_func_va_copy=no])])
  AC_MSG_RESULT([$gl_cv_func_va_copy])
  if test $gl_cv_func_va_copy = no; then
    dnl Provide a substitute.
    dnl Usually a simple definition in <config.h> is enough. Not so on AIX 5
    dnl with some versions of the /usr/vac/bin/cc compiler. It has an <stdarg.h>
    dnl which does '#undef va_copy', leading to a missing va_copy symbol. For
    dnl this platform, we use an <stdarg.h> substitute. But we cannot use this
    dnl approach on other platforms, because <stdarg.h> often defines only
    dnl preprocessor macros and gl_ABSOLUTE_HEADER, gl_CHECK_NEXT_HEADERS do
    dnl not work in this situation.
    AC_EGREP_CPP([vaccine],
      [#if defined _AIX && !defined __GNUC__
        AIX vaccine
       #endif
      ], [gl_aixcc=yes], [gl_aixcc=no])
    if test $gl_aixcc = yes; then
      dnl Provide a substitute <stdarg.h> file.
      STDARG_H=stdarg.h
      gl_NEXT_HEADERS([stdarg.h])
      dnl Fallback for the case when <stdarg.h> contains only macro definitions.
      if test "$gl_cv_next_stdarg_h" = '""'; then
        gl_cv_next_stdarg_h='"///usr/include/stdarg.h"'
        NEXT_STDARG_H="$gl_cv_next_stdarg_h"
      fi
    else
      dnl Provide a substitute in <config.h>, either __va_copy or as a simple
      dnl assignment.
      gl_CACHE_VAL_SILENT([gl_cv_func___va_copy], [
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <stdarg.h>]],
             [[
#ifndef __va_copy
error, bail out
#endif
             ]])],
          [gl_cv_func___va_copy=yes],
          [gl_cv_func___va_copy=no])])
      if test $gl_cv_func___va_copy = yes; then
        AC_DEFINE([va_copy], [__va_copy],
          [Define as a macro for copying va_list variables.])
      else
        AH_VERBATIM([gl_VA_COPY], [/* A replacement for va_copy, if needed.  */
#define gl_va_copy(a,b) ((a) = (b))])
        AC_DEFINE([va_copy], [gl_va_copy],
          [Define as a macro for copying va_list variables.])
      fi
    fi
  fi
  AC_SUBST([STDARG_H])
  AM_CONDITIONAL([GL_GENERATE_STDARG_H], [test -n "$STDARG_H"])
  AC_SUBST([NEXT_STDARG_H])
])
m4trace:m4/stdbool.m4:12: -1- AC_DEFUN([AM_STDBOOL_H], [
  AC_REQUIRE([AC_CHECK_HEADER_STDBOOL])

  # Define two additional variables used in the Makefile substitution.

  if test "$ac_cv_header_stdbool_h" = yes; then
    STDBOOL_H=''
  else
    STDBOOL_H='stdbool.h'
  fi
  AC_SUBST([STDBOOL_H])
  AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])

  if test "$ac_cv_type__Bool" = yes; then
    HAVE__BOOL=1
  else
    HAVE__BOOL=0
  fi
  AC_SUBST([HAVE__BOOL])
])
m4trace:m4/stdbool.m4:35: -1- AC_DEFUN([gl_STDBOOL_H], [AM_STDBOOL_H])
m4trace:m4/stdbool.m4:39: -1- AC_DEFUN([AC_CHECK_HEADER_STDBOOL], [AC_CACHE_CHECK([for stdbool.h that conforms to C99],
     [ac_cv_header_stdbool_h],
     [AC_COMPILE_IFELSE(
        [AC_LANG_PROGRAM(
           [[
             #include <stdbool.h>
             #ifndef bool
              "error: bool is not defined"
             #endif
             #ifndef false
              "error: false is not defined"
             #endif
             #if false
              "error: false is not 0"
             #endif
             #ifndef true
              "error: true is not defined"
             #endif
             #if true != 1
              "error: true is not 1"
             #endif
             #ifndef __bool_true_false_are_defined
              "error: __bool_true_false_are_defined is not defined"
             #endif

             struct s { _Bool s: 1; _Bool t; } s;

             char a[true == 1 ? 1 : -1];
             char b[false == 0 ? 1 : -1];
             char c[__bool_true_false_are_defined == 1 ? 1 : -1];
             char d[(bool) 0.5 == true ? 1 : -1];
             /* See body of main program for 'e'.  */
             char f[(_Bool) 0.0 == false ? 1 : -1];
             char g[true];
             char h[sizeof (_Bool)];
             char i[sizeof s.t];
             enum { j = false, k = true, l = false * true, m = true * 256 };
             /* The following fails for
                HP aC++/ANSI C B3910B A.05.55 [Dec 04 2003]. */
             _Bool n[m];
             char o[sizeof n == m * sizeof n[0] ? 1 : -1];
             char p[-1 - (_Bool) 0 < 0 && -1 - (bool) 0 < 0 ? 1 : -1];
             /* Catch a bug in an HP-UX C compiler.  See
                http://gcc.gnu.org/ml/gcc-patches/2003-12/msg02303.html
                http://lists.gnu.org/archive/html/bug-coreutils/2005-11/msg00161.html
              */
             _Bool q = true;
             _Bool *pq = &q;
           ]],
           [[
             bool e = &s;
             *pq |= q;
             *pq |= ! q;
             /* Refer to every declared value, to avoid compiler optimizations.  */
             return (!a + !b + !c + !d + !e + !f + !g + !h + !i + !!j + !k + !!l
                     + !m + !n + !o + !p + !q + !pq);
           ]])],
        [ac_cv_header_stdbool_h=yes],
        [ac_cv_header_stdbool_h=no])])
   AC_CHECK_TYPES([_Bool])
])
m4trace:m4/stddef_h.m4:8: -1- AC_DEFUN([gl_STDDEF_H], [
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
  AC_REQUIRE([gt_TYPE_WCHAR_T])
  STDDEF_H=
  if test $gt_cv_c_wchar_t = no; then
    HAVE_WCHAR_T=0
    STDDEF_H=stddef.h
  fi
  AC_CACHE_CHECK([whether NULL can be used in arbitrary expressions],
    [gl_cv_decl_null_works],
    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stddef.h>
      int test[2 * (sizeof NULL == sizeof (void *)) -1];
]])],
      [gl_cv_decl_null_works=yes],
      [gl_cv_decl_null_works=no])])
  if test $gl_cv_decl_null_works = no; then
    REPLACE_NULL=1
    STDDEF_H=stddef.h
  fi
  AC_SUBST([STDDEF_H])
  AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [test -n "$STDDEF_H"])
  if test -n "$STDDEF_H"; then
    gl_NEXT_HEADERS([stddef.h])
  fi
])
m4trace:m4/stddef_h.m4:35: -1- AC_DEFUN([gl_STDDEF_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
])
m4trace:m4/stddef_h.m4:42: -1- AC_DEFUN([gl_STDDEF_H_DEFAULTS], [
  dnl Assume proper GNU behavior unless another module says otherwise.
  REPLACE_NULL=0;                AC_SUBST([REPLACE_NULL])
  HAVE_WCHAR_T=1;                AC_SUBST([HAVE_WCHAR_T])
])
m4trace:m4/stdint.m4:10: -1- AC_DEFUN_ONCE([gl_STDINT_H], [
  AC_PREREQ([2.59])dnl

  dnl Check for long long int and unsigned long long int.
  AC_REQUIRE([AC_TYPE_LONG_LONG_INT])
  if test $ac_cv_type_long_long_int = yes; then
    HAVE_LONG_LONG_INT=1
  else
    HAVE_LONG_LONG_INT=0
  fi
  AC_SUBST([HAVE_LONG_LONG_INT])
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])
  if test $ac_cv_type_unsigned_long_long_int = yes; then
    HAVE_UNSIGNED_LONG_LONG_INT=1
  else
    HAVE_UNSIGNED_LONG_LONG_INT=0
  fi
  AC_SUBST([HAVE_UNSIGNED_LONG_LONG_INT])

  dnl Check for <wchar.h>, in the same way as gl_WCHAR_H does.
  AC_CHECK_HEADERS_ONCE([wchar.h])
  if test $ac_cv_header_wchar_h = yes; then
    HAVE_WCHAR_H=1
  else
    HAVE_WCHAR_H=0
  fi
  AC_SUBST([HAVE_WCHAR_H])

  dnl Check for <inttypes.h>.
  dnl AC_INCLUDES_DEFAULT defines $ac_cv_header_inttypes_h.
  if test $ac_cv_header_inttypes_h = yes; then
    HAVE_INTTYPES_H=1
  else
    HAVE_INTTYPES_H=0
  fi
  AC_SUBST([HAVE_INTTYPES_H])

  dnl Check for <sys/types.h>.
  dnl AC_INCLUDES_DEFAULT defines $ac_cv_header_sys_types_h.
  if test $ac_cv_header_sys_types_h = yes; then
    HAVE_SYS_TYPES_H=1
  else
    HAVE_SYS_TYPES_H=0
  fi
  AC_SUBST([HAVE_SYS_TYPES_H])

  gl_CHECK_NEXT_HEADERS([stdint.h])
  if test $ac_cv_header_stdint_h = yes; then
    HAVE_STDINT_H=1
  else
    HAVE_STDINT_H=0
  fi
  AC_SUBST([HAVE_STDINT_H])

  dnl Now see whether we need a substitute <stdint.h>.
  if test $ac_cv_header_stdint_h = yes; then
    AC_CACHE_CHECK([whether stdint.h conforms to C99],
      [gl_cv_header_working_stdint_h],
      [gl_cv_header_working_stdint_h=no
       AC_COMPILE_IFELSE([
         AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#include <stdint.h>
/* Dragonfly defines WCHAR_MIN, WCHAR_MAX only in <wchar.h>.  */
#if !(defined WCHAR_MIN && defined WCHAR_MAX)
#error "WCHAR_MIN, WCHAR_MAX not defined in <stdint.h>"
#endif
]
gl_STDINT_INCLUDES
[
#ifdef INT8_MAX
int8_t a1 = INT8_MAX;
int8_t a1min = INT8_MIN;
#endif
#ifdef INT16_MAX
int16_t a2 = INT16_MAX;
int16_t a2min = INT16_MIN;
#endif
#ifdef INT32_MAX
int32_t a3 = INT32_MAX;
int32_t a3min = INT32_MIN;
#endif
#ifdef INT64_MAX
int64_t a4 = INT64_MAX;
int64_t a4min = INT64_MIN;
#endif
#ifdef UINT8_MAX
uint8_t b1 = UINT8_MAX;
#else
typedef int b1[(unsigned char) -1 != 255 ? 1 : -1];
#endif
#ifdef UINT16_MAX
uint16_t b2 = UINT16_MAX;
#endif
#ifdef UINT32_MAX
uint32_t b3 = UINT32_MAX;
#endif
#ifdef UINT64_MAX
uint64_t b4 = UINT64_MAX;
#endif
int_least8_t c1 = INT8_C (0x7f);
int_least8_t c1max = INT_LEAST8_MAX;
int_least8_t c1min = INT_LEAST8_MIN;
int_least16_t c2 = INT16_C (0x7fff);
int_least16_t c2max = INT_LEAST16_MAX;
int_least16_t c2min = INT_LEAST16_MIN;
int_least32_t c3 = INT32_C (0x7fffffff);
int_least32_t c3max = INT_LEAST32_MAX;
int_least32_t c3min = INT_LEAST32_MIN;
int_least64_t c4 = INT64_C (0x7fffffffffffffff);
int_least64_t c4max = INT_LEAST64_MAX;
int_least64_t c4min = INT_LEAST64_MIN;
uint_least8_t d1 = UINT8_C (0xff);
uint_least8_t d1max = UINT_LEAST8_MAX;
uint_least16_t d2 = UINT16_C (0xffff);
uint_least16_t d2max = UINT_LEAST16_MAX;
uint_least32_t d3 = UINT32_C (0xffffffff);
uint_least32_t d3max = UINT_LEAST32_MAX;
uint_least64_t d4 = UINT64_C (0xffffffffffffffff);
uint_least64_t d4max = UINT_LEAST64_MAX;
int_fast8_t e1 = INT_FAST8_MAX;
int_fast8_t e1min = INT_FAST8_MIN;
int_fast16_t e2 = INT_FAST16_MAX;
int_fast16_t e2min = INT_FAST16_MIN;
int_fast32_t e3 = INT_FAST32_MAX;
int_fast32_t e3min = INT_FAST32_MIN;
int_fast64_t e4 = INT_FAST64_MAX;
int_fast64_t e4min = INT_FAST64_MIN;
uint_fast8_t f1 = UINT_FAST8_MAX;
uint_fast16_t f2 = UINT_FAST16_MAX;
uint_fast32_t f3 = UINT_FAST32_MAX;
uint_fast64_t f4 = UINT_FAST64_MAX;
#ifdef INTPTR_MAX
intptr_t g = INTPTR_MAX;
intptr_t gmin = INTPTR_MIN;
#endif
#ifdef UINTPTR_MAX
uintptr_t h = UINTPTR_MAX;
#endif
intmax_t i = INTMAX_MAX;
uintmax_t j = UINTMAX_MAX;

#include <limits.h> /* for CHAR_BIT */
#define TYPE_MINIMUM(t) \
  ((t) ((t) 0 < (t) -1 ? (t) 0 : ~ TYPE_MAXIMUM (t)))
#define TYPE_MAXIMUM(t) \
  ((t) ((t) 0 < (t) -1 \
        ? (t) -1 \
        : ((((t) 1 << (sizeof (t) * CHAR_BIT - 2)) - 1) * 2 + 1)))
struct s {
  int check_PTRDIFF:
      PTRDIFF_MIN == TYPE_MINIMUM (ptrdiff_t)
      && PTRDIFF_MAX == TYPE_MAXIMUM (ptrdiff_t)
      ? 1 : -1;
  /* Detect bug in FreeBSD 6.0 / ia64.  */
  int check_SIG_ATOMIC:
      SIG_ATOMIC_MIN == TYPE_MINIMUM (sig_atomic_t)
      && SIG_ATOMIC_MAX == TYPE_MAXIMUM (sig_atomic_t)
      ? 1 : -1;
  int check_SIZE: SIZE_MAX == TYPE_MAXIMUM (size_t) ? 1 : -1;
  int check_WCHAR:
      WCHAR_MIN == TYPE_MINIMUM (wchar_t)
      && WCHAR_MAX == TYPE_MAXIMUM (wchar_t)
      ? 1 : -1;
  /* Detect bug in mingw.  */
  int check_WINT:
      WINT_MIN == TYPE_MINIMUM (wint_t)
      && WINT_MAX == TYPE_MAXIMUM (wint_t)
      ? 1 : -1;

  /* Detect bugs in glibc 2.4 and Solaris 10 stdint.h, among others.  */
  int check_UINT8_C:
        (-1 < UINT8_C (0)) == (-1 < (uint_least8_t) 0) ? 1 : -1;
  int check_UINT16_C:
        (-1 < UINT16_C (0)) == (-1 < (uint_least16_t) 0) ? 1 : -1;

  /* Detect bugs in OpenBSD 3.9 stdint.h.  */
#ifdef UINT8_MAX
  int check_uint8: (uint8_t) -1 == UINT8_MAX ? 1 : -1;
#endif
#ifdef UINT16_MAX
  int check_uint16: (uint16_t) -1 == UINT16_MAX ? 1 : -1;
#endif
#ifdef UINT32_MAX
  int check_uint32: (uint32_t) -1 == UINT32_MAX ? 1 : -1;
#endif
#ifdef UINT64_MAX
  int check_uint64: (uint64_t) -1 == UINT64_MAX ? 1 : -1;
#endif
  int check_uint_least8: (uint_least8_t) -1 == UINT_LEAST8_MAX ? 1 : -1;
  int check_uint_least16: (uint_least16_t) -1 == UINT_LEAST16_MAX ? 1 : -1;
  int check_uint_least32: (uint_least32_t) -1 == UINT_LEAST32_MAX ? 1 : -1;
  int check_uint_least64: (uint_least64_t) -1 == UINT_LEAST64_MAX ? 1 : -1;
  int check_uint_fast8: (uint_fast8_t) -1 == UINT_FAST8_MAX ? 1 : -1;
  int check_uint_fast16: (uint_fast16_t) -1 == UINT_FAST16_MAX ? 1 : -1;
  int check_uint_fast32: (uint_fast32_t) -1 == UINT_FAST32_MAX ? 1 : -1;
  int check_uint_fast64: (uint_fast64_t) -1 == UINT_FAST64_MAX ? 1 : -1;
  int check_uintptr: (uintptr_t) -1 == UINTPTR_MAX ? 1 : -1;
  int check_uintmax: (uintmax_t) -1 == UINTMAX_MAX ? 1 : -1;
  int check_size: (size_t) -1 == SIZE_MAX ? 1 : -1;
};
         ]])],
         [dnl Determine whether the various *_MIN, *_MAX macros are usable
          dnl in preprocessor expression. We could do it by compiling a test
          dnl program for each of these macros. It is faster to run a program
          dnl that inspects the macro expansion.
          dnl This detects a bug on HP-UX 11.23/ia64.
          AC_RUN_IFELSE([
            AC_LANG_PROGRAM([[
#define _GL_JUST_INCLUDE_SYSTEM_STDINT_H 1 /* work if build isn't clean */
#include <stdint.h>
]
gl_STDINT_INCLUDES
[
#include <stdio.h>
#include <string.h>
#define MVAL(macro) MVAL1(macro)
#define MVAL1(expression) #expression
static const char *macro_values[] =
  {
#ifdef INT8_MAX
    MVAL (INT8_MAX),
#endif
#ifdef INT16_MAX
    MVAL (INT16_MAX),
#endif
#ifdef INT32_MAX
    MVAL (INT32_MAX),
#endif
#ifdef INT64_MAX
    MVAL (INT64_MAX),
#endif
#ifdef UINT8_MAX
    MVAL (UINT8_MAX),
#endif
#ifdef UINT16_MAX
    MVAL (UINT16_MAX),
#endif
#ifdef UINT32_MAX
    MVAL (UINT32_MAX),
#endif
#ifdef UINT64_MAX
    MVAL (UINT64_MAX),
#endif
    NULL
  };
]], [[
  const char **mv;
  for (mv = macro_values; *mv != NULL; mv++)
    {
      const char *value = *mv;
      /* Test whether it looks like a cast expression.  */
      if (strncmp (value, "((unsigned int)"/*)*/, 15) == 0
          || strncmp (value, "((unsigned short)"/*)*/, 17) == 0
          || strncmp (value, "((unsigned char)"/*)*/, 16) == 0
          || strncmp (value, "((int)"/*)*/, 6) == 0
          || strncmp (value, "((signed short)"/*)*/, 15) == 0
          || strncmp (value, "((signed char)"/*)*/, 14) == 0)
        return mv - macro_values + 1;
    }
  return 0;
]])],
              [gl_cv_header_working_stdint_h=yes],
              [],
              [dnl When cross-compiling, assume it works.
               gl_cv_header_working_stdint_h=yes
              ])
         ])
      ])
  fi
  if test "$gl_cv_header_working_stdint_h" = yes; then
    STDINT_H=
  else
    dnl Check for <sys/inttypes.h>, and for
    dnl <sys/bitypes.h> (used in Linux libc4 >= 4.6.7 and libc5).
    AC_CHECK_HEADERS([sys/inttypes.h sys/bitypes.h])
    if test $ac_cv_header_sys_inttypes_h = yes; then
      HAVE_SYS_INTTYPES_H=1
    else
      HAVE_SYS_INTTYPES_H=0
    fi
    AC_SUBST([HAVE_SYS_INTTYPES_H])
    if test $ac_cv_header_sys_bitypes_h = yes; then
      HAVE_SYS_BITYPES_H=1
    else
      HAVE_SYS_BITYPES_H=0
    fi
    AC_SUBST([HAVE_SYS_BITYPES_H])

    gl_STDINT_TYPE_PROPERTIES
    STDINT_H=stdint.h
  fi
  AC_SUBST([STDINT_H])
  AM_CONDITIONAL([GL_GENERATE_STDINT_H], [test -n "$STDINT_H"])
])
m4trace:m4/stdint.m4:309: -1- AC_DEFUN([gl_STDINT_BITSIZEOF], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to the number of bits in type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for bit size of $gltype], [gl_cv_bitsizeof_${gltype}],
      [AC_COMPUTE_INT([result], [sizeof ($gltype) * CHAR_BIT],
         [$2
#include <limits.h>], [result=unknown])
       eval gl_cv_bitsizeof_${gltype}=\$result
      ])
    eval result=\$gl_cv_bitsizeof_${gltype}
    if test $result = unknown; then
      dnl Use a nonempty default, because some compilers, such as IRIX 5 cc,
      dnl do a syntax check even on unused #if conditions and give an error
      dnl on valid C code like this:
      dnl   #if 0
      dnl   # if  > 32
      dnl   # endif
      dnl   #endif
      result=0
    fi
    GLTYPE=`echo "$gltype" | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    AC_DEFINE_UNQUOTED([BITSIZEOF_${GLTYPE}], [$result])
    eval BITSIZEOF_${GLTYPE}=\$result
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([BITSIZEOF_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:347: -1- AC_DEFUN([gl_CHECK_TYPES_SIGNED], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]),
       [Define to 1 if ']gltype[' is a signed integer type.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([whether $gltype is signed], [gl_cv_type_${gltype}_signed],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([$2[
            int verify[2 * (($gltype) -1 < ($gltype) 0) - 1];]])],
         result=yes, result=no)
       eval gl_cv_type_${gltype}_signed=\$result
      ])
    eval result=\$gl_cv_type_${gltype}_signed
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    if test "$result" = yes; then
      AC_DEFINE_UNQUOTED([HAVE_SIGNED_${GLTYPE}], [1])
      eval HAVE_SIGNED_${GLTYPE}=1
    else
      eval HAVE_SIGNED_${GLTYPE}=0
    fi
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST([HAVE_SIGNED_]m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_]))])
])
m4trace:m4/stdint.m4:380: -1- AC_DEFUN([gl_INTEGER_TYPE_SUFFIX], [
  dnl Use a shell loop, to avoid bloating configure, and
  dnl - extra AH_TEMPLATE calls, so that autoheader knows what to put into
  dnl   config.h.in,
  dnl - extra AC_SUBST calls, so that the right substitutions are made.
  m4_foreach_w([gltype], [$1],
    [AH_TEMPLATE(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX],
       [Define to l, ll, u, ul, ull, etc., as suitable for
        constants of type ']gltype['.])])
  for gltype in $1 ; do
    AC_CACHE_CHECK([for $gltype integer literal suffix],
      [gl_cv_type_${gltype}_suffix],
      [eval gl_cv_type_${gltype}_suffix=no
       eval result=\$gl_cv_type_${gltype}_signed
       if test "$result" = yes; then
         glsufu=
       else
         glsufu=u
       fi
       for glsuf in "$glsufu" ${glsufu}l ${glsufu}ll ${glsufu}i64; do
         case $glsuf in
           '')  gltype1='int';;
           l)   gltype1='long int';;
           ll)  gltype1='long long int';;
           i64) gltype1='__int64';;
           u)   gltype1='unsigned int';;
           ul)  gltype1='unsigned long int';;
           ull) gltype1='unsigned long long int';;
           ui64)gltype1='unsigned __int64';;
         esac
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([$2[
              extern $gltype foo;
              extern $gltype1 foo;]])],
           [eval gl_cv_type_${gltype}_suffix=\$glsuf])
         eval result=\$gl_cv_type_${gltype}_suffix
         test "$result" != no && break
       done])
    GLTYPE=`echo $gltype | tr 'abcdefghijklmnopqrstuvwxyz ' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ_'`
    eval result=\$gl_cv_type_${gltype}_suffix
    test "$result" = no && result=
    eval ${GLTYPE}_SUFFIX=\$result
    AC_DEFINE_UNQUOTED([${GLTYPE}_SUFFIX], [$result])
  done
  m4_foreach_w([gltype], [$1],
    [AC_SUBST(m4_translit(gltype,[abcdefghijklmnopqrstuvwxyz ],[ABCDEFGHIJKLMNOPQRSTUVWXYZ_])[_SUFFIX])])
])
m4trace:m4/stdint.m4:430: -1- AC_DEFUN([gl_STDINT_INCLUDES], [[
  /* BSD/OS 4.0.1 has a bug: <stddef.h>, <stdio.h> and <time.h> must be
     included before <wchar.h>.  */
  #include <stddef.h>
  #include <signal.h>
  #if HAVE_WCHAR_H
  # include <stdio.h>
  # include <time.h>
  # include <wchar.h>
  #endif
]])
m4trace:m4/stdint.m4:446: -1- AC_DEFUN([gl_STDINT_TYPE_PROPERTIES], [
  AC_REQUIRE([gl_MULTIARCH])
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_STDINT_BITSIZEOF([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])
  gl_cv_type_ptrdiff_t_signed=yes
  gl_cv_type_size_t_signed=no
  if test $APPLE_UNIVERSAL_BUILD = 0; then
    gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t],
      [gl_STDINT_INCLUDES])
  fi
  gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t],
    [gl_STDINT_INCLUDES])

  dnl If wint_t is smaller than 'int', it cannot satisfy the ISO C 99
  dnl requirement that wint_t is "unchanged by default argument promotions".
  dnl In this case gnulib's <wchar.h> and <wctype.h> override wint_t.
  dnl Set the variable BITSIZEOF_WINT_T accordingly.
  if test $BITSIZEOF_WINT_T -lt 32; then
    BITSIZEOF_WINT_T=32
  fi
])
m4trace:m4/stdio_h.m4:7: -1- AC_DEFUN([gl_STDIO_H], [
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  gl_NEXT_HEADERS([stdio.h])

  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  GNULIB_FSCANF=1
  gl_MODULE_INDICATOR([fscanf])
  GNULIB_SCANF=1
  gl_MODULE_INDICATOR([scanf])
  GNULIB_FGETC=1
  GNULIB_GETC=1
  GNULIB_GETCHAR=1
  GNULIB_FGETS=1
  GNULIB_FREAD=1
  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-read.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_NONBLOCKING
  dnl or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_READ_FUNCS=1
      AC_LIBOBJ([stdio-read])
    fi
  ])

  dnl No need to create extra modules for these functions. Everyone who uses
  dnl <stdio.h> likely needs them.
  GNULIB_FPRINTF=1
  GNULIB_PRINTF=1
  GNULIB_VFPRINTF=1
  GNULIB_VPRINTF=1
  GNULIB_FPUTC=1
  GNULIB_PUTC=1
  GNULIB_PUTCHAR=1
  GNULIB_FPUTS=1
  GNULIB_PUTS=1
  GNULIB_FWRITE=1
  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-write.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_SIGPIPE or
  dnl GNULIB_SIGPIPE redundant.
  m4_ifdef([gl_SIGNAL_SIGPIPE], [
    gl_SIGNAL_SIGPIPE
    if test $gl_cv_header_signal_h_SIGPIPE != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
      AC_LIBOBJ([stdio-write])
    fi
  ])
  dnl This ifdef is necessary to avoid an error "missing file lib/stdio-write.c"
  dnl "expected source file, required through AC_LIBSOURCES, not found". It is
  dnl also an optimization, to avoid performing a configure check whose result
  dnl is not used. But it does not make the test of GNULIB_STDIO_H_NONBLOCKING
  dnl or GNULIB_NONBLOCKING redundant.
  m4_ifdef([gl_NONBLOCKING_IO], [
    gl_NONBLOCKING_IO
    if test $gl_cv_have_nonblocking != yes; then
      REPLACE_STDIO_WRITE_FUNCS=1
      AC_LIBOBJ([stdio-write])
    fi
  ])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by both C89 and C11.
  gl_WARN_ON_USE_PREPARE([[#include <stdio.h>
    ]], [dprintf fpurge fseeko ftello getdelim getline gets pclose popen
    renameat snprintf tmpfile vdprintf vsnprintf])
])
m4trace:m4/stdio_h.m4:81: -1- AC_DEFUN([gl_STDIO_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_STDIO_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdio_h.m4:90: -1- AC_DEFUN([gl_STDIO_H_DEFAULTS], [
  GNULIB_DPRINTF=0;              AC_SUBST([GNULIB_DPRINTF])
  GNULIB_FCLOSE=0;               AC_SUBST([GNULIB_FCLOSE])
  GNULIB_FDOPEN=0;               AC_SUBST([GNULIB_FDOPEN])
  GNULIB_FFLUSH=0;               AC_SUBST([GNULIB_FFLUSH])
  GNULIB_FGETC=0;                AC_SUBST([GNULIB_FGETC])
  GNULIB_FGETS=0;                AC_SUBST([GNULIB_FGETS])
  GNULIB_FOPEN=0;                AC_SUBST([GNULIB_FOPEN])
  GNULIB_FPRINTF=0;              AC_SUBST([GNULIB_FPRINTF])
  GNULIB_FPRINTF_POSIX=0;        AC_SUBST([GNULIB_FPRINTF_POSIX])
  GNULIB_FPURGE=0;               AC_SUBST([GNULIB_FPURGE])
  GNULIB_FPUTC=0;                AC_SUBST([GNULIB_FPUTC])
  GNULIB_FPUTS=0;                AC_SUBST([GNULIB_FPUTS])
  GNULIB_FREAD=0;                AC_SUBST([GNULIB_FREAD])
  GNULIB_FREOPEN=0;              AC_SUBST([GNULIB_FREOPEN])
  GNULIB_FSCANF=0;               AC_SUBST([GNULIB_FSCANF])
  GNULIB_FSEEK=0;                AC_SUBST([GNULIB_FSEEK])
  GNULIB_FSEEKO=0;               AC_SUBST([GNULIB_FSEEKO])
  GNULIB_FTELL=0;                AC_SUBST([GNULIB_FTELL])
  GNULIB_FTELLO=0;               AC_SUBST([GNULIB_FTELLO])
  GNULIB_FWRITE=0;               AC_SUBST([GNULIB_FWRITE])
  GNULIB_GETC=0;                 AC_SUBST([GNULIB_GETC])
  GNULIB_GETCHAR=0;              AC_SUBST([GNULIB_GETCHAR])
  GNULIB_GETDELIM=0;             AC_SUBST([GNULIB_GETDELIM])
  GNULIB_GETLINE=0;              AC_SUBST([GNULIB_GETLINE])
  GNULIB_OBSTACK_PRINTF=0;       AC_SUBST([GNULIB_OBSTACK_PRINTF])
  GNULIB_OBSTACK_PRINTF_POSIX=0; AC_SUBST([GNULIB_OBSTACK_PRINTF_POSIX])
  GNULIB_PCLOSE=0;               AC_SUBST([GNULIB_PCLOSE])
  GNULIB_PERROR=0;               AC_SUBST([GNULIB_PERROR])
  GNULIB_POPEN=0;                AC_SUBST([GNULIB_POPEN])
  GNULIB_PRINTF=0;               AC_SUBST([GNULIB_PRINTF])
  GNULIB_PRINTF_POSIX=0;         AC_SUBST([GNULIB_PRINTF_POSIX])
  GNULIB_PUTC=0;                 AC_SUBST([GNULIB_PUTC])
  GNULIB_PUTCHAR=0;              AC_SUBST([GNULIB_PUTCHAR])
  GNULIB_PUTS=0;                 AC_SUBST([GNULIB_PUTS])
  GNULIB_REMOVE=0;               AC_SUBST([GNULIB_REMOVE])
  GNULIB_RENAME=0;               AC_SUBST([GNULIB_RENAME])
  GNULIB_RENAMEAT=0;             AC_SUBST([GNULIB_RENAMEAT])
  GNULIB_SCANF=0;                AC_SUBST([GNULIB_SCANF])
  GNULIB_SNPRINTF=0;             AC_SUBST([GNULIB_SNPRINTF])
  GNULIB_SPRINTF_POSIX=0;        AC_SUBST([GNULIB_SPRINTF_POSIX])
  GNULIB_STDIO_H_NONBLOCKING=0;  AC_SUBST([GNULIB_STDIO_H_NONBLOCKING])
  GNULIB_STDIO_H_SIGPIPE=0;      AC_SUBST([GNULIB_STDIO_H_SIGPIPE])
  GNULIB_TMPFILE=0;              AC_SUBST([GNULIB_TMPFILE])
  GNULIB_VASPRINTF=0;            AC_SUBST([GNULIB_VASPRINTF])
  GNULIB_VFSCANF=0;              AC_SUBST([GNULIB_VFSCANF])
  GNULIB_VSCANF=0;               AC_SUBST([GNULIB_VSCANF])
  GNULIB_VDPRINTF=0;             AC_SUBST([GNULIB_VDPRINTF])
  GNULIB_VFPRINTF=0;             AC_SUBST([GNULIB_VFPRINTF])
  GNULIB_VFPRINTF_POSIX=0;       AC_SUBST([GNULIB_VFPRINTF_POSIX])
  GNULIB_VPRINTF=0;              AC_SUBST([GNULIB_VPRINTF])
  GNULIB_VPRINTF_POSIX=0;        AC_SUBST([GNULIB_VPRINTF_POSIX])
  GNULIB_VSNPRINTF=0;            AC_SUBST([GNULIB_VSNPRINTF])
  GNULIB_VSPRINTF_POSIX=0;       AC_SUBST([GNULIB_VSPRINTF_POSIX])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_FPURGE=1;            AC_SUBST([HAVE_DECL_FPURGE])
  HAVE_DECL_FSEEKO=1;            AC_SUBST([HAVE_DECL_FSEEKO])
  HAVE_DECL_FTELLO=1;            AC_SUBST([HAVE_DECL_FTELLO])
  HAVE_DECL_GETDELIM=1;          AC_SUBST([HAVE_DECL_GETDELIM])
  HAVE_DECL_GETLINE=1;           AC_SUBST([HAVE_DECL_GETLINE])
  HAVE_DECL_OBSTACK_PRINTF=1;    AC_SUBST([HAVE_DECL_OBSTACK_PRINTF])
  HAVE_DECL_SNPRINTF=1;          AC_SUBST([HAVE_DECL_SNPRINTF])
  HAVE_DECL_VSNPRINTF=1;         AC_SUBST([HAVE_DECL_VSNPRINTF])
  HAVE_DPRINTF=1;                AC_SUBST([HAVE_DPRINTF])
  HAVE_FSEEKO=1;                 AC_SUBST([HAVE_FSEEKO])
  HAVE_FTELLO=1;                 AC_SUBST([HAVE_FTELLO])
  HAVE_PCLOSE=1;                 AC_SUBST([HAVE_PCLOSE])
  HAVE_POPEN=1;                  AC_SUBST([HAVE_POPEN])
  HAVE_RENAMEAT=1;               AC_SUBST([HAVE_RENAMEAT])
  HAVE_VASPRINTF=1;              AC_SUBST([HAVE_VASPRINTF])
  HAVE_VDPRINTF=1;               AC_SUBST([HAVE_VDPRINTF])
  REPLACE_DPRINTF=0;             AC_SUBST([REPLACE_DPRINTF])
  REPLACE_FCLOSE=0;              AC_SUBST([REPLACE_FCLOSE])
  REPLACE_FDOPEN=0;              AC_SUBST([REPLACE_FDOPEN])
  REPLACE_FFLUSH=0;              AC_SUBST([REPLACE_FFLUSH])
  REPLACE_FOPEN=0;               AC_SUBST([REPLACE_FOPEN])
  REPLACE_FPRINTF=0;             AC_SUBST([REPLACE_FPRINTF])
  REPLACE_FPURGE=0;              AC_SUBST([REPLACE_FPURGE])
  REPLACE_FREOPEN=0;             AC_SUBST([REPLACE_FREOPEN])
  REPLACE_FSEEK=0;               AC_SUBST([REPLACE_FSEEK])
  REPLACE_FSEEKO=0;              AC_SUBST([REPLACE_FSEEKO])
  REPLACE_FTELL=0;               AC_SUBST([REPLACE_FTELL])
  REPLACE_FTELLO=0;              AC_SUBST([REPLACE_FTELLO])
  REPLACE_GETDELIM=0;            AC_SUBST([REPLACE_GETDELIM])
  REPLACE_GETLINE=0;             AC_SUBST([REPLACE_GETLINE])
  REPLACE_OBSTACK_PRINTF=0;      AC_SUBST([REPLACE_OBSTACK_PRINTF])
  REPLACE_PERROR=0;              AC_SUBST([REPLACE_PERROR])
  REPLACE_POPEN=0;               AC_SUBST([REPLACE_POPEN])
  REPLACE_PRINTF=0;              AC_SUBST([REPLACE_PRINTF])
  REPLACE_REMOVE=0;              AC_SUBST([REPLACE_REMOVE])
  REPLACE_RENAME=0;              AC_SUBST([REPLACE_RENAME])
  REPLACE_RENAMEAT=0;            AC_SUBST([REPLACE_RENAMEAT])
  REPLACE_SNPRINTF=0;            AC_SUBST([REPLACE_SNPRINTF])
  REPLACE_SPRINTF=0;             AC_SUBST([REPLACE_SPRINTF])
  REPLACE_STDIO_READ_FUNCS=0;    AC_SUBST([REPLACE_STDIO_READ_FUNCS])
  REPLACE_STDIO_WRITE_FUNCS=0;   AC_SUBST([REPLACE_STDIO_WRITE_FUNCS])
  REPLACE_TMPFILE=0;             AC_SUBST([REPLACE_TMPFILE])
  REPLACE_VASPRINTF=0;           AC_SUBST([REPLACE_VASPRINTF])
  REPLACE_VDPRINTF=0;            AC_SUBST([REPLACE_VDPRINTF])
  REPLACE_VFPRINTF=0;            AC_SUBST([REPLACE_VFPRINTF])
  REPLACE_VPRINTF=0;             AC_SUBST([REPLACE_VPRINTF])
  REPLACE_VSNPRINTF=0;           AC_SUBST([REPLACE_VSNPRINTF])
  REPLACE_VSPRINTF=0;            AC_SUBST([REPLACE_VSPRINTF])
])
m4trace:m4/stdlib_h.m4:7: -1- AC_DEFUN([gl_STDLIB_H], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  gl_NEXT_HEADERS([stdlib.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <stdlib.h>
#if HAVE_SYS_LOADAVG_H
# include <sys/loadavg.h>
#endif
#if HAVE_RANDOM_H
# include <random.h>
#endif
    ]], [_Exit atoll canonicalize_file_name getloadavg getsubopt grantpt
    initstate initstate_r mkdtemp mkostemp mkostemps mkstemp mkstemps
    posix_openpt ptsname ptsname_r random random_r realpath rpmatch
    secure_getenv setenv setstate setstate_r srandom srandom_r
    strtod strtoll strtoull unlockpt unsetenv])
])
m4trace:m4/stdlib_h.m4:29: -1- AC_DEFUN([gl_STDLIB_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/stdlib_h.m4:38: -1- AC_DEFUN([gl_STDLIB_H_DEFAULTS], [
  GNULIB__EXIT=0;         AC_SUBST([GNULIB__EXIT])
  GNULIB_ATOLL=0;         AC_SUBST([GNULIB_ATOLL])
  GNULIB_CALLOC_POSIX=0;  AC_SUBST([GNULIB_CALLOC_POSIX])
  GNULIB_CANONICALIZE_FILE_NAME=0;  AC_SUBST([GNULIB_CANONICALIZE_FILE_NAME])
  GNULIB_GETLOADAVG=0;    AC_SUBST([GNULIB_GETLOADAVG])
  GNULIB_GETSUBOPT=0;     AC_SUBST([GNULIB_GETSUBOPT])
  GNULIB_GRANTPT=0;       AC_SUBST([GNULIB_GRANTPT])
  GNULIB_MALLOC_POSIX=0;  AC_SUBST([GNULIB_MALLOC_POSIX])
  GNULIB_MBTOWC=0;        AC_SUBST([GNULIB_MBTOWC])
  GNULIB_MKDTEMP=0;       AC_SUBST([GNULIB_MKDTEMP])
  GNULIB_MKOSTEMP=0;      AC_SUBST([GNULIB_MKOSTEMP])
  GNULIB_MKOSTEMPS=0;     AC_SUBST([GNULIB_MKOSTEMPS])
  GNULIB_MKSTEMP=0;       AC_SUBST([GNULIB_MKSTEMP])
  GNULIB_MKSTEMPS=0;      AC_SUBST([GNULIB_MKSTEMPS])
  GNULIB_POSIX_OPENPT=0;  AC_SUBST([GNULIB_POSIX_OPENPT])
  GNULIB_PTSNAME=0;       AC_SUBST([GNULIB_PTSNAME])
  GNULIB_PTSNAME_R=0;     AC_SUBST([GNULIB_PTSNAME_R])
  GNULIB_PUTENV=0;        AC_SUBST([GNULIB_PUTENV])
  GNULIB_RANDOM=0;        AC_SUBST([GNULIB_RANDOM])
  GNULIB_RANDOM_R=0;      AC_SUBST([GNULIB_RANDOM_R])
  GNULIB_REALLOC_POSIX=0; AC_SUBST([GNULIB_REALLOC_POSIX])
  GNULIB_REALPATH=0;      AC_SUBST([GNULIB_REALPATH])
  GNULIB_RPMATCH=0;       AC_SUBST([GNULIB_RPMATCH])
  GNULIB_SECURE_GETENV=0; AC_SUBST([GNULIB_SECURE_GETENV])
  GNULIB_SETENV=0;        AC_SUBST([GNULIB_SETENV])
  GNULIB_STRTOD=0;        AC_SUBST([GNULIB_STRTOD])
  GNULIB_STRTOLL=0;       AC_SUBST([GNULIB_STRTOLL])
  GNULIB_STRTOULL=0;      AC_SUBST([GNULIB_STRTOULL])
  GNULIB_SYSTEM_POSIX=0;  AC_SUBST([GNULIB_SYSTEM_POSIX])
  GNULIB_UNLOCKPT=0;      AC_SUBST([GNULIB_UNLOCKPT])
  GNULIB_UNSETENV=0;      AC_SUBST([GNULIB_UNSETENV])
  GNULIB_WCTOMB=0;        AC_SUBST([GNULIB_WCTOMB])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE__EXIT=1;              AC_SUBST([HAVE__EXIT])
  HAVE_ATOLL=1;              AC_SUBST([HAVE_ATOLL])
  HAVE_CANONICALIZE_FILE_NAME=1;  AC_SUBST([HAVE_CANONICALIZE_FILE_NAME])
  HAVE_DECL_GETLOADAVG=1;    AC_SUBST([HAVE_DECL_GETLOADAVG])
  HAVE_GETSUBOPT=1;          AC_SUBST([HAVE_GETSUBOPT])
  HAVE_GRANTPT=1;            AC_SUBST([HAVE_GRANTPT])
  HAVE_MKDTEMP=1;            AC_SUBST([HAVE_MKDTEMP])
  HAVE_MKOSTEMP=1;           AC_SUBST([HAVE_MKOSTEMP])
  HAVE_MKOSTEMPS=1;          AC_SUBST([HAVE_MKOSTEMPS])
  HAVE_MKSTEMP=1;            AC_SUBST([HAVE_MKSTEMP])
  HAVE_MKSTEMPS=1;           AC_SUBST([HAVE_MKSTEMPS])
  HAVE_POSIX_OPENPT=1;       AC_SUBST([HAVE_POSIX_OPENPT])
  HAVE_PTSNAME=1;            AC_SUBST([HAVE_PTSNAME])
  HAVE_PTSNAME_R=1;          AC_SUBST([HAVE_PTSNAME_R])
  HAVE_RANDOM=1;             AC_SUBST([HAVE_RANDOM])
  HAVE_RANDOM_H=1;           AC_SUBST([HAVE_RANDOM_H])
  HAVE_RANDOM_R=1;           AC_SUBST([HAVE_RANDOM_R])
  HAVE_REALPATH=1;           AC_SUBST([HAVE_REALPATH])
  HAVE_RPMATCH=1;            AC_SUBST([HAVE_RPMATCH])
  HAVE_SECURE_GETENV=1;      AC_SUBST([HAVE_SECURE_GETENV])
  HAVE_SETENV=1;             AC_SUBST([HAVE_SETENV])
  HAVE_DECL_SETENV=1;        AC_SUBST([HAVE_DECL_SETENV])
  HAVE_STRTOD=1;             AC_SUBST([HAVE_STRTOD])
  HAVE_STRTOLL=1;            AC_SUBST([HAVE_STRTOLL])
  HAVE_STRTOULL=1;           AC_SUBST([HAVE_STRTOULL])
  HAVE_STRUCT_RANDOM_DATA=1; AC_SUBST([HAVE_STRUCT_RANDOM_DATA])
  HAVE_SYS_LOADAVG_H=0;      AC_SUBST([HAVE_SYS_LOADAVG_H])
  HAVE_UNLOCKPT=1;           AC_SUBST([HAVE_UNLOCKPT])
  HAVE_DECL_UNSETENV=1;      AC_SUBST([HAVE_DECL_UNSETENV])
  REPLACE_CALLOC=0;          AC_SUBST([REPLACE_CALLOC])
  REPLACE_CANONICALIZE_FILE_NAME=0;  AC_SUBST([REPLACE_CANONICALIZE_FILE_NAME])
  REPLACE_MALLOC=0;          AC_SUBST([REPLACE_MALLOC])
  REPLACE_MBTOWC=0;          AC_SUBST([REPLACE_MBTOWC])
  REPLACE_MKSTEMP=0;         AC_SUBST([REPLACE_MKSTEMP])
  REPLACE_PTSNAME=0;         AC_SUBST([REPLACE_PTSNAME])
  REPLACE_PTSNAME_R=0;       AC_SUBST([REPLACE_PTSNAME_R])
  REPLACE_PUTENV=0;          AC_SUBST([REPLACE_PUTENV])
  REPLACE_RANDOM_R=0;        AC_SUBST([REPLACE_RANDOM_R])
  REPLACE_REALLOC=0;         AC_SUBST([REPLACE_REALLOC])
  REPLACE_REALPATH=0;        AC_SUBST([REPLACE_REALPATH])
  REPLACE_SETENV=0;          AC_SUBST([REPLACE_SETENV])
  REPLACE_STRTOD=0;          AC_SUBST([REPLACE_STRTOD])
  REPLACE_UNSETENV=0;        AC_SUBST([REPLACE_UNSETENV])
  REPLACE_WCTOMB=0;          AC_SUBST([REPLACE_WCTOMB])
])
m4trace:m4/strftime.m4:11: -1- AC_DEFUN([gl_FUNC_GNU_STRFTIME], [
  gl_FUNC_STRFTIME
])
m4trace:m4/strftime.m4:17: -1- AC_DEFUN([gl_FUNC_STRFTIME], [
 # This defines (or not) HAVE_TZNAME and HAVE_TM_ZONE.
 AC_REQUIRE([AC_STRUCT_TIMEZONE])

 AC_REQUIRE([gl_TM_GMTOFF])

 AC_CHECK_FUNCS_ONCE([tzset])

 AC_DEFINE([my_strftime], [nstrftime],
   [Define to the name of the strftime replacement function.])
])
m4trace:m4/string_h.m4:12: -1- AC_DEFUN([gl_HEADER_STRING_H], [
  dnl Use AC_REQUIRE here, so that the default behavior below is expanded
  dnl once only, before all statements that occur in other macros.
  AC_REQUIRE([gl_HEADER_STRING_H_BODY])
])
m4trace:m4/string_h.m4:19: -1- AC_DEFUN([gl_HEADER_STRING_H_BODY], [
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([gl_HEADER_STRING_H_DEFAULTS])
  gl_NEXT_HEADERS([string.h])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use, and which is not
  dnl guaranteed by C89.
  gl_WARN_ON_USE_PREPARE([[#include <string.h>
    ]],
    [ffsl ffsll memmem mempcpy memrchr rawmemchr stpcpy stpncpy strchrnul
     strdup strncat strndup strnlen strpbrk strsep strcasestr strtok_r
     strerror_r strsignal strverscmp])
])
m4trace:m4/string_h.m4:35: -1- AC_DEFUN([gl_STRING_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_HEADER_STRING_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/string_h.m4:44: -1- AC_DEFUN([gl_HEADER_STRING_H_DEFAULTS], [
  GNULIB_FFSL=0;        AC_SUBST([GNULIB_FFSL])
  GNULIB_FFSLL=0;       AC_SUBST([GNULIB_FFSLL])
  GNULIB_MEMCHR=0;      AC_SUBST([GNULIB_MEMCHR])
  GNULIB_MEMMEM=0;      AC_SUBST([GNULIB_MEMMEM])
  GNULIB_MEMPCPY=0;     AC_SUBST([GNULIB_MEMPCPY])
  GNULIB_MEMRCHR=0;     AC_SUBST([GNULIB_MEMRCHR])
  GNULIB_RAWMEMCHR=0;   AC_SUBST([GNULIB_RAWMEMCHR])
  GNULIB_STPCPY=0;      AC_SUBST([GNULIB_STPCPY])
  GNULIB_STPNCPY=0;     AC_SUBST([GNULIB_STPNCPY])
  GNULIB_STRCHRNUL=0;   AC_SUBST([GNULIB_STRCHRNUL])
  GNULIB_STRDUP=0;      AC_SUBST([GNULIB_STRDUP])
  GNULIB_STRNCAT=0;     AC_SUBST([GNULIB_STRNCAT])
  GNULIB_STRNDUP=0;     AC_SUBST([GNULIB_STRNDUP])
  GNULIB_STRNLEN=0;     AC_SUBST([GNULIB_STRNLEN])
  GNULIB_STRPBRK=0;     AC_SUBST([GNULIB_STRPBRK])
  GNULIB_STRSEP=0;      AC_SUBST([GNULIB_STRSEP])
  GNULIB_STRSTR=0;      AC_SUBST([GNULIB_STRSTR])
  GNULIB_STRCASESTR=0;  AC_SUBST([GNULIB_STRCASESTR])
  GNULIB_STRTOK_R=0;    AC_SUBST([GNULIB_STRTOK_R])
  GNULIB_MBSLEN=0;      AC_SUBST([GNULIB_MBSLEN])
  GNULIB_MBSNLEN=0;     AC_SUBST([GNULIB_MBSNLEN])
  GNULIB_MBSCHR=0;      AC_SUBST([GNULIB_MBSCHR])
  GNULIB_MBSRCHR=0;     AC_SUBST([GNULIB_MBSRCHR])
  GNULIB_MBSSTR=0;      AC_SUBST([GNULIB_MBSSTR])
  GNULIB_MBSCASECMP=0;  AC_SUBST([GNULIB_MBSCASECMP])
  GNULIB_MBSNCASECMP=0; AC_SUBST([GNULIB_MBSNCASECMP])
  GNULIB_MBSPCASECMP=0; AC_SUBST([GNULIB_MBSPCASECMP])
  GNULIB_MBSCASESTR=0;  AC_SUBST([GNULIB_MBSCASESTR])
  GNULIB_MBSCSPN=0;     AC_SUBST([GNULIB_MBSCSPN])
  GNULIB_MBSPBRK=0;     AC_SUBST([GNULIB_MBSPBRK])
  GNULIB_MBSSPN=0;      AC_SUBST([GNULIB_MBSSPN])
  GNULIB_MBSSEP=0;      AC_SUBST([GNULIB_MBSSEP])
  GNULIB_MBSTOK_R=0;    AC_SUBST([GNULIB_MBSTOK_R])
  GNULIB_STRERROR=0;    AC_SUBST([GNULIB_STRERROR])
  GNULIB_STRERROR_R=0;  AC_SUBST([GNULIB_STRERROR_R])
  GNULIB_STRSIGNAL=0;   AC_SUBST([GNULIB_STRSIGNAL])
  GNULIB_STRVERSCMP=0;  AC_SUBST([GNULIB_STRVERSCMP])
  HAVE_MBSLEN=0;        AC_SUBST([HAVE_MBSLEN])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FFSL=1;                  AC_SUBST([HAVE_FFSL])
  HAVE_FFSLL=1;                 AC_SUBST([HAVE_FFSLL])
  HAVE_MEMCHR=1;                AC_SUBST([HAVE_MEMCHR])
  HAVE_DECL_MEMMEM=1;           AC_SUBST([HAVE_DECL_MEMMEM])
  HAVE_MEMPCPY=1;               AC_SUBST([HAVE_MEMPCPY])
  HAVE_DECL_MEMRCHR=1;          AC_SUBST([HAVE_DECL_MEMRCHR])
  HAVE_RAWMEMCHR=1;             AC_SUBST([HAVE_RAWMEMCHR])
  HAVE_STPCPY=1;                AC_SUBST([HAVE_STPCPY])
  HAVE_STPNCPY=1;               AC_SUBST([HAVE_STPNCPY])
  HAVE_STRCHRNUL=1;             AC_SUBST([HAVE_STRCHRNUL])
  HAVE_DECL_STRDUP=1;           AC_SUBST([HAVE_DECL_STRDUP])
  HAVE_DECL_STRNDUP=1;          AC_SUBST([HAVE_DECL_STRNDUP])
  HAVE_DECL_STRNLEN=1;          AC_SUBST([HAVE_DECL_STRNLEN])
  HAVE_STRPBRK=1;               AC_SUBST([HAVE_STRPBRK])
  HAVE_STRSEP=1;                AC_SUBST([HAVE_STRSEP])
  HAVE_STRCASESTR=1;            AC_SUBST([HAVE_STRCASESTR])
  HAVE_DECL_STRTOK_R=1;         AC_SUBST([HAVE_DECL_STRTOK_R])
  HAVE_DECL_STRERROR_R=1;       AC_SUBST([HAVE_DECL_STRERROR_R])
  HAVE_DECL_STRSIGNAL=1;        AC_SUBST([HAVE_DECL_STRSIGNAL])
  HAVE_STRVERSCMP=1;            AC_SUBST([HAVE_STRVERSCMP])
  REPLACE_MEMCHR=0;             AC_SUBST([REPLACE_MEMCHR])
  REPLACE_MEMMEM=0;             AC_SUBST([REPLACE_MEMMEM])
  REPLACE_STPNCPY=0;            AC_SUBST([REPLACE_STPNCPY])
  REPLACE_STRDUP=0;             AC_SUBST([REPLACE_STRDUP])
  REPLACE_STRSTR=0;             AC_SUBST([REPLACE_STRSTR])
  REPLACE_STRCASESTR=0;         AC_SUBST([REPLACE_STRCASESTR])
  REPLACE_STRCHRNUL=0;          AC_SUBST([REPLACE_STRCHRNUL])
  REPLACE_STRERROR=0;           AC_SUBST([REPLACE_STRERROR])
  REPLACE_STRERROR_R=0;         AC_SUBST([REPLACE_STRERROR_R])
  REPLACE_STRNCAT=0;            AC_SUBST([REPLACE_STRNCAT])
  REPLACE_STRNDUP=0;            AC_SUBST([REPLACE_STRNDUP])
  REPLACE_STRNLEN=0;            AC_SUBST([REPLACE_STRNLEN])
  REPLACE_STRSIGNAL=0;          AC_SUBST([REPLACE_STRSIGNAL])
  REPLACE_STRTOK_R=0;           AC_SUBST([REPLACE_STRTOK_R])
  UNDEFINE_STRTOK_R=0;          AC_SUBST([UNDEFINE_STRTOK_R])
])
m4trace:m4/strtoimax.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOIMAX], [
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])

  dnl On OSF/1 5.1 with cc, this function is declared but not defined.
  AC_CHECK_FUNCS_ONCE([strtoimax])
  AC_CHECK_DECLS_ONCE([strtoimax])
  if test "$ac_cv_have_decl_strtoimax" != yes; then
    HAVE_DECL_STRTOIMAX=0
  fi

  if test "$ac_cv_func_strtoimax" = yes; then
    HAVE_STRTOIMAX=1
    dnl On AIX 5.1, strtoimax() fails for values outside the 'int' range.
    AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
    AC_CACHE_CHECK([whether strtoimax works], [gl_cv_func_strtoimax],
      [AC_RUN_IFELSE(
         [AC_LANG_SOURCE([[
#include <errno.h>
#include <string.h>
#include <inttypes.h>
int main ()
{
  if (sizeof (intmax_t) > sizeof (int))
    {
      const char *s = "4294967295";
      char *p;
      intmax_t res;
      errno = 0;
      res = strtoimax (s, &p, 10);
      if (p != s + strlen (s))
        return 1;
      if (errno != 0)
        return 2;
      if (res != (intmax_t) 65535 * (intmax_t) 65537)
        return 3;
    }
  else
    {
      const char *s = "2147483647";
      char *p;
      intmax_t res;
      errno = 0;
      res = strtoimax (s, &p, 10);
      if (p != s + strlen (s))
        return 1;
      if (errno != 0)
        return 2;
      if (res != 2147483647)
        return 3;
    }
  return 0;
}
]])],
         [gl_cv_func_strtoimax=yes],
         [gl_cv_func_strtoimax=no],
         [case "$host_os" in
                   # Guess no on AIX 5.
            aix5*) gl_cv_func_strtoimax="guessing no" ;;
                   # Guess yes otherwise.
            *)     gl_cv_func_strtoimax="guessing yes" ;;
          esac
         ])
      ])
    case "$gl_cv_func_strtoimax" in
      *no) REPLACE_STRTOIMAX=1 ;;
    esac
  else
    if test "$ac_cv_have_decl_strtoimax" = yes; then
      # HP-UX 11.11 has "#define strtoimax(...) ..." but no function.
      REPLACE_STRTOIMAX=1
    fi
    HAVE_STRTOIMAX=0
  fi
])
m4trace:m4/strtoimax.m4:84: -1- AC_DEFUN([gl_PREREQ_STRTOIMAX], [
  AC_CHECK_DECLS([strtoll])
  AC_REQUIRE([AC_TYPE_LONG_LONG_INT])
])
m4trace:m4/strtoll.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOLL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  dnl We don't need (and can't compile) the replacement strtoll
  dnl unless the type 'long long int' exists.
  AC_REQUIRE([AC_TYPE_LONG_LONG_INT])
  if test "$ac_cv_type_long_long_int" = yes; then
    AC_CHECK_FUNCS([strtoll])
    if test $ac_cv_func_strtoll = no; then
      HAVE_STRTOLL=0
    fi
  fi
])
m4trace:m4/strtoll.m4:22: -1- AC_DEFUN([gl_PREREQ_STRTOLL], [
  :
])
m4trace:m4/strtoull.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOULL], [
  AC_REQUIRE([gl_STDLIB_H_DEFAULTS])
  dnl We don't need (and can't compile) the replacement strtoull
  dnl unless the type 'unsigned long long int' exists.
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])
  if test "$ac_cv_type_unsigned_long_long_int" = yes; then
    AC_CHECK_FUNCS([strtoull])
    if test $ac_cv_func_strtoull = no; then
      HAVE_STRTOULL=0
    fi
  fi
])
m4trace:m4/strtoull.m4:22: -1- AC_DEFUN([gl_PREREQ_STRTOULL], [
  :
])
m4trace:m4/strtoumax.m4:7: -1- AC_DEFUN([gl_FUNC_STRTOUMAX], [
  AC_REQUIRE([gl_INTTYPES_H_DEFAULTS])

  dnl On OSF/1 5.1 with cc, this function is declared but not defined.
  AC_CHECK_FUNCS_ONCE([strtoumax])
  AC_CHECK_DECLS_ONCE([strtoumax])
  if test "$ac_cv_have_decl_strtoumax" = yes; then
    if test "$ac_cv_func_strtoumax" != yes; then
      # HP-UX 11.11 has "#define strtoimax(...) ..." but no function.
      REPLACE_STRTOUMAX=1
    fi
  else
    HAVE_DECL_STRTOUMAX=0
  fi
])
m4trace:m4/strtoumax.m4:25: -1- AC_DEFUN([gl_PREREQ_STRTOUMAX], [
  AC_CHECK_DECLS([strtoull])
  AC_REQUIRE([AC_TYPE_UNSIGNED_LONG_LONG_INT])
])
m4trace:m4/symlink.m4:11: -1- AC_DEFUN([gl_FUNC_SYMLINK], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([symlink])
  dnl The best we can do on mingw is provide a dummy that always fails, so
  dnl that compilation can proceed with fewer ifdefs.  On FreeBSD 7.2, AIX 7.1,
  dnl and Solaris 9, we want to fix a bug with trailing slash handling.
  if test $ac_cv_func_symlink = no; then
    HAVE_SYMLINK=0
  else
    AC_CACHE_CHECK([whether symlink handles trailing slash correctly],
      [gl_cv_func_symlink_works],
      [AC_RUN_IFELSE(
         [AC_LANG_PROGRAM(
           [[#include <unistd.h>
           ]],
           [[int result = 0;
             if (!symlink ("a", "conftest.link/"))
               result |= 1;
             if (symlink ("conftest.f", "conftest.lnk2"))
               result |= 2;
             else if (!symlink ("a", "conftest.lnk2/"))
               result |= 4;
             return result;
           ]])],
         [gl_cv_func_symlink_works=yes], [gl_cv_func_symlink_works=no],
         [case "$host_os" in
                    # Guess yes on glibc systems.
            *-gnu*) gl_cv_func_symlink_works="guessing yes" ;;
                    # If we don't know, assume the worst.
            *)      gl_cv_func_symlink_works="guessing no" ;;
          esac
         ])
      rm -f conftest.f conftest.link conftest.lnk2])
    case "$gl_cv_func_symlink_works" in
      *yes) ;;
      *)
        REPLACE_SYMLINK=1
        ;;
    esac
  fi
])
m4trace:m4/sys_select_h.m4:7: -1- AC_DEFUN([gl_HEADER_SYS_SELECT], [
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
  AC_CACHE_CHECK([whether <sys/select.h> is self-contained],
    [gl_cv_header_sys_select_h_selfcontained],
    [
      dnl Test against two bugs:
      dnl 1. On many platforms, <sys/select.h> assumes prior inclusion of
      dnl    <sys/types.h>.
      dnl 2. On OSF/1 4.0, <sys/select.h> provides only a forward declaration
      dnl    of 'struct timeval', and no definition of this type.
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/select.h>]],
                                         [[struct timeval b;]])],
        [gl_cv_header_sys_select_h_selfcontained=yes],
        [gl_cv_header_sys_select_h_selfcontained=no])
      dnl Test against another bug:
      dnl 3. On Solaris 10, <sys/select.h> provides an FD_ZERO implementation
      dnl    that relies on memset(), but without including <string.h>.
      if test $gl_cv_header_sys_select_h_selfcontained = yes; then
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM([[#include <sys/select.h>]],
                           [[int memset; int bzero;]])
          ],
          [AC_LINK_IFELSE(
             [AC_LANG_PROGRAM([[#include <sys/select.h>]], [[
                  #undef memset
                  #define memset nonexistent_memset
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void *memset (void *, int, unsigned long);
                  #undef bzero
                  #define bzero nonexistent_bzero
                  extern
                  #ifdef __cplusplus
                  "C"
                  #endif
                  void bzero (void *, unsigned long);
                  fd_set fds;
                  FD_ZERO (&fds);
                ]])
             ],
             [],
             [gl_cv_header_sys_select_h_selfcontained=no])
          ])
      fi
    ])
  dnl <sys/select.h> is always overridden, because of GNULIB_POSIXCHECK.
  gl_CHECK_NEXT_HEADERS([sys/select.h])
  if test $ac_cv_header_sys_select_h = yes; then
    HAVE_SYS_SELECT_H=1
  else
    HAVE_SYS_SELECT_H=0
  fi
  AC_SUBST([HAVE_SYS_SELECT_H])
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#if !(defined __GLIBC__ && !defined __UCLIBC__) && HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <sys/select.h>
    ]], [pselect select])
])
m4trace:m4/sys_select_h.m4:78: -1- AC_DEFUN([gl_SYS_SELECT_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_SYS_SELECT_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_select_h.m4:87: -1- AC_DEFUN([gl_SYS_SELECT_H_DEFAULTS], [
  GNULIB_PSELECT=0; AC_SUBST([GNULIB_PSELECT])
  GNULIB_SELECT=0; AC_SUBST([GNULIB_SELECT])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_PSELECT=1; AC_SUBST([HAVE_PSELECT])
  REPLACE_PSELECT=0; AC_SUBST([REPLACE_PSELECT])
  REPLACE_SELECT=0; AC_SUBST([REPLACE_SELECT])
])
m4trace:m4/sys_socket_h.m4:9: -1- AC_DEFUN([gl_HEADER_SYS_SOCKET], [
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
  AC_REQUIRE([AC_CANONICAL_HOST])

  dnl On OSF/1, the functions recv(), send(), recvfrom(), sendto() have
  dnl old-style declarations (with return type 'int' instead of 'ssize_t')
  dnl unless _POSIX_PII_SOCKET is defined.
  case "$host_os" in
    osf*)
      AC_DEFINE([_POSIX_PII_SOCKET], [1],
        [Define to 1 in order to get the POSIX compatible declarations
         of socket functions.])
      ;;
  esac

  AC_CACHE_CHECK([whether <sys/socket.h> is self-contained],
    [gl_cv_header_sys_socket_h_selfcontained],
    [
      AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]], [[]])],
        [gl_cv_header_sys_socket_h_selfcontained=yes],
        [gl_cv_header_sys_socket_h_selfcontained=no])
    ])
  if test $gl_cv_header_sys_socket_h_selfcontained = yes; then
    dnl If the shutdown function exists, <sys/socket.h> should define
    dnl SHUT_RD, SHUT_WR, SHUT_RDWR.
    AC_CHECK_FUNCS([shutdown])
    if test $ac_cv_func_shutdown = yes; then
      AC_CACHE_CHECK([whether <sys/socket.h> defines the SHUT_* macros],
        [gl_cv_header_sys_socket_h_shut],
        [
          AC_COMPILE_IFELSE(
            [AC_LANG_PROGRAM([[#include <sys/socket.h>]],
               [[int a[] = { SHUT_RD, SHUT_WR, SHUT_RDWR };]])],
            [gl_cv_header_sys_socket_h_shut=yes],
            [gl_cv_header_sys_socket_h_shut=no])
        ])
      if test $gl_cv_header_sys_socket_h_shut = no; then
        SYS_SOCKET_H='sys/socket.h'
      fi
    fi
  fi
  # We need to check for ws2tcpip.h now.
  gl_PREREQ_SYS_H_SOCKET
  AC_CHECK_TYPES([struct sockaddr_storage, sa_family_t],,,[
  /* sys/types.h is not needed according to POSIX, but the
     sys/socket.h in i386-unknown-freebsd4.10 and
     powerpc-apple-darwin5.5 required it. */
#include <sys/types.h>
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
#ifdef HAVE_WS2TCPIP_H
#include <ws2tcpip.h>
#endif
])
  if test $ac_cv_type_struct_sockaddr_storage = no; then
    HAVE_STRUCT_SOCKADDR_STORAGE=0
  fi
  if test $ac_cv_type_sa_family_t = no; then
    HAVE_SA_FAMILY_T=0
  fi
  if test $ac_cv_type_struct_sockaddr_storage != no; then
    AC_CHECK_MEMBERS([struct sockaddr_storage.ss_family],
      [],
      [HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=0],
      [#include <sys/types.h>
       #ifdef HAVE_SYS_SOCKET_H
       #include <sys/socket.h>
       #endif
       #ifdef HAVE_WS2TCPIP_H
       #include <ws2tcpip.h>
       #endif
      ])
  fi
  if test $HAVE_STRUCT_SOCKADDR_STORAGE = 0 || test $HAVE_SA_FAMILY_T = 0 \
     || test $HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = 0; then
    SYS_SOCKET_H='sys/socket.h'
  fi
  gl_PREREQ_SYS_H_WINSOCK2

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
/* Some systems require prerequisite headers.  */
#include <sys/types.h>
#include <sys/socket.h>
    ]], [socket connect accept bind getpeername getsockname getsockopt
    listen recv send recvfrom sendto setsockopt shutdown accept4])
])
m4trace:m4/sys_socket_h.m4:100: -1- AC_DEFUN([gl_PREREQ_SYS_H_SOCKET], [
  dnl Check prerequisites of the <sys/socket.h> replacement.
  AC_REQUIRE([gl_CHECK_SOCKET_HEADERS])
  gl_CHECK_NEXT_HEADERS([sys/socket.h])
  if test $ac_cv_header_sys_socket_h = yes; then
    HAVE_SYS_SOCKET_H=1
    HAVE_WS2TCPIP_H=0
  else
    HAVE_SYS_SOCKET_H=0
    if test $ac_cv_header_ws2tcpip_h = yes; then
      HAVE_WS2TCPIP_H=1
    else
      HAVE_WS2TCPIP_H=0
    fi
  fi
  AC_SUBST([HAVE_SYS_SOCKET_H])
  AC_SUBST([HAVE_WS2TCPIP_H])
])
m4trace:m4/sys_socket_h.m4:123: -1- AC_DEFUN([gl_PREREQ_SYS_H_WINSOCK2], [
  m4_ifdef([gl_UNISTD_H_DEFAULTS], [AC_REQUIRE([gl_UNISTD_H_DEFAULTS])])
  m4_ifdef([gl_SYS_IOCTL_H_DEFAULTS], [AC_REQUIRE([gl_SYS_IOCTL_H_DEFAULTS])])
  AC_CHECK_HEADERS_ONCE([sys/socket.h])
  if test $ac_cv_header_sys_socket_h != yes; then
    dnl We cannot use AC_CHECK_HEADERS_ONCE here, because that would make
    dnl the check for those headers unconditional; yet cygwin reports
    dnl that the headers are present but cannot be compiled (since on
    dnl cygwin, all socket information should come from sys/socket.h).
    AC_CHECK_HEADERS([winsock2.h])
  fi
  if test "$ac_cv_header_winsock2_h" = yes; then
    HAVE_WINSOCK2_H=1
    UNISTD_H_HAVE_WINSOCK2_H=1
    SYS_IOCTL_H_HAVE_WINSOCK2_H=1
  else
    HAVE_WINSOCK2_H=0
  fi
  AC_SUBST([HAVE_WINSOCK2_H])
])
m4trace:m4/sys_socket_h.m4:145: -1- AC_DEFUN([gl_SYS_SOCKET_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_SYS_SOCKET_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_socket_h.m4:154: -1- AC_DEFUN([gl_SYS_SOCKET_H_DEFAULTS], [
  GNULIB_SOCKET=0;      AC_SUBST([GNULIB_SOCKET])
  GNULIB_CONNECT=0;     AC_SUBST([GNULIB_CONNECT])
  GNULIB_ACCEPT=0;      AC_SUBST([GNULIB_ACCEPT])
  GNULIB_BIND=0;        AC_SUBST([GNULIB_BIND])
  GNULIB_GETPEERNAME=0; AC_SUBST([GNULIB_GETPEERNAME])
  GNULIB_GETSOCKNAME=0; AC_SUBST([GNULIB_GETSOCKNAME])
  GNULIB_GETSOCKOPT=0;  AC_SUBST([GNULIB_GETSOCKOPT])
  GNULIB_LISTEN=0;      AC_SUBST([GNULIB_LISTEN])
  GNULIB_RECV=0;        AC_SUBST([GNULIB_RECV])
  GNULIB_SEND=0;        AC_SUBST([GNULIB_SEND])
  GNULIB_RECVFROM=0;    AC_SUBST([GNULIB_RECVFROM])
  GNULIB_SENDTO=0;      AC_SUBST([GNULIB_SENDTO])
  GNULIB_SETSOCKOPT=0;  AC_SUBST([GNULIB_SETSOCKOPT])
  GNULIB_SHUTDOWN=0;    AC_SUBST([GNULIB_SHUTDOWN])
  GNULIB_ACCEPT4=0;     AC_SUBST([GNULIB_ACCEPT4])
  HAVE_STRUCT_SOCKADDR_STORAGE=1; AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE])
  HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY=1;
                        AC_SUBST([HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY])
  HAVE_SA_FAMILY_T=1;   AC_SUBST([HAVE_SA_FAMILY_T])
  HAVE_ACCEPT4=1;       AC_SUBST([HAVE_ACCEPT4])
])
m4trace:m4/sys_stat_h.m4:10: -1- AC_DEFUN([gl_HEADER_SYS_STAT_H], [
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])

  dnl Check for broken stat macros.
  AC_REQUIRE([AC_HEADER_STAT])

  gl_CHECK_NEXT_HEADERS([sys/stat.h])

  dnl Ensure the type mode_t gets defined.
  AC_REQUIRE([AC_TYPE_MODE_T])

  dnl Whether to override 'struct stat'.
  m4_ifdef([gl_LARGEFILE], [
    AC_REQUIRE([gl_LARGEFILE])
  ], [
    WINDOWS_64_BIT_ST_SIZE=0
  ])
  AC_SUBST([WINDOWS_64_BIT_ST_SIZE])
  if test $WINDOWS_64_BIT_ST_SIZE = 1; then
    AC_DEFINE([_GL_WINDOWS_64_BIT_ST_SIZE], [1],
      [Define to 1 if Gnulib overrides 'struct stat' on Windows so that
       struct stat.st_size becomes 64-bit.])
  fi

  dnl Define types that are supposed to be defined in <sys/types.h> or
  dnl <sys/stat.h>.
  AC_CHECK_TYPE([nlink_t], [],
    [AC_DEFINE([nlink_t], [int],
       [Define to the type of st_nlink in struct stat, or a supertype.])],
    [#include <sys/types.h>
     #include <sys/stat.h>])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[#include <sys/stat.h>
    ]], [fchmodat fstat fstatat futimens lchmod lstat mkdirat mkfifo mkfifoat
    mknod mknodat stat utimensat])
])
m4trace:m4/sys_stat_h.m4:50: -1- AC_DEFUN([gl_SYS_STAT_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_SYS_STAT_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_stat_h.m4:59: -1- AC_DEFUN([gl_SYS_STAT_H_DEFAULTS], [
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS]) dnl for REPLACE_FCHDIR
  GNULIB_FCHMODAT=0;    AC_SUBST([GNULIB_FCHMODAT])
  GNULIB_FSTAT=0;       AC_SUBST([GNULIB_FSTAT])
  GNULIB_FSTATAT=0;     AC_SUBST([GNULIB_FSTATAT])
  GNULIB_FUTIMENS=0;    AC_SUBST([GNULIB_FUTIMENS])
  GNULIB_LCHMOD=0;      AC_SUBST([GNULIB_LCHMOD])
  GNULIB_LSTAT=0;       AC_SUBST([GNULIB_LSTAT])
  GNULIB_MKDIRAT=0;     AC_SUBST([GNULIB_MKDIRAT])
  GNULIB_MKFIFO=0;      AC_SUBST([GNULIB_MKFIFO])
  GNULIB_MKFIFOAT=0;    AC_SUBST([GNULIB_MKFIFOAT])
  GNULIB_MKNOD=0;       AC_SUBST([GNULIB_MKNOD])
  GNULIB_MKNODAT=0;     AC_SUBST([GNULIB_MKNODAT])
  GNULIB_STAT=0;        AC_SUBST([GNULIB_STAT])
  GNULIB_UTIMENSAT=0;   AC_SUBST([GNULIB_UTIMENSAT])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_FCHMODAT=1;      AC_SUBST([HAVE_FCHMODAT])
  HAVE_FSTATAT=1;       AC_SUBST([HAVE_FSTATAT])
  HAVE_FUTIMENS=1;      AC_SUBST([HAVE_FUTIMENS])
  HAVE_LCHMOD=1;        AC_SUBST([HAVE_LCHMOD])
  HAVE_LSTAT=1;         AC_SUBST([HAVE_LSTAT])
  HAVE_MKDIRAT=1;       AC_SUBST([HAVE_MKDIRAT])
  HAVE_MKFIFO=1;        AC_SUBST([HAVE_MKFIFO])
  HAVE_MKFIFOAT=1;      AC_SUBST([HAVE_MKFIFOAT])
  HAVE_MKNOD=1;         AC_SUBST([HAVE_MKNOD])
  HAVE_MKNODAT=1;       AC_SUBST([HAVE_MKNODAT])
  HAVE_UTIMENSAT=1;     AC_SUBST([HAVE_UTIMENSAT])
  REPLACE_FSTAT=0;      AC_SUBST([REPLACE_FSTAT])
  REPLACE_FSTATAT=0;    AC_SUBST([REPLACE_FSTATAT])
  REPLACE_FUTIMENS=0;   AC_SUBST([REPLACE_FUTIMENS])
  REPLACE_LSTAT=0;      AC_SUBST([REPLACE_LSTAT])
  REPLACE_MKDIR=0;      AC_SUBST([REPLACE_MKDIR])
  REPLACE_MKFIFO=0;     AC_SUBST([REPLACE_MKFIFO])
  REPLACE_MKNOD=0;      AC_SUBST([REPLACE_MKNOD])
  REPLACE_STAT=0;       AC_SUBST([REPLACE_STAT])
  REPLACE_UTIMENSAT=0;  AC_SUBST([REPLACE_UTIMENSAT])
])
m4trace:m4/sys_time_h.m4:11: -1- AC_DEFUN([gl_HEADER_SYS_TIME_H], [
  dnl Use AC_REQUIRE here, so that the REPLACE_GETTIMEOFDAY=0 statement
  dnl below is expanded once only, before all REPLACE_GETTIMEOFDAY=1
  dnl statements that occur in other macros.
  AC_REQUIRE([gl_HEADER_SYS_TIME_H_BODY])
])
m4trace:m4/sys_time_h.m4:19: -1- AC_DEFUN([gl_HEADER_SYS_TIME_H_BODY], [
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([gl_HEADER_SYS_TIME_H_DEFAULTS])
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  gl_CHECK_NEXT_HEADERS([sys/time.h])

  if test $ac_cv_header_sys_time_h != yes; then
    HAVE_SYS_TIME_H=0
  fi

  dnl On native Windows with MSVC, 'struct timeval' is defined in <winsock2.h>
  dnl only. So include that header in the list.
  gl_PREREQ_SYS_H_WINSOCK2
  AC_CACHE_CHECK([for struct timeval], [gl_cv_sys_struct_timeval],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#if HAVE_SYS_TIME_H
             #include <sys/time.h>
            #endif
            #include <time.h>
            #if HAVE_WINSOCK2_H
            # include <winsock2.h>
            #endif
          ]],
          [[static struct timeval x; x.tv_sec = x.tv_usec;]])],
       [gl_cv_sys_struct_timeval=yes],
       [gl_cv_sys_struct_timeval=no])
    ])
  if test $gl_cv_sys_struct_timeval != yes; then
    HAVE_STRUCT_TIMEVAL=0
  else
    dnl On native Windows with a 64-bit 'time_t', 'struct timeval' is defined
    dnl (in <sys/time.h> and <winsock2.h> for mingw64, in <winsock2.h> only
    dnl for MSVC) with a tv_sec field of type 'long' (32-bit!), which is
    dnl smaller than the 'time_t' type mandated by POSIX.
    dnl On OpenBSD 5.1 amd64, tv_sec is 64 bits and time_t 32 bits, but
    dnl that is good enough.
    AC_CACHE_CHECK([for wide-enough struct timeval.tv_sec member],
      [gl_cv_sys_struct_timeval_tv_sec],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#if HAVE_SYS_TIME_H
               #include <sys/time.h>
              #endif
              #include <time.h>
              #if HAVE_WINSOCK2_H
              # include <winsock2.h>
              #endif
            ]],
            [[static struct timeval x;
              typedef int verify_tv_sec_type[
                sizeof (time_t) <= sizeof x.tv_sec ? 1 : -1
              ];
            ]])],
         [gl_cv_sys_struct_timeval_tv_sec=yes],
         [gl_cv_sys_struct_timeval_tv_sec=no])
      ])
    if test $gl_cv_sys_struct_timeval_tv_sec != yes; then
      REPLACE_STRUCT_TIMEVAL=1
    fi
  fi

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_SYS_TIME_H
# include <sys/time.h>
#endif
#include <time.h>
    ]], [gettimeofday])
])
m4trace:m4/sys_time_h.m4:92: -1- AC_DEFUN([gl_SYS_TIME_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_HEADER_SYS_TIME_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/sys_time_h.m4:101: -1- AC_DEFUN([gl_HEADER_SYS_TIME_H_DEFAULTS], [
  GNULIB_GETTIMEOFDAY=0;     AC_SUBST([GNULIB_GETTIMEOFDAY])
  dnl Assume POSIX behavior unless another module says otherwise.
  HAVE_GETTIMEOFDAY=1;       AC_SUBST([HAVE_GETTIMEOFDAY])
  HAVE_STRUCT_TIMEVAL=1;     AC_SUBST([HAVE_STRUCT_TIMEVAL])
  HAVE_SYS_TIME_H=1;         AC_SUBST([HAVE_SYS_TIME_H])
  REPLACE_GETTIMEOFDAY=0;    AC_SUBST([REPLACE_GETTIMEOFDAY])
  REPLACE_STRUCT_TIMEVAL=0;  AC_SUBST([REPLACE_STRUCT_TIMEVAL])
])
m4trace:m4/tempname.m4:10: -1- AC_DEFUN([gl_FUNC_GEN_TEMPNAME], [
  gl_PREREQ_TEMPNAME
])
m4trace:m4/tempname.m4:16: -1- AC_DEFUN([gl_PREREQ_TEMPNAME], [
  :
])
m4trace:m4/time_h.m4:13: -1- AC_DEFUN([gl_HEADER_TIME_H], [
  dnl Use AC_REQUIRE here, so that the default behavior below is expanded
  dnl once only, before all statements that occur in other macros.
  AC_REQUIRE([gl_HEADER_TIME_H_BODY])
])
m4trace:m4/time_h.m4:20: -1- AC_DEFUN([gl_HEADER_TIME_H_BODY], [
  AC_REQUIRE([AC_C_RESTRICT])
  AC_REQUIRE([gl_HEADER_TIME_H_DEFAULTS])
  gl_NEXT_HEADERS([time.h])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])
])
m4trace:m4/time_h.m4:31: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_TIMESPEC], [
  AC_CHECK_HEADERS_ONCE([sys/time.h])
  AC_CACHE_CHECK([for struct timespec in <time.h>],
    [gl_cv_sys_struct_timespec_in_time_h],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <time.h>
          ]],
          [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
       [gl_cv_sys_struct_timespec_in_time_h=yes],
       [gl_cv_sys_struct_timespec_in_time_h=no])])

  TIME_H_DEFINES_STRUCT_TIMESPEC=0
  SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=0
  PTHREAD_H_DEFINES_STRUCT_TIMESPEC=0
  if test $gl_cv_sys_struct_timespec_in_time_h = yes; then
    TIME_H_DEFINES_STRUCT_TIMESPEC=1
  else
    AC_CACHE_CHECK([for struct timespec in <sys/time.h>],
      [gl_cv_sys_struct_timespec_in_sys_time_h],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <sys/time.h>
            ]],
            [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
         [gl_cv_sys_struct_timespec_in_sys_time_h=yes],
         [gl_cv_sys_struct_timespec_in_sys_time_h=no])])
    if test $gl_cv_sys_struct_timespec_in_sys_time_h = yes; then
      SYS_TIME_H_DEFINES_STRUCT_TIMESPEC=1
    else
      AC_CACHE_CHECK([for struct timespec in <pthread.h>],
        [gl_cv_sys_struct_timespec_in_pthread_h],
        [AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM(
              [[#include <pthread.h>
              ]],
              [[static struct timespec x; x.tv_sec = x.tv_nsec;]])],
           [gl_cv_sys_struct_timespec_in_pthread_h=yes],
           [gl_cv_sys_struct_timespec_in_pthread_h=no])])
      if test $gl_cv_sys_struct_timespec_in_pthread_h = yes; then
        PTHREAD_H_DEFINES_STRUCT_TIMESPEC=1
      fi
    fi
  fi
  AC_SUBST([TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([SYS_TIME_H_DEFINES_STRUCT_TIMESPEC])
  AC_SUBST([PTHREAD_H_DEFINES_STRUCT_TIMESPEC])
])
m4trace:m4/time_h.m4:81: -1- AC_DEFUN([gl_TIME_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_HEADER_TIME_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/time_h.m4:90: -1- AC_DEFUN([gl_HEADER_TIME_H_DEFAULTS], [
  GNULIB_MKTIME=0;                       AC_SUBST([GNULIB_MKTIME])
  GNULIB_NANOSLEEP=0;                    AC_SUBST([GNULIB_NANOSLEEP])
  GNULIB_STRPTIME=0;                     AC_SUBST([GNULIB_STRPTIME])
  GNULIB_TIMEGM=0;                       AC_SUBST([GNULIB_TIMEGM])
  GNULIB_TIME_R=0;                       AC_SUBST([GNULIB_TIME_R])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_DECL_LOCALTIME_R=1;               AC_SUBST([HAVE_DECL_LOCALTIME_R])
  HAVE_NANOSLEEP=1;                      AC_SUBST([HAVE_NANOSLEEP])
  HAVE_STRPTIME=1;                       AC_SUBST([HAVE_STRPTIME])
  HAVE_TIMEGM=1;                         AC_SUBST([HAVE_TIMEGM])
  dnl If another module says to replace or to not replace, do that.
  dnl Otherwise, replace only if someone compiles with -DGNULIB_PORTCHECK;
  dnl this lets maintainers check for portability.
  REPLACE_LOCALTIME_R=GNULIB_PORTCHECK;  AC_SUBST([REPLACE_LOCALTIME_R])
  REPLACE_MKTIME=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_MKTIME])
  REPLACE_NANOSLEEP=GNULIB_PORTCHECK;    AC_SUBST([REPLACE_NANOSLEEP])
  REPLACE_TIMEGM=GNULIB_PORTCHECK;       AC_SUBST([REPLACE_TIMEGM])

  dnl Hack so that the time module doesn't depend on the sys_time module.
  dnl First, default GNULIB_GETTIMEOFDAY to 0 if sys_time is absent.
  : ${GNULIB_GETTIMEOFDAY=0};            AC_SUBST([GNULIB_GETTIMEOFDAY])
  dnl Second, it's OK to not use GNULIB_PORTCHECK for REPLACE_GMTIME
  dnl and REPLACE_LOCALTIME, as portability to Solaris 2.6 and earlier
  dnl is no longer a big deal.
  REPLACE_GMTIME=0;                      AC_SUBST([REPLACE_GMTIME])
  REPLACE_LOCALTIME=0;                   AC_SUBST([REPLACE_LOCALTIME])
])
m4trace:m4/time_r.m4:10: -1- AC_DEFUN([gl_TIME_R], [
  dnl Persuade glibc and Solaris <time.h> to declare localtime_r.
  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])

  AC_REQUIRE([gl_HEADER_TIME_H_DEFAULTS])
  AC_REQUIRE([AC_C_RESTRICT])

  dnl Some systems don't declare localtime_r() and gmtime_r() if _REENTRANT is
  dnl not defined.
  AC_CHECK_DECLS([localtime_r], [], [], [[#include <time.h>]])
  if test $ac_cv_have_decl_localtime_r = no; then
    HAVE_DECL_LOCALTIME_R=0
  fi

  AC_CHECK_FUNCS_ONCE([localtime_r])
  if test $ac_cv_func_localtime_r = yes; then
    HAVE_LOCALTIME_R=1
    AC_CACHE_CHECK([whether localtime_r is compatible with its POSIX signature],
      [gl_cv_time_r_posix],
      [AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM(
            [[#include <time.h>]],
            [[/* We don't need to append 'restrict's to the argument types,
                 even though the POSIX signature has the 'restrict's,
                 since C99 says they can't affect type compatibility.  */
              struct tm * (*ptr) (time_t const *, struct tm *) = localtime_r;
              if (ptr) return 0;
              /* Check the return type is a pointer.
                 On HP-UX 10 it is 'int'.  */
              *localtime_r (0, 0);]])
         ],
         [gl_cv_time_r_posix=yes],
         [gl_cv_time_r_posix=no])
      ])
    if test $gl_cv_time_r_posix = yes; then
      REPLACE_LOCALTIME_R=0
    else
      REPLACE_LOCALTIME_R=1
    fi
  else
    HAVE_LOCALTIME_R=0
  fi
])
m4trace:m4/time_r.m4:56: -1- AC_DEFUN([gl_PREREQ_TIME_R], [
  :
])
m4trace:m4/timer_time.m4:9: -1- AC_DEFUN([gl_TIMER_TIME], [
  dnl Based on clock_time.m4. See details there.

  AC_REQUIRE([gl_USE_SYSTEM_EXTENSIONS])
  AC_REQUIRE([gl_THREADLIB])

  LIB_TIMER_TIME=
  AC_SUBST([LIB_TIMER_TIME])
  gl_saved_libs=$LIBS
    AC_SEARCH_LIBS([timer_settime], [rt posix4],
                   [test "$ac_cv_search_timer_settime" = "none required" ||
                    LIB_TIMER_TIME=$ac_cv_search_timer_settime])
    dnl GLIBC uses threads to emulate posix timers when kernel support
    dnl is not available (like Linux < 2.6 or when used with kFreeBSD)
    dnl Now the pthread lib is linked automatically in the normal case,
    dnl but when linking statically, it needs to be explicitly specified.
    AC_EGREP_CPP([Thread],
      [
#include <features.h>
#ifdef __GNU_LIBRARY__
 #if ((__GLIBC__ == 2 && __GLIBC_MINOR__ >= 2) || (__GLIBC__ > 2)) \
     && !defined __UCLIBC__
  Thread emulation available
 #endif
#endif
      ],
      [LIB_TIMER_TIME="$LIB_TIMER_TIME $LIBMULTITHREAD"])
    AC_CHECK_FUNCS([timer_settime])
  LIBS=$gl_saved_libs
])
m4trace:m4/timespec.m4:11: -1- AC_DEFUN([gl_TIMESPEC], [:])
m4trace:m4/tm_gmtoff.m4:7: -1- AC_DEFUN([gl_TM_GMTOFF], [
 AC_CHECK_MEMBER([struct tm.tm_gmtoff],
                 [AC_DEFINE([HAVE_TM_GMTOFF], [1],
                            [Define if struct tm has the tm_gmtoff member.])],
                 ,
                 [#include <time.h>])
])
m4trace:m4/unistd_h.m4:9: -1- AC_DEFUN([gl_UNISTD_H], [
  dnl Use AC_REQUIRE here, so that the default behavior below is expanded
  dnl once only, before all statements that occur in other macros.
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])

  gl_CHECK_NEXT_HEADERS([unistd.h])
  if test $ac_cv_header_unistd_h = yes; then
    HAVE_UNISTD_H=1
  else
    HAVE_UNISTD_H=0
  fi
  AC_SUBST([HAVE_UNISTD_H])

  dnl Ensure the type pid_t gets defined.
  AC_REQUIRE([AC_TYPE_PID_T])

  dnl Determine WINDOWS_64_BIT_OFF_T.
  AC_REQUIRE([gl_TYPE_OFF_T])

  dnl Check for declarations of anything we want to poison if the
  dnl corresponding gnulib module is not in use.
  gl_WARN_ON_USE_PREPARE([[
#if HAVE_UNISTD_H
# include <unistd.h>
#endif
/* Some systems declare various items in the wrong headers.  */
#if !(defined __GLIBC__ && !defined __UCLIBC__)
# include <fcntl.h>
# include <stdio.h>
# include <stdlib.h>
# if (defined _WIN32 || defined __WIN32__) && ! defined __CYGWIN__
#  include <io.h>
# endif
#endif
    ]], [chdir chown dup dup2 dup3 environ euidaccess faccessat fchdir fchownat
    fdatasync fsync ftruncate getcwd getdomainname getdtablesize getgroups
    gethostname getlogin getlogin_r getpagesize
    getusershell setusershell endusershell
    group_member isatty lchown link linkat lseek pipe pipe2 pread pwrite
    readlink readlinkat rmdir sethostname sleep symlink symlinkat ttyname_r
    unlink unlinkat usleep])
])
m4trace:m4/unistd_h.m4:53: -1- AC_DEFUN([gl_UNISTD_MODULE_INDICATOR], [
  dnl Use AC_REQUIRE here, so that the default settings are expanded once only.
  AC_REQUIRE([gl_UNISTD_H_DEFAULTS])
  gl_MODULE_INDICATOR_SET_VARIABLE([$1])
  dnl Define it also as a C macro, for the benefit of the unit tests.
  gl_MODULE_INDICATOR_FOR_TESTS([$1])
])
m4trace:m4/unistd_h.m4:62: -1- AC_DEFUN([gl_UNISTD_H_DEFAULTS], [
  GNULIB_CHDIR=0;                AC_SUBST([GNULIB_CHDIR])
  GNULIB_CHOWN=0;                AC_SUBST([GNULIB_CHOWN])
  GNULIB_CLOSE=0;                AC_SUBST([GNULIB_CLOSE])
  GNULIB_DUP=0;                  AC_SUBST([GNULIB_DUP])
  GNULIB_DUP2=0;                 AC_SUBST([GNULIB_DUP2])
  GNULIB_DUP3=0;                 AC_SUBST([GNULIB_DUP3])
  GNULIB_ENVIRON=0;              AC_SUBST([GNULIB_ENVIRON])
  GNULIB_EUIDACCESS=0;           AC_SUBST([GNULIB_EUIDACCESS])
  GNULIB_FACCESSAT=0;            AC_SUBST([GNULIB_FACCESSAT])
  GNULIB_FCHDIR=0;               AC_SUBST([GNULIB_FCHDIR])
  GNULIB_FCHOWNAT=0;             AC_SUBST([GNULIB_FCHOWNAT])
  GNULIB_FDATASYNC=0;            AC_SUBST([GNULIB_FDATASYNC])
  GNULIB_FSYNC=0;                AC_SUBST([GNULIB_FSYNC])
  GNULIB_FTRUNCATE=0;            AC_SUBST([GNULIB_FTRUNCATE])
  GNULIB_GETCWD=0;               AC_SUBST([GNULIB_GETCWD])
  GNULIB_GETDOMAINNAME=0;        AC_SUBST([GNULIB_GETDOMAINNAME])
  GNULIB_GETDTABLESIZE=0;        AC_SUBST([GNULIB_GETDTABLESIZE])
  GNULIB_GETGROUPS=0;            AC_SUBST([GNULIB_GETGROUPS])
  GNULIB_GETHOSTNAME=0;          AC_SUBST([GNULIB_GETHOSTNAME])
  GNULIB_GETLOGIN=0;             AC_SUBST([GNULIB_GETLOGIN])
  GNULIB_GETLOGIN_R=0;           AC_SUBST([GNULIB_GETLOGIN_R])
  GNULIB_GETPAGESIZE=0;          AC_SUBST([GNULIB_GETPAGESIZE])
  GNULIB_GETUSERSHELL=0;         AC_SUBST([GNULIB_GETUSERSHELL])
  GNULIB_GROUP_MEMBER=0;         AC_SUBST([GNULIB_GROUP_MEMBER])
  GNULIB_ISATTY=0;               AC_SUBST([GNULIB_ISATTY])
  GNULIB_LCHOWN=0;               AC_SUBST([GNULIB_LCHOWN])
  GNULIB_LINK=0;                 AC_SUBST([GNULIB_LINK])
  GNULIB_LINKAT=0;               AC_SUBST([GNULIB_LINKAT])
  GNULIB_LSEEK=0;                AC_SUBST([GNULIB_LSEEK])
  GNULIB_PIPE=0;                 AC_SUBST([GNULIB_PIPE])
  GNULIB_PIPE2=0;                AC_SUBST([GNULIB_PIPE2])
  GNULIB_PREAD=0;                AC_SUBST([GNULIB_PREAD])
  GNULIB_PWRITE=0;               AC_SUBST([GNULIB_PWRITE])
  GNULIB_READ=0;                 AC_SUBST([GNULIB_READ])
  GNULIB_READLINK=0;             AC_SUBST([GNULIB_READLINK])
  GNULIB_READLINKAT=0;           AC_SUBST([GNULIB_READLINKAT])
  GNULIB_RMDIR=0;                AC_SUBST([GNULIB_RMDIR])
  GNULIB_SETHOSTNAME=0;          AC_SUBST([GNULIB_SETHOSTNAME])
  GNULIB_SLEEP=0;                AC_SUBST([GNULIB_SLEEP])
  GNULIB_SYMLINK=0;              AC_SUBST([GNULIB_SYMLINK])
  GNULIB_SYMLINKAT=0;            AC_SUBST([GNULIB_SYMLINKAT])
  GNULIB_TTYNAME_R=0;            AC_SUBST([GNULIB_TTYNAME_R])
  GNULIB_UNISTD_H_NONBLOCKING=0; AC_SUBST([GNULIB_UNISTD_H_NONBLOCKING])
  GNULIB_UNISTD_H_SIGPIPE=0;     AC_SUBST([GNULIB_UNISTD_H_SIGPIPE])
  GNULIB_UNLINK=0;               AC_SUBST([GNULIB_UNLINK])
  GNULIB_UNLINKAT=0;             AC_SUBST([GNULIB_UNLINKAT])
  GNULIB_USLEEP=0;               AC_SUBST([GNULIB_USLEEP])
  GNULIB_WRITE=0;                AC_SUBST([GNULIB_WRITE])
  dnl Assume proper GNU behavior unless another module says otherwise.
  HAVE_CHOWN=1;           AC_SUBST([HAVE_CHOWN])
  HAVE_DUP2=1;            AC_SUBST([HAVE_DUP2])
  HAVE_DUP3=1;            AC_SUBST([HAVE_DUP3])
  HAVE_EUIDACCESS=1;      AC_SUBST([HAVE_EUIDACCESS])
  HAVE_FACCESSAT=1;       AC_SUBST([HAVE_FACCESSAT])
  HAVE_FCHDIR=1;          AC_SUBST([HAVE_FCHDIR])
  HAVE_FCHOWNAT=1;        AC_SUBST([HAVE_FCHOWNAT])
  HAVE_FDATASYNC=1;       AC_SUBST([HAVE_FDATASYNC])
  HAVE_FSYNC=1;           AC_SUBST([HAVE_FSYNC])
  HAVE_FTRUNCATE=1;       AC_SUBST([HAVE_FTRUNCATE])
  HAVE_GETDTABLESIZE=1;   AC_SUBST([HAVE_GETDTABLESIZE])
  HAVE_GETGROUPS=1;       AC_SUBST([HAVE_GETGROUPS])
  HAVE_GETHOSTNAME=1;     AC_SUBST([HAVE_GETHOSTNAME])
  HAVE_GETLOGIN=1;        AC_SUBST([HAVE_GETLOGIN])
  HAVE_GETPAGESIZE=1;     AC_SUBST([HAVE_GETPAGESIZE])
  HAVE_GROUP_MEMBER=1;    AC_SUBST([HAVE_GROUP_MEMBER])
  HAVE_LCHOWN=1;          AC_SUBST([HAVE_LCHOWN])
  HAVE_LINK=1;            AC_SUBST([HAVE_LINK])
  HAVE_LINKAT=1;          AC_SUBST([HAVE_LINKAT])
  HAVE_PIPE=1;            AC_SUBST([HAVE_PIPE])
  HAVE_PIPE2=1;           AC_SUBST([HAVE_PIPE2])
  HAVE_PREAD=1;           AC_SUBST([HAVE_PREAD])
  HAVE_PWRITE=1;          AC_SUBST([HAVE_PWRITE])
  HAVE_READLINK=1;        AC_SUBST([HAVE_READLINK])
  HAVE_READLINKAT=1;      AC_SUBST([HAVE_READLINKAT])
  HAVE_SETHOSTNAME=1;     AC_SUBST([HAVE_SETHOSTNAME])
  HAVE_SLEEP=1;           AC_SUBST([HAVE_SLEEP])
  HAVE_SYMLINK=1;         AC_SUBST([HAVE_SYMLINK])
  HAVE_SYMLINKAT=1;       AC_SUBST([HAVE_SYMLINKAT])
  HAVE_UNLINKAT=1;        AC_SUBST([HAVE_UNLINKAT])
  HAVE_USLEEP=1;          AC_SUBST([HAVE_USLEEP])
  HAVE_DECL_ENVIRON=1;    AC_SUBST([HAVE_DECL_ENVIRON])
  HAVE_DECL_FCHDIR=1;     AC_SUBST([HAVE_DECL_FCHDIR])
  HAVE_DECL_FDATASYNC=1;  AC_SUBST([HAVE_DECL_FDATASYNC])
  HAVE_DECL_GETDOMAINNAME=1; AC_SUBST([HAVE_DECL_GETDOMAINNAME])
  HAVE_DECL_GETLOGIN_R=1; AC_SUBST([HAVE_DECL_GETLOGIN_R])
  HAVE_DECL_GETPAGESIZE=1; AC_SUBST([HAVE_DECL_GETPAGESIZE])
  HAVE_DECL_GETUSERSHELL=1; AC_SUBST([HAVE_DECL_GETUSERSHELL])
  HAVE_DECL_SETHOSTNAME=1; AC_SUBST([HAVE_DECL_SETHOSTNAME])
  HAVE_DECL_TTYNAME_R=1;  AC_SUBST([HAVE_DECL_TTYNAME_R])
  HAVE_OS_H=0;            AC_SUBST([HAVE_OS_H])
  HAVE_SYS_PARAM_H=0;     AC_SUBST([HAVE_SYS_PARAM_H])
  REPLACE_CHOWN=0;        AC_SUBST([REPLACE_CHOWN])
  REPLACE_CLOSE=0;        AC_SUBST([REPLACE_CLOSE])
  REPLACE_DUP=0;          AC_SUBST([REPLACE_DUP])
  REPLACE_DUP2=0;         AC_SUBST([REPLACE_DUP2])
  REPLACE_FCHOWNAT=0;     AC_SUBST([REPLACE_FCHOWNAT])
  REPLACE_FTRUNCATE=0;    AC_SUBST([REPLACE_FTRUNCATE])
  REPLACE_GETCWD=0;       AC_SUBST([REPLACE_GETCWD])
  REPLACE_GETDOMAINNAME=0; AC_SUBST([REPLACE_GETDOMAINNAME])
  REPLACE_GETDTABLESIZE=0; AC_SUBST([REPLACE_GETDTABLESIZE])
  REPLACE_GETLOGIN_R=0;   AC_SUBST([REPLACE_GETLOGIN_R])
  REPLACE_GETGROUPS=0;    AC_SUBST([REPLACE_GETGROUPS])
  REPLACE_GETPAGESIZE=0;  AC_SUBST([REPLACE_GETPAGESIZE])
  REPLACE_ISATTY=0;       AC_SUBST([REPLACE_ISATTY])
  REPLACE_LCHOWN=0;       AC_SUBST([REPLACE_LCHOWN])
  REPLACE_LINK=0;         AC_SUBST([REPLACE_LINK])
  REPLACE_LINKAT=0;       AC_SUBST([REPLACE_LINKAT])
  REPLACE_LSEEK=0;        AC_SUBST([REPLACE_LSEEK])
  REPLACE_PREAD=0;        AC_SUBST([REPLACE_PREAD])
  REPLACE_PWRITE=0;       AC_SUBST([REPLACE_PWRITE])
  REPLACE_READ=0;         AC_SUBST([REPLACE_READ])
  REPLACE_READLINK=0;     AC_SUBST([REPLACE_READLINK])
  REPLACE_RMDIR=0;        AC_SUBST([REPLACE_RMDIR])
  REPLACE_SLEEP=0;        AC_SUBST([REPLACE_SLEEP])
  REPLACE_SYMLINK=0;      AC_SUBST([REPLACE_SYMLINK])
  REPLACE_TTYNAME_R=0;    AC_SUBST([REPLACE_TTYNAME_R])
  REPLACE_UNLINK=0;       AC_SUBST([REPLACE_UNLINK])
  REPLACE_UNLINKAT=0;     AC_SUBST([REPLACE_UNLINKAT])
  REPLACE_USLEEP=0;       AC_SUBST([REPLACE_USLEEP])
  REPLACE_WRITE=0;        AC_SUBST([REPLACE_WRITE])
  UNISTD_H_HAVE_WINSOCK2_H=0; AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H])
  UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS=0;
                           AC_SUBST([UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS])
])
m4trace:m4/utimbuf.m4:16: -1- AC_DEFUN([gl_CHECK_TYPE_STRUCT_UTIMBUF], [
  AC_CHECK_HEADERS_ONCE([sys/time.h utime.h])
  AC_CACHE_CHECK([for struct utimbuf], [gl_cv_sys_struct_utimbuf],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#if HAVE_SYS_TIME_H
             #include <sys/time.h>
            #endif
            #include <time.h>
            #ifdef HAVE_UTIME_H
             #include <utime.h>
            #endif
          ]],
          [[static struct utimbuf x; x.actime = x.modtime;]])],
       [gl_cv_sys_struct_utimbuf=yes],
       [gl_cv_sys_struct_utimbuf=no])])

  if test $gl_cv_sys_struct_utimbuf = yes; then
    AC_DEFINE([HAVE_STRUCT_UTIMBUF], [1],
      [Define if struct utimbuf is declared -- usually in <utime.h>.
       Some systems have utime.h but don't declare the struct anywhere. ])
  fi
])
m4trace:m4/utimens.m4:8: -1- AC_DEFUN([gl_UTIMENS], [
  dnl Prerequisites of lib/utimens.c.
  AC_REQUIRE([gl_FUNC_UTIMES])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_TIMESPEC])
  AC_REQUIRE([gl_CHECK_TYPE_STRUCT_UTIMBUF])
  AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
  AC_CHECK_FUNCS_ONCE([futimes futimesat futimens utimensat lutimes])

  if test $ac_cv_func_futimens = no && test $ac_cv_func_futimesat = yes; then
    dnl FreeBSD 8.0-rc2 mishandles futimesat(fd,NULL,time).  It is not
    dnl standardized, but Solaris implemented it first and uses it as
    dnl its only means to set fd time.
    AC_CACHE_CHECK([whether futimesat handles NULL file],
      [gl_cv_func_futimesat_works],
      [touch conftest.file
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
#include <stddef.h>
#include <sys/times.h>
#include <fcntl.h>
]], [[    int fd = open ("conftest.file", O_RDWR);
          if (fd < 0) return 1;
          if (futimesat (fd, NULL, NULL)) return 2;
        ]])],
        [gl_cv_func_futimesat_works=yes],
        [gl_cv_func_futimesat_works=no],
        [case "$host_os" in
                   # Guess yes on glibc systems.
           *-gnu*) gl_cv_func_futimesat_works="guessing yes" ;;
                   # If we don't know, assume the worst.
           *)      gl_cv_func_futimesat_works="guessing no" ;;
         esac
        ])
      rm -f conftest.file])
    case "$gl_cv_func_futimesat_works" in
      *yes) ;;
      *)
        AC_DEFINE([FUTIMESAT_NULL_BUG], [1],
          [Define to 1 if futimesat mishandles a NULL file name.])
        ;;
    esac
  fi
])
m4trace:m4/utimes.m4:21: -1- AC_DEFUN([gl_FUNC_UTIMES], [
  AC_CACHE_CHECK([whether the utimes function works],
                 [gl_cv_func_working_utimes],
  [
  AC_RUN_IFELSE([AC_LANG_SOURCE([[
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <sys/time.h>
#include <time.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <utime.h>

static int
inorder (time_t a, time_t b, time_t c)
{
  return a <= b && b <= c;
}

int
main ()
{
  int result = 0;
  char const *file = "conftest.utimes";
  static struct timeval timeval[2] = {{9, 10}, {999999, 999999}};

  /* Test whether utimes() essentially works.  */
  {
    struct stat sbuf;
    FILE *f = fopen (file, "w");
    if (f == NULL)
      result |= 1;
    else if (fclose (f) != 0)
      result |= 1;
    else if (utimes (file, timeval) != 0)
      result |= 2;
    else if (lstat (file, &sbuf) != 0)
      result |= 1;
    else if (!(sbuf.st_atime == timeval[0].tv_sec
               && sbuf.st_mtime == timeval[1].tv_sec))
      result |= 4;
    if (unlink (file) != 0)
      result |= 1;
  }

  /* Test whether utimes() with a NULL argument sets the file's timestamp
     to the current time.  Use 'fstat' as well as 'time' to
     determine the "current" time, to accommodate NFS file systems
     if there is a time skew between the host and the NFS server.  */
  {
    int fd = open (file, O_WRONLY|O_CREAT, 0644);
    if (fd < 0)
      result |= 1;
    else
      {
        time_t t0, t2;
        struct stat st0, st1, st2;
        if (time (&t0) == (time_t) -1)
          result |= 1;
        else if (fstat (fd, &st0) != 0)
          result |= 1;
        else if (utimes (file, timeval) != 0)
          result |= 2;
        else if (utimes (file, NULL) != 0)
          result |= 8;
        else if (fstat (fd, &st1) != 0)
          result |= 1;
        else if (write (fd, "\n", 1) != 1)
          result |= 1;
        else if (fstat (fd, &st2) != 0)
          result |= 1;
        else if (time (&t2) == (time_t) -1)
          result |= 1;
        else
          {
            int m_ok_POSIX = inorder (t0, st1.st_mtime, t2);
            int m_ok_NFS = inorder (st0.st_mtime, st1.st_mtime, st2.st_mtime);
            if (! (st1.st_atime == st1.st_mtime))
              result |= 16;
            if (! (m_ok_POSIX || m_ok_NFS))
              result |= 32;
          }
        if (close (fd) != 0)
          result |= 1;
      }
    if (unlink (file) != 0)
      result |= 1;
  }

  /* Test whether utimes() with a NULL argument works on read-only files.  */
  {
    int fd = open (file, O_WRONLY|O_CREAT, 0444);
    if (fd < 0)
      result |= 1;
    else if (close (fd) != 0)
      result |= 1;
    else if (utimes (file, NULL) != 0)
      result |= 64;
    if (unlink (file) != 0)
      result |= 1;
  }

  return result;
}
  ]])],
       [gl_cv_func_working_utimes=yes],
       [gl_cv_func_working_utimes=no],
       [gl_cv_func_working_utimes=no])])

  if test $gl_cv_func_working_utimes = yes; then
    AC_DEFINE([HAVE_WORKING_UTIMES], [1], [Define if utimes works properly. ])
  fi
])
m4trace:m4/warnings.m4:25: -1- AC_DEFUN([gl_COMPILER_OPTION_IF], [AS_VAR_PUSHDEF([gl_Warn], [gl_cv_warn_[]_AC_LANG_ABBREV[]_$1])dnl
AS_VAR_PUSHDEF([gl_Flags], [_AC_LANG_PREFIX[]FLAGS])dnl
AS_LITERAL_IF([$1],
  [m4_pushdef([gl_Positive], m4_bpatsubst([$1], [^-Wno-], [-W]))],
  [gl_positive="$1"
case $gl_positive in
  -Wno-*) gl_positive=-W`expr "X$gl_positive" : 'X-Wno-\(.*\)'` ;;
esac
m4_pushdef([gl_Positive], [$gl_positive])])dnl
AC_CACHE_CHECK([whether _AC_LANG compiler handles $1], m4_defn([gl_Warn]), [
  gl_save_compiler_FLAGS="$gl_Flags"
  gl_AS_VAR_APPEND(m4_defn([gl_Flags]),
    [" $gl_unknown_warnings_are_errors ]m4_defn([gl_Positive])["])
  AC_LINK_IFELSE([m4_default([$4], [AC_LANG_PROGRAM([])])],
                 [AS_VAR_SET(gl_Warn, [yes])],
                 [AS_VAR_SET(gl_Warn, [no])])
  gl_Flags="$gl_save_compiler_FLAGS"
])
AS_VAR_IF(gl_Warn, [yes], [$2], [$3])
m4_popdef([gl_Positive])dnl
AS_VAR_POPDEF([gl_Flags])dnl
AS_VAR_POPDEF([gl_Warn])dnl
])
m4trace:m4/warnings.m4:54: -1- AC_DEFUN([gl_UNKNOWN_WARNINGS_ARE_ERRORS], [gl_COMPILER_OPTION_IF([-Werror -Wunknown-warning-option],
   [gl_unknown_warnings_are_errors='-Wunknown-warning-option -Werror'],
   [gl_unknown_warnings_are_errors=])])
m4trace:m4/warnings.m4:66: -1- AC_DEFUN([gl_WARN_ADD], [AC_REQUIRE([gl_UNKNOWN_WARNINGS_ARE_ERRORS])
gl_COMPILER_OPTION_IF([$1],
  [gl_AS_VAR_APPEND(m4_if([$2], [], [[WARN_CFLAGS]], [[$2]]), [" $1"])],
  [],
  [$3])
m4_ifval([$2],
         [AS_LITERAL_IF([$2], [AC_SUBST([$2])])],
         [AC_SUBST([WARN_CFLAGS])])dnl
])
m4trace:m4/wchar_t.m4:11: -1- AC_DEFUN([gt_TYPE_WCHAR_T], [
  AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
    [AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM(
          [[#include <stddef.h>
            wchar_t foo = (wchar_t)'\0';]],
          [[]])],
       [gt_cv_c_wchar_t=yes],
       [gt_cv_c_wchar_t=no])])
  if test $gt_cv_c_wchar_t = yes; then
    AC_DEFINE([HAVE_WCHAR_T], [1], [Define if you have the 'wchar_t' type.])
  fi
])
m4trace:configure.ac:25: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:25: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:25: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:25: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:25: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:25: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:87: -1- m4_pattern_allow([^XCRUN$])
m4trace:configure.ac:92: -1- m4_pattern_allow([^MAKE_PROG$])
m4trace:configure.ac:102: -1- AM_INIT_AUTOMAKE([1.11])
m4trace:configure.ac:102: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:102: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:102: -1- AM_AUTOMAKE_VERSION([1.11.1])
m4trace:configure.ac:102: -1- _AM_AUTOCONF_VERSION([2.68])
m4trace:configure.ac:102: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:102: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:102: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:102: -1- _AM_SET_OPTIONS([1.11])
m4trace:configure.ac:102: -1- _AM_SET_OPTION([1.11])
m4trace:configure.ac:102: -2- _AM_MANGLE_OPTION([1.11])
m4trace:configure.ac:102: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:102: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])
m4trace:configure.ac:102: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:102: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:102: -1- AM_SANITY_CHECK
m4trace:configure.ac:102: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:102: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:102: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:102: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:102: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:102: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:102: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:102: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:102: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:102: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:102: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:102: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:102: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:102: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:102: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:102: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:102: -1- AM_PROG_MKDIR_P
m4trace:configure.ac:102: -1- AC_PROG_MKDIR_P
m4trace:configure.ac:102: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:102: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:102: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:102: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:102: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:102: -1- _AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])], [_AM_PROG_TAR([v7])])
m4trace:configure.ac:102: -2- _AM_MANGLE_OPTION([tar-pax])
m4trace:configure.ac:102: -1- _AM_PROG_TAR([v7])
m4trace:configure.ac:102: -1- AM_MISSING_PROG([AMTAR], [tar])
m4trace:configure.ac:102: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:102: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:102: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
m4trace:configure.ac:102: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:102: -1- _AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])
m4trace:configure.ac:102: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:139: -1- AC_DEFUN([OPTION_DEFAULT_OFF], [dnl
  AC_ARG_WITH([$1],[AS_HELP_STRING([--with-$1],[$2])],[],[dnl
    m4_bpatsubst([with_$1], [[^0-9a-z]], [_])=no])dnl
])
m4trace:configure.ac:152: -1- AC_DEFUN([OPTION_DEFAULT_ON], [dnl
  AC_ARG_WITH([$1],[AS_HELP_STRING([--without-$1],[$2])],[],[dnl
   m4_bpatsubst([with_$1], [[^0-9a-z]], [_])=$with_features])dnl
])
m4trace:configure.ac:157: -1- OPTION_DEFAULT_ON([pop], [don't support POP mail retrieval with movemail])
m4trace:configure.ac:159: -1- m4_pattern_allow([^MAIL_USE_POP$])
m4trace:configure.ac:163: -1- OPTION_DEFAULT_OFF([kerberos], [support Kerberos-authenticated POP])
m4trace:configure.ac:165: -1- m4_pattern_allow([^KERBEROS$])
m4trace:configure.ac:170: -1- OPTION_DEFAULT_OFF([kerberos5], [support Kerberos version 5 authenticated POP])
m4trace:configure.ac:174: -1- m4_pattern_allow([^KERBEROS$])
m4trace:configure.ac:176: -1- m4_pattern_allow([^KERBEROS5$])
m4trace:configure.ac:179: -1- OPTION_DEFAULT_OFF([hesiod], [support Hesiod to get the POP server host])
m4trace:configure.ac:183: -1- m4_pattern_allow([^HESIOD$])
m4trace:configure.ac:186: -1- OPTION_DEFAULT_OFF([mmdf], [support MMDF mailboxes])
m4trace:configure.ac:188: -1- m4_pattern_allow([^MAIL_USE_MMDF$])
m4trace:configure.ac:191: -1- OPTION_DEFAULT_OFF([mail-unlink], [unlink, rather than empty, mail spool after reading])
m4trace:configure.ac:193: -1- m4_pattern_allow([^MAIL_UNLINK_SPOOL$])
m4trace:configure.ac:198: -2- m4_pattern_allow([^MAILHOST$])
m4trace:configure.ac:238: -1- OPTION_DEFAULT_OFF([wide-int], [prefer wide Emacs integers (typically 62-bit)])
m4trace:configure.ac:240: -1- m4_pattern_allow([^WIDE_EMACS_INT$])
m4trace:configure.ac:245: -1- OPTION_DEFAULT_ON([xpm], [don't compile with XPM image support])
m4trace:configure.ac:246: -1- OPTION_DEFAULT_ON([jpeg], [don't compile with JPEG image support])
m4trace:configure.ac:247: -1- OPTION_DEFAULT_ON([tiff], [don't compile with TIFF image support])
m4trace:configure.ac:248: -1- OPTION_DEFAULT_ON([gif], [don't compile with GIF image support])
m4trace:configure.ac:249: -1- OPTION_DEFAULT_ON([png], [don't compile with PNG image support])
m4trace:configure.ac:250: -1- OPTION_DEFAULT_ON([rsvg], [don't compile with SVG image support])
m4trace:configure.ac:251: -1- OPTION_DEFAULT_ON([xml2], [don't compile with XML parsing support])
m4trace:configure.ac:252: -1- OPTION_DEFAULT_ON([imagemagick], [don't compile with ImageMagick image support])
m4trace:configure.ac:254: -1- OPTION_DEFAULT_ON([xft], [don't use XFT for anti aliased fonts])
m4trace:configure.ac:255: -1- OPTION_DEFAULT_ON([libotf], [don't use libotf for OpenType font support])
m4trace:configure.ac:256: -1- OPTION_DEFAULT_ON([m17n-flt], [don't use m17n-flt for text shaping])
m4trace:configure.ac:258: -1- OPTION_DEFAULT_ON([toolkit-scroll-bars], [don't use Motif or Xaw3d scroll bars])
m4trace:configure.ac:259: -1- OPTION_DEFAULT_ON([xaw3d], [don't use Xaw3d])
m4trace:configure.ac:260: -1- OPTION_DEFAULT_ON([xim], [don't use X11 XIM])
m4trace:configure.ac:261: -1- OPTION_DEFAULT_OFF([ns], [use NeXTstep (Cocoa or GNUstep) windowing system])
m4trace:configure.ac:262: -1- OPTION_DEFAULT_OFF([w32], [use native MS Windows GUI in a Cygwin build])
m4trace:configure.ac:264: -1- OPTION_DEFAULT_ON([gpm], [don't use -lgpm for mouse support on a GNU/Linux console])
m4trace:configure.ac:265: -1- OPTION_DEFAULT_ON([dbus], [don't compile with D-Bus support])
m4trace:configure.ac:266: -1- OPTION_DEFAULT_ON([gconf], [don't compile with GConf support])
m4trace:configure.ac:267: -1- OPTION_DEFAULT_ON([gsettings], [don't compile with GSettings support])
m4trace:configure.ac:268: -1- OPTION_DEFAULT_ON([selinux], [don't compile with SELinux support])
m4trace:configure.ac:269: -1- OPTION_DEFAULT_ON([gnutls], [don't use -lgnutls for SSL/TLS support])
m4trace:configure.ac:270: -1- OPTION_DEFAULT_ON([zlib], [don't compile with zlib decompression support])
m4trace:configure.ac:293: -1- OPTION_DEFAULT_ON([makeinfo], [don't require makeinfo for building manuals])
m4trace:configure.ac:296: -1- m4_pattern_allow([^cache_file$])
m4trace:configure.ac:300: -1- OPTION_DEFAULT_ON([compress-install], [don't compress some files (.el, .info, etc.) when installing.  Equivalent to:
make GZIP_PROG= install])
m4trace:configure.ac:384: -1- m4_pattern_allow([^ENABLE_CHECKING$])
m4trace:configure.ac:388: -1- m4_pattern_allow([^GC_CHECK_STRING_BYTES$])
m4trace:configure.ac:394: -1- m4_pattern_allow([^GC_CHECK_STRING_OVERRUN$])
m4trace:configure.ac:398: -1- m4_pattern_allow([^GC_CHECK_STRING_FREE_LIST$])
m4trace:configure.ac:402: -1- m4_pattern_allow([^XMALLOC_OVERRUN_CHECK$])
m4trace:configure.ac:406: -1- m4_pattern_allow([^GC_CHECK_CONS_LIST$])
m4trace:configure.ac:410: -1- m4_pattern_allow([^GLYPH_DEBUG$])
m4trace:configure.ac:419: -2- m4_pattern_allow([^CHECK_LISP_OBJECT_TYPE$])
m4trace:configure.ac:439: -1- m4_pattern_allow([^PROFILING_CFLAGS$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:455: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:670: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:670: -1- AM_SET_DEPDIR
m4trace:configure.ac:670: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:670: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:670: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:670: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:670: -1- AM_DEP_TRACK
m4trace:configure.ac:670: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:670: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:670: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:670: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:670: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:670: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:670: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:670: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:670: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:670: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:670: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:670: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:672: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:676: -1- AM_PROG_CC_C_O
m4trace:configure.ac:676: -1- m4_pattern_allow([^NO_MINUS_C_MINUS_O$])
m4trace:configure.ac:687: -1- AM_CONDITIONAL([BUILDING_FOR_WINDOWSNT], [test "x$opsys" = "xmingw32"])
m4trace:configure.ac:687: -1- m4_pattern_allow([^BUILDING_FOR_WINDOWSNT_TRUE$])
m4trace:configure.ac:687: -1- m4_pattern_allow([^BUILDING_FOR_WINDOWSNT_FALSE$])
m4trace:configure.ac:687: -1- _AM_SUBST_NOTMAKE([BUILDING_FOR_WINDOWSNT_TRUE])
m4trace:configure.ac:687: -1- _AM_SUBST_NOTMAKE([BUILDING_FOR_WINDOWSNT_FALSE])
m4trace:configure.ac:690: -1- AC_DEFUN([gl_CRYPTO_CHECK])
m4trace:configure.ac:693: -1- AC_DEFUN([gl_FCNTL_O_FLAGS])
m4trace:configure.ac:695: -1- AC_DEFUN([gl_THREADLIB])
m4trace:configure.ac:699: -1- gl_EARLY
m4trace:configure.ac:699: -1- m4_pattern_forbid([^gl_[A-Z]])
m4trace:configure.ac:699: -1- m4_pattern_allow([^gl_ES$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:699: -1- gl_PROG_AR_RANLIB
m4trace:configure.ac:699: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^ARFLAGS$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:699: -1- gl_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:699: -1- _m4_warn([obsolete], [The macro `AC_GNU_SOURCE' is obsolete.
You should run autoupdate.], [/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/specific.m4:310: AC_GNU_SOURCE is expanded from...
m4/gnulib-comp.m4:34: gl_EARLY is expanded from...
configure.ac:699: the top level])
m4trace:configure.ac:699: -1- AC_USE_SYSTEM_EXTENSIONS
m4trace:configure.ac:699: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_POSIX_SOURCE$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_POSIX_1_SOURCE$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_MINIX$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_NETBSD_SOURCE$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^__EXTENSIONS__$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_ALL_SOURCE$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_DARWIN_C_SOURCE$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_GNU_SOURCE$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_POSIX_PTHREAD_SEMANTICS$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_TANDEM_SOURCE$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_XOPEN_SOURCE$])
m4trace:configure.ac:699: -1- AC_SYS_LARGEFILE
m4trace:configure.ac:699: -1- m4_pattern_allow([^_FILE_OFFSET_BITS$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_LARGE_FILES$])
m4trace:configure.ac:699: -1- m4_pattern_allow([^_DARWIN_USE_64_BIT_INODE$])
m4trace:configure.ac:699: -1- gl_PROG_CC_C99
m4trace:configure.ac:791: -1- AC_DEFUN([gl_GCC_VERSION_IFELSE], [AC_PREPROC_IFELSE(
    [AC_LANG_PROGRAM(
      [[
#if ($1) < __GNUC__ || (($1) == __GNUC__ && ($2) <= __GNUC_MINOR__)
/* ok */
#else
# error "your version of gcc is older than $1.$2"
#endif
      ]]),
    ], [$3], [$4])
  
])
m4trace:configure.ac:823: -1- gl_WARN_ADD([-Wno-switch])
m4trace:configure.ac:823: -1- gl_UNKNOWN_WARNINGS_ARE_ERRORS
m4trace:configure.ac:823: -1- gl_COMPILER_OPTION_IF([-Werror -Wunknown-warning-option], [gl_unknown_warnings_are_errors='-Wunknown-warning-option -Werror'], [gl_unknown_warnings_are_errors=])
m4trace:configure.ac:823: -1- gl_COMPILER_OPTION_IF([-Wno-switch], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-switch"])], [], [])
m4trace:configure.ac:823: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:824: -1- gl_WARN_ADD([-Wno-tautological-constant-out-of-range-compare])
m4trace:configure.ac:824: -1- gl_COMPILER_OPTION_IF([-Wno-tautological-constant-out-of-range-compare], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-tautological-constant-out-of-range-compare"])], [], [])
m4trace:configure.ac:824: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:825: -1- gl_WARN_ADD([-Wno-pointer-sign])
m4trace:configure.ac:825: -1- gl_COMPILER_OPTION_IF([-Wno-pointer-sign], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-pointer-sign"])], [], [])
m4trace:configure.ac:825: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:839: -1- gl_WARN_ADD([-Werror], [WERROR_CFLAGS])
m4trace:configure.ac:839: -1- gl_COMPILER_OPTION_IF([-Werror], [gl_AS_VAR_APPEND(m4_if([WERROR_CFLAGS], [], [[WARN_CFLAGS]], [[WERROR_CFLAGS]]), [" -Werror"])], [], [])
m4trace:configure.ac:839: -1- m4_pattern_allow([^WERROR_CFLAGS$])
m4trace:configure.ac:842: -1- m4_pattern_allow([^WERROR_CFLAGS$])
m4trace:configure.ac:880: -1- gl_MANYWARN_ALL_GCC([ws])
m4trace:configure.ac:881: -1- gl_MANYWARN_COMPLEMENT([ws], [$ws], [$nw])
m4trace:configure.ac:883: -1- gl_WARN_ADD([$w])
m4trace:configure.ac:883: -1- gl_COMPILER_OPTION_IF([$w], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" $w"])], [], [])
m4trace:configure.ac:883: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:885: -1- gl_WARN_ADD([-Wno-missing-field-initializers])
m4trace:configure.ac:885: -1- gl_COMPILER_OPTION_IF([-Wno-missing-field-initializers], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-missing-field-initializers"])], [], [])
m4trace:configure.ac:885: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:886: -1- gl_WARN_ADD([-Wno-sign-compare])
m4trace:configure.ac:886: -1- gl_COMPILER_OPTION_IF([-Wno-sign-compare], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-sign-compare"])], [], [])
m4trace:configure.ac:886: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:887: -1- gl_WARN_ADD([-Wno-type-limits])
m4trace:configure.ac:887: -1- gl_COMPILER_OPTION_IF([-Wno-type-limits], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-type-limits"])], [], [])
m4trace:configure.ac:887: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:888: -1- gl_WARN_ADD([-Wno-switch])
m4trace:configure.ac:888: -1- gl_COMPILER_OPTION_IF([-Wno-switch], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-switch"])], [], [])
m4trace:configure.ac:888: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:889: -1- gl_WARN_ADD([-Wno-unused-parameter])
m4trace:configure.ac:889: -1- gl_COMPILER_OPTION_IF([-Wno-unused-parameter], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-unused-parameter"])], [], [])
m4trace:configure.ac:889: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:890: -1- gl_WARN_ADD([-Wno-format-nonliteral])
m4trace:configure.ac:890: -1- gl_COMPILER_OPTION_IF([-Wno-format-nonliteral], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-format-nonliteral"])], [], [])
m4trace:configure.ac:890: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:894: -1- gl_WARN_ADD([-Wno-logical-op])
m4trace:configure.ac:894: -1- gl_COMPILER_OPTION_IF([-Wno-logical-op], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-logical-op"])], [], [])
m4trace:configure.ac:894: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:898: -1- gl_WARN_ADD([-Wno-format-extra-args])
m4trace:configure.ac:898: -1- gl_COMPILER_OPTION_IF([-Wno-format-extra-args], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-format-extra-args"])], [], [])
m4trace:configure.ac:898: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:899: -1- gl_WARN_ADD([-Wno-tautological-constant-out-of-range-compare])
m4trace:configure.ac:899: -1- gl_COMPILER_OPTION_IF([-Wno-tautological-constant-out-of-range-compare], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-tautological-constant-out-of-range-compare"])], [], [])
m4trace:configure.ac:899: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:900: -1- gl_WARN_ADD([-Wno-unused-command-line-argument])
m4trace:configure.ac:900: -1- gl_COMPILER_OPTION_IF([-Wno-unused-command-line-argument], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-unused-command-line-argument"])], [], [])
m4trace:configure.ac:900: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:901: -1- gl_WARN_ADD([-Wno-unused-value])
m4trace:configure.ac:901: -1- gl_COMPILER_OPTION_IF([-Wno-unused-value], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-unused-value"])], [], [])
m4trace:configure.ac:901: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:904: -1- m4_pattern_allow([^lint$])
m4trace:configure.ac:912: -1- m4_pattern_allow([^GNULIB_PORTCHECK$])
m4trace:configure.ac:919: -1- gl_MANYWARN_COMPLEMENT([GNULIB_WARN_CFLAGS], [$WARN_CFLAGS], [$nw])
m4trace:configure.ac:920: -1- m4_pattern_allow([^GNULIB_WARN_CFLAGS$])
m4trace:configure.ac:962: -1- m4_pattern_allow([^LN_S_FILEONLY$])
m4trace:configure.ac:975: -1- m4_pattern_allow([^INSTALL_INFO$])
m4trace:configure.ac:978: -1- m4_pattern_allow([^GZIP_PROG$])
m4trace:configure.ac:984: -1- m4_pattern_allow([^PAXCTL$])
m4trace:configure.ac:1008: -1- m4_pattern_allow([^SETFATTR$])
m4trace:configure.ac:1013: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:1047: -1- m4_pattern_allow([^HAVE_MAKEINFO$])
m4trace:configure.ac:1052: -1- m4_pattern_allow([^INFO_EXT$])
m4trace:configure.ac:1053: -1- m4_pattern_allow([^INFO_OPTS$])
m4trace:configure.ac:1060: -1- m4_pattern_allow([^DOCMISC_W32$])
m4trace:configure.ac:1126: -1- m4_pattern_allow([^CANNOT_DUMP$])
m4trace:configure.ac:1131: -1- m4_pattern_allow([^CANNOT_DUMP$])
m4trace:configure.ac:1196: -1- m4_pattern_allow([^LD_SWITCH_SYSTEM$])
m4trace:configure.ac:1239: -1- m4_pattern_allow([^C_SWITCH_MACHINE$])
m4trace:configure.ac:1241: -1- m4_pattern_allow([^UNEXEC_OBJ$])
m4trace:configure.ac:1257: -1- m4_pattern_allow([^C_SWITCH_SYSTEM$])
m4trace:configure.ac:1275: -1- m4_pattern_allow([^LIBS_SYSTEM$])
m4trace:configure.ac:1286: -1- AC_DEFUN([AC_TYPE_SIZE_T])
m4trace:configure.ac:1288: -1- AC_DEFUN([AC_TYPE_UID_T])
m4trace:configure.ac:1328: -1- m4_pattern_allow([^LIB_MATH$])
m4trace:configure.ac:1329: -1- m4_pattern_allow([^SYSTEM_TYPE$])
m4trace:configure.ac:1336: -1- m4_pattern_allow([^PKG_CONFIG$])
m4trace:configure.ac:1342: -1- AC_DEFUN([PKG_CHECK_MODULES], [
  succeeded=no

  if test "$PKG_CONFIG" = "no" ; then
     ifelse([$4], , [AC_MSG_ERROR([
      *** The pkg-config script could not be found. Make sure it is in your path, or give the full name of pkg-config with the PKG_CONFIG environment variable or --with-pkg-config-prog.  Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.])], [$4])
  else
     PKG_CONFIG_MIN_VERSION=0.9.0
     if "$PKG_CONFIG" --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
        AC_MSG_CHECKING(for $2)

        if "$PKG_CONFIG" --exists "$2" 2>&AS_MESSAGE_LOG_FD &&
	   $1_CFLAGS=`"$PKG_CONFIG" --cflags "$2" 2>&AS_MESSAGE_LOG_FD` &&
	   $1_LIBS=`"$PKG_CONFIG" --libs "$2" 2>&AS_MESSAGE_LOG_FD`; then
	    edit_cflags="
	      s,///*,/,g
	      s/^/ /
	      s/ -I/ $isystem/g
	      s/^ //
	    "
	    $1_CFLAGS=`AS_ECHO(["$$1_CFLAGS"]) | sed -e "$edit_cflags"`
	    $1_LIBS=`AS_ECHO(["$$1_LIBS"]) | sed -e 's,///*,/,g'`
            AC_MSG_RESULT([yes CFLAGS='$$1_CFLAGS' LIBS='$$1_LIBS'])
            succeeded=yes
        else
            AC_MSG_RESULT(no)
            $1_CFLAGS=""
            $1_LIBS=""
            ## If we have a custom action on failure, don't print errors, but
	    ## do set a variable so people can do so.  Do it in a subshell
	    ## to capture any diagnostics in invoking pkg-config.
	    $1_PKG_ERRORS=`("$PKG_CONFIG" --print-errors "$2") 2>&1`
	    ifelse([$4], ,echo "$$1_PKG_ERRORS",)
        fi

        AC_SUBST($1_CFLAGS)
        AC_SUBST($1_LIBS)
     else
        echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
        echo "*** See http://www.freedesktop.org/software/pkgconfig"
     fi
  fi

  if test $succeeded = yes; then
     ifelse([$3], , :, [$3])
  else
     ifelse([$4], , [AC_MSG_ERROR([Library requirements ($2) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.])], [$4])
  fi
])
m4trace:configure.ac:1413: -1- m4_pattern_allow([^LIBSOUND$])
m4trace:configure.ac:1418: -1- PKG_CHECK_MODULES([ALSA], [$ALSA_MODULES], [HAVE_ALSA=yes], [HAVE_ALSA=no])
m4trace:configure.ac:1418: -1- m4_pattern_allow([^ALSA_CFLAGS$])
m4trace:configure.ac:1418: -1- m4_pattern_allow([^ALSA_LIBS$])
m4trace:configure.ac:1442: -1- m4_pattern_allow([^HAVE_ALSA$])
m4trace:configure.ac:1458: -1- m4_pattern_allow([^HAVE_SOUND$])
m4trace:configure.ac:1464: -1- m4_pattern_allow([^CFLAGS_SOUND$])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_sys_systeminfo_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/systeminfo.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_coff_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" coff.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_pty_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" pty.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_sys_resource_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/resource.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_sys_utsname_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/utsname.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_pwd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" pwd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_utmp_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utmp.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1468: -1- AC_DEFUN([_AC_Header_util_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" util.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1481: -1- m4_pattern_allow([^HAVE_PERSONALITY_LINUX32$])
m4trace:configure.ac:1487: -1- m4_pattern_allow([^HAVE_TERM_H$])
m4trace:configure.ac:1488: -1- m4_pattern_allow([^TIME_WITH_SYS_TIME$])
m4trace:configure.ac:1489: -1- m4_pattern_allow([^HAVE_DECL_SYS_SIGLIST$])
m4trace:configure.ac:1493: -1- m4_pattern_allow([^HAVE_DECL___SYS_SIGLIST$])
m4trace:configure.ac:1496: -1- m4_pattern_allow([^HAVE_SYS_WAIT_H$])
m4trace:configure.ac:1498: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:1499: -1- m4_pattern_allow([^HAVE_NET_IF_H$])
m4trace:configure.ac:1503: -1- m4_pattern_allow([^HAVE_IFADDRS_H$])
m4trace:configure.ac:1507: -1- m4_pattern_allow([^HAVE_NET_IF_DL_H$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^HAVE_STRUCT_IFREQ_IFR_FLAGS$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^HAVE_STRUCT_IFREQ_IFR_HWADDR$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^HAVE_STRUCT_IFREQ_IFR_NETMASK$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^HAVE_STRUCT_IFREQ_IFR_BROADADDR$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^HAVE_STRUCT_IFREQ_IFR_ADDR$])
m4trace:configure.ac:1513: -1- m4_pattern_allow([^HAVE_STRUCT_IFREQ_IFR_ADDR_SA_LEN$])
m4trace:configure.ac:1563: -1- m4_pattern_allow([^MKDEPDIR$])
m4trace:configure.ac:1564: -1- m4_pattern_allow([^DEPFLAGS$])
m4trace:configure.ac:1565: -1- m4_pattern_allow([^deps_frag$])
m4trace:configure.ac:1569: -1- m4_pattern_allow([^lisp_frag$])
m4trace:configure.ac:1573: -1- m4_pattern_allow([^HAVE_LONG_FILE_NAMES$])
m4trace:configure.ac:1583: -1- m4_pattern_allow([^XMKMF$])
m4trace:configure.ac:1615: -1- m4_pattern_allow([^LD_SWITCH_X_SITE_RPATH$])
m4trace:configure.ac:1688: -1- m4_pattern_allow([^_NATIVE_OBJC_EXCEPTIONS$])
m4trace:configure.ac:1744: -1- m4_pattern_allow([^NS_HAVE_NSINTEGER$])
m4trace:configure.ac:1748: -1- m4_pattern_allow([^LIBS_GNUSTEP$])
m4trace:configure.ac:1782: -1- m4_pattern_allow([^INSTALL_ARCH_INDEP_EXTRA$])
m4trace:configure.ac:1783: -1- m4_pattern_allow([^ns_self_contained$])
m4trace:configure.ac:1784: -1- m4_pattern_allow([^NS_OBJ$])
m4trace:configure.ac:1785: -1- m4_pattern_allow([^NS_OBJC_OBJ$])
m4trace:configure.ac:1836: -1- m4_pattern_allow([^HAVE_NTGUI$])
m4trace:configure.ac:1837: -1- m4_pattern_allow([^WINDRES$])
m4trace:configure.ac:1869: -1- m4_pattern_allow([^W32_OBJ$])
m4trace:configure.ac:1870: -1- m4_pattern_allow([^W32_LIBS$])
m4trace:configure.ac:1871: -1- m4_pattern_allow([^EMACSRES$])
m4trace:configure.ac:1872: -1- m4_pattern_allow([^EMACS_MANIFEST$])
m4trace:configure.ac:1873: -1- m4_pattern_allow([^UPDATE_MANIFEST$])
m4trace:configure.ac:1874: -1- m4_pattern_allow([^CLIENTRES$])
m4trace:configure.ac:1875: -1- m4_pattern_allow([^CLIENTW$])
m4trace:configure.ac:1876: -1- m4_pattern_allow([^W32_RES_LINK$])
m4trace:configure.ac:1877: -1- m4_pattern_allow([^FIRSTFILE_OBJ$])
m4trace:configure.ac:1878: -1- m4_pattern_allow([^NTDIR$])
m4trace:configure.ac:1879: -1- m4_pattern_allow([^CM_OBJ$])
m4trace:configure.ac:1880: -1- m4_pattern_allow([^LIBS_ECLIENT$])
m4trace:configure.ac:1881: -1- m4_pattern_allow([^LIB_WSOCK32$])
m4trace:configure.ac:1882: -1- m4_pattern_allow([^NTLIB$])
m4trace:configure.ac:1883: -1- m4_pattern_allow([^XARGS_LIMIT$])
m4trace:configure.ac:1898: -1- gl_MANYWARN_COMPLEMENT([WARN_CFLAGS], [$WARN_CFLAGS], [$nw])
m4trace:configure.ac:1900: -1- gl_WARN_ADD([-Wno-unused-variable])
m4trace:configure.ac:1900: -1- gl_COMPILER_OPTION_IF([-Wno-unused-variable], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-unused-variable"])], [], [])
m4trace:configure.ac:1900: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:1901: -1- gl_WARN_ADD([-Wno-unused-but-set-variable])
m4trace:configure.ac:1901: -1- gl_COMPILER_OPTION_IF([-Wno-unused-but-set-variable], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-unused-but-set-variable"])], [], [])
m4trace:configure.ac:1901: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:1902: -1- gl_WARN_ADD([-Wno-unused-but-set-parameter])
m4trace:configure.ac:1902: -1- gl_COMPILER_OPTION_IF([-Wno-unused-but-set-parameter], [gl_AS_VAR_APPEND(m4_if([], [], [[WARN_CFLAGS]], [[]]), [" -Wno-unused-but-set-parameter"])], [], [])
m4trace:configure.ac:1902: -1- m4_pattern_allow([^WARN_CFLAGS$])
m4trace:configure.ac:1944: -1- m4_pattern_allow([^HAVE_XSERVER$])
m4trace:configure.ac:1988: -1- m4_pattern_allow([^SYSTEM_MALLOC$])
m4trace:configure.ac:1999: -1- m4_pattern_allow([^HAVE_SYS_VLIMIT_H$])
m4trace:configure.ac:2008: -1- m4_pattern_allow([^HAVE_DATA_START$])
m4trace:configure.ac:2013: -1- m4_pattern_allow([^GMALLOC_OBJ$])
m4trace:configure.ac:2014: -1- m4_pattern_allow([^VMLIMIT_OBJ$])
m4trace:configure.ac:2021: -1- m4_pattern_allow([^DOUG_LEA_MALLOC$])
m4trace:configure.ac:2043: -1- AC_DEFUN([_AC_Header_stdlib_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdlib.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:2043: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:2043: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:2043: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:2043: -1- m4_pattern_allow([^HAVE_MMAP$])
m4trace:configure.ac:2045: -1- m4_pattern_allow([^USE_MMAP_FOR_BUFFERS$])
m4trace:configure.ac:2052: -1- m4_pattern_allow([^HAVE_LIBDNET$])
m4trace:configure.ac:2062: -1- AC_DEFUN([_AC_Header_pthread_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" pthread.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:2080: -1- m4_pattern_allow([^HAVE_PTHREAD$])
m4trace:configure.ac:2082: -1- m4_pattern_allow([^LIB_PTHREAD$])
m4trace:configure.ac:2084: -1- m4_pattern_allow([^HAVE_LIBPTHREADS$])
m4trace:configure.ac:2181: -1- m4_pattern_allow([^HAVE_XKB$])
m4trace:configure.ac:2198: -1- m4_pattern_allow([^HAVE_X11R6$])
m4trace:configure.ac:2200: -1- m4_pattern_allow([^HAVE_X_I18N$])
m4trace:configure.ac:2205: -1- m4_pattern_allow([^HAVE_X11R6_XIM$])
m4trace:configure.ac:2222: -1- PKG_CHECK_MODULES([RSVG], [$RSVG_MODULE], [HAVE_RSVG=yes], [:])
m4trace:configure.ac:2222: -1- m4_pattern_allow([^RSVG_CFLAGS$])
m4trace:configure.ac:2222: -1- m4_pattern_allow([^RSVG_LIBS$])
m4trace:configure.ac:2223: -1- m4_pattern_allow([^RSVG_CFLAGS$])
m4trace:configure.ac:2224: -1- m4_pattern_allow([^RSVG_LIBS$])
m4trace:configure.ac:2227: -1- m4_pattern_allow([^HAVE_RSVG$])
m4trace:configure.ac:2246: -1- PKG_CHECK_MODULES([IMAGEMAGICK], [$IMAGEMAGICK_MODULE], [HAVE_IMAGEMAGICK=yes], [:])
m4trace:configure.ac:2246: -1- m4_pattern_allow([^IMAGEMAGICK_CFLAGS$])
m4trace:configure.ac:2246: -1- m4_pattern_allow([^IMAGEMAGICK_LIBS$])
m4trace:configure.ac:2247: -1- m4_pattern_allow([^IMAGEMAGICK_CFLAGS$])
m4trace:configure.ac:2248: -1- m4_pattern_allow([^IMAGEMAGICK_LIBS$])
m4trace:configure.ac:2251: -1- m4_pattern_allow([^HAVE_IMAGEMAGICK$])
m4trace:configure.ac:2272: -1- PKG_CHECK_MODULES([GTK], [$GTK_MODULES], [pkg_check_gtk=yes], [pkg_check_gtk=no])
m4trace:configure.ac:2272: -1- m4_pattern_allow([^GTK_CFLAGS$])
m4trace:configure.ac:2272: -1- m4_pattern_allow([^GTK_LIBS$])
m4trace:configure.ac:2277: -1- m4_pattern_allow([^HAVE_GTK3$])
m4trace:configure.ac:2282: -1- m4_pattern_allow([^GDK_DISABLE_DEPRECATION_WARNINGS$])
m4trace:configure.ac:2284: -1- m4_pattern_allow([^GLIB_DISABLE_DEPRECATION_WARNINGS$])
m4trace:configure.ac:2299: -1- PKG_CHECK_MODULES([GTK], [$GTK_MODULES], [pkg_check_gtk=yes], [pkg_check_gtk=no])
m4trace:configure.ac:2299: -1- m4_pattern_allow([^GTK_CFLAGS$])
m4trace:configure.ac:2299: -1- m4_pattern_allow([^GTK_LIBS$])
m4trace:configure.ac:2311: -1- m4_pattern_allow([^GTK_LIBS$])
m4trace:configure.ac:2345: -1- m4_pattern_allow([^USE_GTK$])
m4trace:configure.ac:2361: -1- m4_pattern_allow([^GTK_OBJ$])
m4trace:configure.ac:2381: -1- m4_pattern_allow([^HAVE_GTK_FILE_SELECTION_NEW$])
m4trace:configure.ac:2390: -1- m4_pattern_allow([^HAVE_GTK_HANDLE_BOX_NEW$])
m4trace:configure.ac:2399: -1- m4_pattern_allow([^HAVE_GTK_TEAROFF_MENU_ITEM_NEW$])
m4trace:configure.ac:2417: -1- PKG_CHECK_MODULES([DBUS], [dbus-1 >= 1.0], [HAVE_DBUS=yes], [HAVE_DBUS=no])
m4trace:configure.ac:2417: -1- m4_pattern_allow([^DBUS_CFLAGS$])
m4trace:configure.ac:2417: -1- m4_pattern_allow([^DBUS_LIBS$])
m4trace:configure.ac:2420: -1- m4_pattern_allow([^HAVE_DBUS$])
m4trace:configure.ac:2433: -1- m4_pattern_allow([^DBUS_OBJ$])
m4trace:configure.ac:2438: -1- PKG_CHECK_MODULES([GSETTINGS], [gio-2.0 >= 2.26], [HAVE_GSETTINGS=yes], [HAVE_GSETTINGS=no])
m4trace:configure.ac:2438: -1- m4_pattern_allow([^GSETTINGS_CFLAGS$])
m4trace:configure.ac:2438: -1- m4_pattern_allow([^GSETTINGS_LIBS$])
m4trace:configure.ac:2440: -1- m4_pattern_allow([^HAVE_GSETTINGS$])
m4trace:configure.ac:2450: -1- PKG_CHECK_MODULES([GCONF], [gconf-2.0 >= 2.13], [HAVE_GCONF=yes], [HAVE_GCONF=no])
m4trace:configure.ac:2450: -1- m4_pattern_allow([^GCONF_CFLAGS$])
m4trace:configure.ac:2450: -1- m4_pattern_allow([^GCONF_LIBS$])
m4trace:configure.ac:2452: -1- m4_pattern_allow([^HAVE_GCONF$])
m4trace:configure.ac:2460: -1- PKG_CHECK_MODULES([GOBJECT], [gobject-2.0 >= 2.0], [HAVE_GOBJECT=yes], [HAVE_GOBJECT=no])
m4trace:configure.ac:2460: -1- m4_pattern_allow([^GOBJECT_CFLAGS$])
m4trace:configure.ac:2460: -1- m4_pattern_allow([^GOBJECT_LIBS$])
m4trace:configure.ac:2472: -1- m4_pattern_allow([^SETTINGS_CFLAGS$])
m4trace:configure.ac:2473: -1- m4_pattern_allow([^SETTINGS_LIBS$])
m4trace:configure.ac:2482: -1- m4_pattern_allow([^HAVE_LIBSELINUX$])
m4trace:configure.ac:2486: -1- m4_pattern_allow([^LIBSELINUX_LIBS$])
m4trace:configure.ac:2491: -1- PKG_CHECK_MODULES([LIBGNUTLS], [gnutls >= 3.0.0], [HAVE_GNUTLS3=yes], [HAVE_GNUTLS3=no])
m4trace:configure.ac:2491: -1- m4_pattern_allow([^LIBGNUTLS_CFLAGS$])
m4trace:configure.ac:2491: -1- m4_pattern_allow([^LIBGNUTLS_LIBS$])
m4trace:configure.ac:2493: -1- m4_pattern_allow([^HAVE_GNUTLS3$])
m4trace:configure.ac:2496: -1- PKG_CHECK_MODULES([LIBGNUTLS], [gnutls >= 2.6.6], [HAVE_GNUTLS=yes], [HAVE_GNUTLS=no])
m4trace:configure.ac:2496: -1- m4_pattern_allow([^LIBGNUTLS_CFLAGS$])
m4trace:configure.ac:2496: -1- m4_pattern_allow([^LIBGNUTLS_LIBS$])
m4trace:configure.ac:2499: -1- m4_pattern_allow([^HAVE_GNUTLS$])
m4trace:configure.ac:2511: -1- m4_pattern_allow([^LIBGNUTLS_LIBS$])
m4trace:configure.ac:2512: -1- m4_pattern_allow([^LIBGNUTLS_CFLAGS$])
m4trace:configure.ac:2528: -1- m4_pattern_allow([^HAVE_W32NOTIFY$])
m4trace:configure.ac:2541: -1- PKG_CHECK_MODULES([GFILENOTIFY], [gio-2.0 >= 2.24], [HAVE_GFILENOTIFY=yes], [HAVE_GFILENOTIFY=no])
m4trace:configure.ac:2541: -1- m4_pattern_allow([^GFILENOTIFY_CFLAGS$])
m4trace:configure.ac:2541: -1- m4_pattern_allow([^GFILENOTIFY_LIBS$])
m4trace:configure.ac:2543: -1- m4_pattern_allow([^HAVE_GFILENOTIFY$])
m4trace:configure.ac:2556: -1- m4_pattern_allow([^HAVE_INOTIFY$])
m4trace:configure.ac:2569: -1- m4_pattern_allow([^USE_FILE_NOTIFY$])
m4trace:configure.ac:2571: -1- m4_pattern_allow([^NOTIFY_OBJ$])
m4trace:configure.ac:2572: -1- m4_pattern_allow([^GFILENOTIFY_CFLAGS$])
m4trace:configure.ac:2573: -1- m4_pattern_allow([^GFILENOTIFY_LIBS$])
m4trace:configure.ac:2598: -1- m4_pattern_allow([^HAVE_XAW3D$])
m4trace:configure.ac:2641: -1- m4_pattern_allow([^HAVE_X11XTR6$])
m4trace:configure.ac:2660: -1- m4_pattern_allow([^HAVE_LIBXMU$])
m4trace:configure.ac:2664: -1- m4_pattern_allow([^LIBXTR6$])
m4trace:configure.ac:2678: -1- m4_pattern_allow([^LIBXMU$])
m4trace:configure.ac:2683: -1- m4_pattern_allow([^HAVE_LIBXEXT$])
m4trace:configure.ac:2755: -1- m4_pattern_allow([^USE_TOOLKIT_SCROLL_BARS$])
m4trace:configure.ac:2759: -1- m4_pattern_allow([^USE_TOOLKIT_SCROLL_BARS$])
m4trace:configure.ac:2763: -1- m4_pattern_allow([^USE_TOOLKIT_SCROLL_BARS$])
m4trace:configure.ac:2766: -1- m4_pattern_allow([^USE_TOOLKIT_SCROLL_BARS$])
m4trace:configure.ac:2769: -1- m4_pattern_allow([^USE_TOOLKIT_SCROLL_BARS$])
m4trace:configure.ac:2775: -1- m4_pattern_allow([^HAVE_XIM$])
m4trace:configure.ac:2786: -1- m4_pattern_allow([^USE_XIM$])
m4trace:configure.ac:2818: -1- m4_pattern_allow([^XRegisterIMInstantiateCallback_arg6$])
m4trace:configure.ac:2820: -1- m4_pattern_allow([^XRegisterIMInstantiateCallback_arg6$])
m4trace:configure.ac:2831: -1- PKG_CHECK_MODULES([FONTCONFIG], [fontconfig >= 2.2.0], [HAVE_FC=yes], [HAVE_FC=no])
m4trace:configure.ac:2831: -1- m4_pattern_allow([^FONTCONFIG_CFLAGS$])
m4trace:configure.ac:2831: -1- m4_pattern_allow([^FONTCONFIG_LIBS$])
m4trace:configure.ac:2840: -1- PKG_CHECK_MODULES([XFT], [xft >= 0.13.0], [], [HAVE_XFT=no])
m4trace:configure.ac:2840: -1- m4_pattern_allow([^XFT_CFLAGS$])
m4trace:configure.ac:2840: -1- m4_pattern_allow([^XFT_LIBS$])
m4trace:configure.ac:2858: -1- m4_pattern_allow([^HAVE_XFT$])
m4trace:configure.ac:2859: -1- m4_pattern_allow([^XFT_LIBS$])
m4trace:configure.ac:2880: -1- PKG_CHECK_MODULES([FREETYPE], [freetype2], [HAVE_FREETYPE=yes], [HAVE_FREETYPE=no])
m4trace:configure.ac:2880: -1- m4_pattern_allow([^FREETYPE_CFLAGS$])
m4trace:configure.ac:2880: -1- m4_pattern_allow([^FREETYPE_LIBS$])
m4trace:configure.ac:2888: -1- m4_pattern_allow([^HAVE_FREETYPE$])
m4trace:configure.ac:2891: -1- PKG_CHECK_MODULES([LIBOTF], [libotf], [HAVE_LIBOTF=yes], [HAVE_LIBOTF=no])
m4trace:configure.ac:2891: -1- m4_pattern_allow([^LIBOTF_CFLAGS$])
m4trace:configure.ac:2891: -1- m4_pattern_allow([^LIBOTF_LIBS$])
m4trace:configure.ac:2894: -1- m4_pattern_allow([^HAVE_LIBOTF$])
m4trace:configure.ac:2899: -1- m4_pattern_allow([^HAVE_OTF_GET_VARIATION_GLYPHS$])
m4trace:configure.ac:2911: -1- PKG_CHECK_MODULES([M17N_FLT], [m17n-flt], [HAVE_M17N_FLT=yes], [HAVE_M17N_FLT=no])
m4trace:configure.ac:2911: -1- m4_pattern_allow([^M17N_FLT_CFLAGS$])
m4trace:configure.ac:2911: -1- m4_pattern_allow([^M17N_FLT_LIBS$])
m4trace:configure.ac:2913: -1- m4_pattern_allow([^HAVE_M17N_FLT$])
m4trace:configure.ac:2926: -1- m4_pattern_allow([^FREETYPE_CFLAGS$])
m4trace:configure.ac:2927: -1- m4_pattern_allow([^FREETYPE_LIBS$])
m4trace:configure.ac:2928: -1- m4_pattern_allow([^FONTCONFIG_CFLAGS$])
m4trace:configure.ac:2929: -1- m4_pattern_allow([^FONTCONFIG_LIBS$])
m4trace:configure.ac:2930: -1- m4_pattern_allow([^LIBOTF_CFLAGS$])
m4trace:configure.ac:2931: -1- m4_pattern_allow([^LIBOTF_LIBS$])
m4trace:configure.ac:2932: -1- m4_pattern_allow([^M17N_FLT_CFLAGS$])
m4trace:configure.ac:2933: -1- m4_pattern_allow([^M17N_FLT_LIBS$])
m4trace:configure.ac:2968: -1- m4_pattern_allow([^HAVE_XPM$])
m4trace:configure.ac:2995: -1- m4_pattern_allow([^HAVE_XPM$])
m4trace:configure.ac:3011: -1- m4_pattern_allow([^HAVE_XPM$])
m4trace:configure.ac:3015: -1- m4_pattern_allow([^LIBXPM$])
m4trace:configure.ac:3029: -1- m4_pattern_allow([^HAVE_JPEG$])
m4trace:configure.ac:3030: -1- m4_pattern_allow([^HAVE_JPEG$])
m4trace:configure.ac:3048: -1- m4_pattern_allow([^HAVE_JPEG$])
m4trace:configure.ac:3049: -1- m4_pattern_allow([^HAVE_JPEG$])
m4trace:configure.ac:3061: -1- m4_pattern_allow([^LIBJPEG$])
m4trace:configure.ac:3072: -1- m4_pattern_allow([^HAVE_PNG$])
m4trace:configure.ac:3074: -1- m4_pattern_allow([^PNG_DEPSTRUCT$])
m4trace:configure.ac:3098: -1- m4_pattern_allow([^HAVE_PNG$])
m4trace:configure.ac:3101: -1- m4_pattern_allow([^PNG_DEPSTRUCT$])
m4trace:configure.ac:3115: -1- m4_pattern_allow([^LIBPNG$])
m4trace:configure.ac:3128: -1- m4_pattern_allow([^HAVE_ZLIB$])
m4trace:configure.ac:3134: -1- m4_pattern_allow([^LIBZ$])
m4trace:configure.ac:3146: -1- m4_pattern_allow([^HAVE_TIFF$])
m4trace:configure.ac:3158: -1- m4_pattern_allow([^HAVE_TIFF$])
m4trace:configure.ac:3163: -1- m4_pattern_allow([^LIBTIFF$])
m4trace:configure.ac:3174: -1- m4_pattern_allow([^HAVE_GIF$])
m4trace:configure.ac:3193: -1- m4_pattern_allow([^HAVE_GIF$])
m4trace:configure.ac:3196: -1- m4_pattern_allow([^LIBGIF$])
m4trace:configure.ac:3231: -1- m4_pattern_allow([^HAVE_GPM$])
m4trace:configure.ac:3235: -1- m4_pattern_allow([^LIBGPM$])
m4trace:configure.ac:3238: -1- AC_DEFUN([_AC_Header_malloc_malloc_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" malloc/malloc.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:3243: -1- m4_pattern_allow([^HAVE_NS$])
m4trace:configure.ac:3245: -1- m4_pattern_allow([^NS_IMPL_COCOA$])
m4trace:configure.ac:3248: -1- m4_pattern_allow([^NS_IMPL_GNUSTEP$])
m4trace:configure.ac:3266: -1- m4_pattern_allow([^HAVE_X_SM$])
m4trace:configure.ac:3274: -1- m4_pattern_allow([^LIBXSM$])
m4trace:configure.ac:3281: -1- PKG_CHECK_MODULES([XRANDR], [$XRANDR_MODULES], [HAVE_XRANDR=yes], [HAVE_XRANDR=no])
m4trace:configure.ac:3281: -1- m4_pattern_allow([^XRANDR_CFLAGS$])
m4trace:configure.ac:3281: -1- m4_pattern_allow([^XRANDR_LIBS$])
m4trace:configure.ac:3288: -1- m4_pattern_allow([^XRANDR_LIBS$])
m4trace:configure.ac:3300: -1- m4_pattern_allow([^HAVE_XRANDR$])
m4trace:configure.ac:3309: -1- PKG_CHECK_MODULES([XINERAMA], [$XINERAMA_MODULES], [HAVE_XINERAMA=yes], [HAVE_XINERAMA=no])
m4trace:configure.ac:3309: -1- m4_pattern_allow([^XINERAMA_CFLAGS$])
m4trace:configure.ac:3309: -1- m4_pattern_allow([^XINERAMA_LIBS$])
m4trace:configure.ac:3317: -1- m4_pattern_allow([^XINERAMA_LIBS$])
m4trace:configure.ac:3321: -1- m4_pattern_allow([^HAVE_XINERAMA$])
m4trace:configure.ac:3331: -1- PKG_CHECK_MODULES([LIBXML2], [libxml-2.0 > 2.6.17], [HAVE_LIBXML2=yes], [HAVE_LIBXML2=no])
m4trace:configure.ac:3331: -1- m4_pattern_allow([^LIBXML2_CFLAGS$])
m4trace:configure.ac:3331: -1- m4_pattern_allow([^LIBXML2_LIBS$])
m4trace:configure.ac:3353: -1- m4_pattern_allow([^HAVE_LIBXML2$])
m4trace:configure.ac:3360: -1- m4_pattern_allow([^LIBXML2_LIBS$])
m4trace:configure.ac:3361: -1- m4_pattern_allow([^LIBXML2_CFLAGS$])
m4trace:configure.ac:3374: -1- m4_pattern_allow([^HAVE_H_ERRNO$])
m4trace:configure.ac:3380: -1- m4_pattern_allow([^HAVE_LIBM$])
m4trace:configure.ac:3389: -1- m4_pattern_allow([^HAVE_LIBMAIL$])
m4trace:configure.ac:3398: -1- m4_pattern_allow([^HAVE_LIBLOCKFILE$])
m4trace:configure.ac:3405: -1- m4_pattern_allow([^liblockfile$])
m4trace:configure.ac:3413: -1- AC_DEFUN([_AC_Header_maillock_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" maillock.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:3414: -1- m4_pattern_allow([^LIBS_MAIL$])
m4trace:configure.ac:3452: -1- m4_pattern_allow([^MAIL_USE_FLOCK$])
m4trace:configure.ac:3454: -1- m4_pattern_allow([^MAIL_USE_LOCKF$])
m4trace:configure.ac:3460: -1- m4_pattern_allow([^BLESSMAIL_TARGET$])
m4trace:configure.ac:3500: -1- m4_pattern_allow([^HAVE___BUILTIN_UNWIND_INIT$])
m4trace:configure.ac:3504: -1- AC_DEFUN([_AC_Header_sys_un_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/un.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:3506: -1- m4_pattern_allow([^_LARGEFILE_SOURCE$])
m4trace:configure.ac:3506: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:3509: -1- m4_pattern_allow([^HAVE_GRANTPT$])
m4trace:configure.ac:3525: -1- AC_DEFUN([tputs_link_source], [
  AC_LANG_SOURCE(
     [[extern void tputs (const char *, int, int (*)(int));
       int main (int argc, char **argv)
       {
	  if (argc == 10000)
	    tputs (argv[0], 0, 0);
	  return 0;
       }]])
])
m4trace:configure.ac:3550: -1- tputs_link_source
m4trace:configure.ac:3550: -1- tputs_link_source
m4trace:configure.ac:3628: -1- m4_pattern_allow([^TERMINFO$])
m4trace:configure.ac:3632: -1- m4_pattern_allow([^USE_NCURSES$])
m4trace:configure.ac:3634: -1- m4_pattern_allow([^LIBS_TERMCAP$])
m4trace:configure.ac:3635: -1- m4_pattern_allow([^TERMCAP_OBJ$])
m4trace:configure.ac:3667: -1- m4_pattern_allow([^HAVE_RES_INIT$])
m4trace:configure.ac:3691: -1- m4_pattern_allow([^LIBHESIOD$])
m4trace:configure.ac:3699: -1- m4_pattern_allow([^LIBRESOLV$])
m4trace:configure.ac:3756: -1- m4_pattern_allow([^HAVE_KRB5_H$])
m4trace:configure.ac:3756: -1- m4_pattern_allow([^HAVE_KRB5_ERROR_TEXT$])
m4trace:configure.ac:3756: -1- m4_pattern_allow([^HAVE_KRB5_ERROR_E_TEXT$])
m4trace:configure.ac:3760: -1- m4_pattern_allow([^HAVE_KRB_H$])
m4trace:configure.ac:3760: -1- m4_pattern_allow([^HAVE_KERBEROSIV_KRB_H$])
m4trace:configure.ac:3760: -1- m4_pattern_allow([^HAVE_KERBEROS_KRB_H$])
m4trace:configure.ac:3764: -1- m4_pattern_allow([^HAVE_COM_ERR_H$])
m4trace:configure.ac:3767: -1- m4_pattern_allow([^COM_ERRLIB$])
m4trace:configure.ac:3768: -1- m4_pattern_allow([^CRYPTOLIB$])
m4trace:configure.ac:3769: -1- m4_pattern_allow([^KRB5LIB$])
m4trace:configure.ac:3770: -1- m4_pattern_allow([^DESLIB$])
m4trace:configure.ac:3771: -1- m4_pattern_allow([^KRB4LIB$])
m4trace:configure.ac:3773: -1- m4_pattern_allow([^HAVE_VALGRIND_VALGRIND_H$])
m4trace:configure.ac:3775: -1- AC_DEFUN([_AC_Func_tzset], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" tzset"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:3809: -1- m4_pattern_allow([^LOCALTIME_CACHE$])
m4trace:configure.ac:3823: -1- m4_pattern_allow([^HAVE_INET_SOCKETS$])
m4trace:configure.ac:3835: -1- m4_pattern_allow([^pid_t$])
m4trace:configure.ac:3835: -1- m4_pattern_allow([^HAVE_VFORK_H$])
m4trace:configure.ac:3835: -1- m4_pattern_allow([^HAVE_WORKING_VFORK$])
m4trace:configure.ac:3835: -1- m4_pattern_allow([^vfork$])
m4trace:configure.ac:3835: -1- m4_pattern_allow([^HAVE_WORKING_FORK$])
m4trace:configure.ac:3837: -1- m4_pattern_allow([^HAVE_SNPRINTF$])
m4trace:configure.ac:3851: -1- m4_pattern_allow([^HAVE_GLIB$])
m4trace:configure.ac:3856: -1- m4_pattern_allow([^XGSELOBJ$])
m4trace:configure.ac:3866: -1- m4_pattern_allow([^HAVE_LANGINFO_CODESET$])
m4trace:configure.ac:3870: -1- m4_pattern_allow([^HAVE_MBSTATE_T$])
m4trace:configure.ac:3870: -1- m4_pattern_allow([^mbstate_t$])
m4trace:configure.ac:3876: -1- m4_pattern_allow([^__restrict_arr$])
m4trace:configure.ac:3895: -1- m4_pattern_allow([^AMPERSAND_FULL_NAME$])
m4trace:configure.ac:3903: -1- m4_pattern_allow([^CLASH_DETECTION$])
m4trace:configure.ac:3911: -1- m4_pattern_allow([^HAVE_PTYS$])
m4trace:configure.ac:3917: -1- m4_pattern_allow([^HAVE_SOCKETS$])
m4trace:configure.ac:3925: -1- m4_pattern_allow([^NULL_DEVICE$])
m4trace:configure.ac:3927: -1- m4_pattern_allow([^NULL_DEVICE$])
m4trace:configure.ac:3935: -1- m4_pattern_allow([^SEPCHAR$])
m4trace:configure.ac:3945: -1- m4_pattern_allow([^SEPCHAR$])
m4trace:configure.ac:3948: -1- m4_pattern_allow([^subprocesses$])
m4trace:configure.ac:3950: -1- m4_pattern_allow([^USER_FULL_NAME$])
m4trace:configure.ac:3953: -1- m4_pattern_allow([^DIRECTORY_SEP$])
m4trace:configure.ac:3957: -1- m4_pattern_allow([^IS_DEVICE_SEP$])
m4trace:configure.ac:3960: -1- m4_pattern_allow([^IS_DIRECTORY_SEP$])
m4trace:configure.ac:3963: -1- m4_pattern_allow([^IS_ANY_SEP$])
m4trace:configure.ac:3966: -1- m4_pattern_allow([^IS_DEVICE_SEP$])
m4trace:configure.ac:3969: -1- m4_pattern_allow([^IS_DIRECTORY_SEP$])
m4trace:configure.ac:3972: -1- m4_pattern_allow([^IS_ANY_SEP$])
m4trace:configure.ac:3982: -1- m4_pattern_allow([^NO_EDITRES$])
m4trace:configure.ac:3989: -1- m4_pattern_allow([^NO_EDITRES$])
m4trace:configure.ac:4000: -1- m4_pattern_allow([^NSIG_MINIMUM$])
m4trace:configure.ac:4034: -1- m4_pattern_allow([^BROKEN_GET_CURRENT_DIR_NAME$])
m4trace:configure.ac:4052: -1- m4_pattern_allow([^BROKEN_PTY_READ_AFTER_EAGAIN$])
m4trace:configure.ac:4060: -1- m4_pattern_allow([^HAVE_PROCFS$])
m4trace:configure.ac:4066: -1- m4_pattern_allow([^DONT_REOPEN_PTY$])
m4trace:configure.ac:4079: -1- m4_pattern_allow([^DEFAULT_SOUND_DEVICE$])
m4trace:configure.ac:4106: -1- m4_pattern_allow([^INTERRUPT_INPUT$])
m4trace:configure.ac:4118: -1- m4_pattern_allow([^NARROWPROTO$])
m4trace:configure.ac:4139: -1- m4_pattern_allow([^PTY_ITERATION$])
m4trace:configure.ac:4142: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4143: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4147: -1- m4_pattern_allow([^PTY_ITERATION$])
m4trace:configure.ac:4149: -1- m4_pattern_allow([^PTY_OPEN$])
m4trace:configure.ac:4150: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4151: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4156: -1- m4_pattern_allow([^PTY_ITERATION$])
m4trace:configure.ac:4158: -1- m4_pattern_allow([^FIRST_PTY_LETTER$])
m4trace:configure.ac:4162: -1- m4_pattern_allow([^PTY_OPEN$])
m4trace:configure.ac:4163: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4164: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4168: -1- m4_pattern_allow([^FIRST_PTY_LETTER$])
m4trace:configure.ac:4174: -1- m4_pattern_allow([^UNIX98_PTYS$])
m4trace:configure.ac:4175: -1- m4_pattern_allow([^PTY_ITERATION$])
m4trace:configure.ac:4178: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4181: -1- m4_pattern_allow([^PTY_OPEN$])
m4trace:configure.ac:4182: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4185: -1- m4_pattern_allow([^PTY_OPEN$])
m4trace:configure.ac:4186: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4188: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4191: -1- m4_pattern_allow([^FIRST_PTY_LETTER$])
m4trace:configure.ac:4196: -1- m4_pattern_allow([^FIRST_PTY_LETTER$])
m4trace:configure.ac:4197: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4198: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4212: -1- m4_pattern_allow([^PTY_ITERATION$])
m4trace:configure.ac:4214: -1- m4_pattern_allow([^FIRST_PTY_LETTER$])
m4trace:configure.ac:4215: -1- m4_pattern_allow([^PTY_OPEN$])
m4trace:configure.ac:4217: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4219: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4226: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4231: -1- m4_pattern_allow([^PTY_TTY_NAME_SPRINTF$])
m4trace:configure.ac:4240: -1- m4_pattern_allow([^FIRST_PTY_LETTER$])
m4trace:configure.ac:4241: -1- m4_pattern_allow([^PTY_NAME_SPRINTF$])
m4trace:configure.ac:4243: -1- m4_pattern_allow([^SETUP_SLAVE_PTY$])
m4trace:configure.ac:4255: -1- m4_pattern_allow([^SIGNALS_VIA_CHARACTERS$])
m4trace:configure.ac:4271: -1- m4_pattern_allow([^SIGNALS_VIA_CHARACTERS$])
m4trace:configure.ac:4286: -1- m4_pattern_allow([^DATA_SEG_BITS$])
m4trace:configure.ac:4290: -1- m4_pattern_allow([^DATA_SEG_BITS$])
m4trace:configure.ac:4293: -1- m4_pattern_allow([^DATA_SEG_BITS$])
m4trace:configure.ac:4301: -1- m4_pattern_allow([^TAB3$])
m4trace:configure.ac:4304: -1- m4_pattern_allow([^TABDLY$])
m4trace:configure.ac:4305: -1- m4_pattern_allow([^TAB3$])
m4trace:configure.ac:4313: -2- m4_pattern_allow([^GC_MARK_SECONDARY_STACK$])
m4trace:configure.ac:4319: -1- m4_pattern_allow([^RUN_TIME_REMAP$])
m4trace:configure.ac:4346: -2- m4_pattern_allow([^GC_SETJMP_WORKS$])
m4trace:configure.ac:4353: -1- m4_pattern_allow([^GC_SETJMP_WORKS$])
m4trace:configure.ac:4358: -1- m4_pattern_allow([^GC_SETJMP_WORKS$])
m4trace:configure.ac:4378: -1- m4_pattern_allow([^HAVE__SETJMP$])
m4trace:configure.ac:4391: -1- m4_pattern_allow([^HAVE_SIGSETJMP$])
m4trace:configure.ac:4402: -1- m4_pattern_allow([^TIOCSIGSEND$])
m4trace:configure.ac:4410: -1- m4_pattern_allow([^XOS_NEEDS_TIME_H$])
m4trace:configure.ac:4425: -1- m4_pattern_allow([^USG$])
m4trace:configure.ac:4431: -2- m4_pattern_allow([^_AIX$])
m4trace:configure.ac:4435: -1- m4_pattern_allow([^CYGWIN$])
m4trace:configure.ac:4442: -1- m4_pattern_allow([^DARWIN_OS$])
m4trace:configure.ac:4446: -1- m4_pattern_allow([^USG$])
m4trace:configure.ac:4447: -1- m4_pattern_allow([^GNU_LINUX$])
m4trace:configure.ac:4451: -1- m4_pattern_allow([^USG$])
m4trace:configure.ac:4452: -1- m4_pattern_allow([^HPUX$])
m4trace:configure.ac:4456: -1- m4_pattern_allow([^USG$])
m4trace:configure.ac:4457: -1- m4_pattern_allow([^USG5_4$])
m4trace:configure.ac:4458: -1- m4_pattern_allow([^IRIX6_5$])
m4trace:configure.ac:4462: -1- m4_pattern_allow([^DOS_NT$])
m4trace:configure.ac:4463: -1- m4_pattern_allow([^WINDOWSNT$])
m4trace:configure.ac:4465: -1- m4_pattern_allow([^EMACSDEBUG$])
m4trace:configure.ac:4470: -1- m4_pattern_allow([^USG$])
m4trace:configure.ac:4471: -1- m4_pattern_allow([^USG5_4$])
m4trace:configure.ac:4472: -1- m4_pattern_allow([^SOLARIS2$])
m4trace:configure.ac:4476: -1- m4_pattern_allow([^USG$])
m4trace:configure.ac:4477: -1- m4_pattern_allow([^USG5_4$])
m4trace:configure.ac:4506: -1- m4_pattern_allow([^USABLE_FIONREAD$])
m4trace:configure.ac:4520: -1- m4_pattern_allow([^USABLE_SIGIO$])
m4trace:configure.ac:4535: -1- m4_pattern_allow([^G_SLICE_ALWAYS_MALLOC$])
m4trace:configure.ac:4542: -1- m4_pattern_allow([^USG_SUBTTY_WORKS$])
m4trace:configure.ac:4548: -1- m4_pattern_allow([^PREFER_VSUSP$])
m4trace:configure.ac:4553: -1- m4_pattern_allow([^_STRUCTURED_PROC$])
m4trace:configure.ac:4573: -1- m4_pattern_allow([^COPYRIGHT$])
m4trace:configure.ac:4575: -1- m4_pattern_allow([^copyright$])
m4trace:configure.ac:4579: -1- m4_pattern_allow([^version$])
m4trace:configure.ac:4580: -1- m4_pattern_allow([^configuration$])
m4trace:configure.ac:4582: -1- m4_pattern_allow([^canonical$])
m4trace:configure.ac:4583: -1- m4_pattern_allow([^srcdir$])
m4trace:configure.ac:4584: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:4585: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:4586: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:4587: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:4588: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:4589: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:4590: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:4591: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:4592: -1- m4_pattern_allow([^lispdir$])
m4trace:configure.ac:4593: -1- m4_pattern_allow([^standardlisppath$])
m4trace:configure.ac:4594: -1- m4_pattern_allow([^locallisppath$])
m4trace:configure.ac:4595: -1- m4_pattern_allow([^lisppath$])
m4trace:configure.ac:4596: -1- m4_pattern_allow([^x_default_search_path$])
m4trace:configure.ac:4597: -1- m4_pattern_allow([^etcdir$])
m4trace:configure.ac:4598: -1- m4_pattern_allow([^archlibdir$])
m4trace:configure.ac:4599: -1- m4_pattern_allow([^etcdocdir$])
m4trace:configure.ac:4600: -1- m4_pattern_allow([^bitmapdir$])
m4trace:configure.ac:4601: -1- m4_pattern_allow([^gamedir$])
m4trace:configure.ac:4602: -1- m4_pattern_allow([^gameuser$])
m4trace:configure.ac:4606: -1- m4_pattern_allow([^LD_SWITCH_X_SITE$])
m4trace:configure.ac:4607: -1- m4_pattern_allow([^C_SWITCH_X_SITE$])
m4trace:configure.ac:4608: -1- m4_pattern_allow([^GNUSTEP_CFLAGS$])
m4trace:configure.ac:4609: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:4611: -1- m4_pattern_allow([^X_TOOLKIT_TYPE$])
m4trace:configure.ac:4612: -1- m4_pattern_allow([^ns_appdir$])
m4trace:configure.ac:4613: -1- m4_pattern_allow([^ns_appbindir$])
m4trace:configure.ac:4614: -1- m4_pattern_allow([^ns_appresdir$])
m4trace:configure.ac:4615: -1- m4_pattern_allow([^ns_appsrc$])
m4trace:configure.ac:4616: -1- m4_pattern_allow([^GNU_OBJC_CFLAGS$])
m4trace:configure.ac:4617: -1- m4_pattern_allow([^OTHER_FILES$])
m4trace:configure.ac:4620: -1- m4_pattern_allow([^TERM_HEADER$])
m4trace:configure.ac:4624: -1- m4_pattern_allow([^EMACS_CONFIGURATION$])
m4trace:configure.ac:4626: -1- m4_pattern_allow([^EMACS_CONFIG_OPTIONS$])
m4trace:configure.ac:4633: -1- m4_pattern_allow([^config_opsysfile$])
m4trace:configure.ac:4641: -1- m4_pattern_allow([^HAVE_X_WINDOWS$])
m4trace:configure.ac:4651: -1- m4_pattern_allow([^FONT_OBJ$])
m4trace:configure.ac:4653: -1- m4_pattern_allow([^XMENU_OBJ$])
m4trace:configure.ac:4654: -1- m4_pattern_allow([^XOBJ$])
m4trace:configure.ac:4655: -1- m4_pattern_allow([^FONT_OBJ$])
m4trace:configure.ac:4661: -1- m4_pattern_allow([^USE_X_TOOLKIT$])
m4trace:configure.ac:4663: -1- m4_pattern_allow([^USE_LUCID$])
m4trace:configure.ac:4665: -1- m4_pattern_allow([^USE_MOTIF$])
m4trace:configure.ac:4687: -1- m4_pattern_allow([^WIDGET_OBJ$])
m4trace:configure.ac:4695: -1- m4_pattern_allow([^TOOLKIT_LIBW$])
m4trace:configure.ac:4704: -1- m4_pattern_allow([^LIBXT_OTHER$])
m4trace:configure.ac:4707: -1- m4_pattern_allow([^HAVE_X11$])
m4trace:configure.ac:4713: -1- m4_pattern_allow([^LIBX_OTHER$])
m4trace:configure.ac:4722: -1- m4_pattern_allow([^LIBXMENU$])
m4trace:configure.ac:4725: -1- m4_pattern_allow([^GNU_MALLOC$])
m4trace:configure.ac:4731: -1- m4_pattern_allow([^REL_ALLOC$])
m4trace:configure.ac:4737: -1- m4_pattern_allow([^RALLOC_OBJ$])
m4trace:configure.ac:4753: -1- m4_pattern_allow([^CYGWIN_OBJ$])
m4trace:configure.ac:4754: -1- m4_pattern_allow([^PRE_ALLOC_OBJ$])
m4trace:configure.ac:4755: -1- m4_pattern_allow([^POST_ALLOC_OBJ$])
m4trace:configure.ac:4787: -1- gl_ASSERT_NO_GNULIB_POSIXCHECK
m4trace:configure.ac:4787: -1- AC_DEFUN([gl_WARN_ON_USE_PREPARE], [])
m4trace:configure.ac:4788: -1- gl_ASSERT_NO_GNULIB_TESTS
m4trace:configure.ac:4788: -1- AC_DEFUN([gl_MODULE_INDICATOR_FOR_TESTS], [])
m4trace:configure.ac:4789: -1- gl_INIT
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_COND_LIBTOOL], [false])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_COND_LIBTOOL_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_COND_LIBTOOL_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_COND_LIBTOOL_FALSE])
m4trace:configure.ac:4789: -1- gl_COMMON
m4trace:configure.ac:4789: -1- gl_00GNULIB
m4trace:configure.ac:4789: -1- gl_COMMON_BODY
m4trace:configure.ac:4789: -1- gl_FUNC_ALLOCA
m4trace:configure.ac:4789: -1- AC_TYPE_SIZE_T
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ALLOCA_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^ALLOCA$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^C_ALLOCA$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^CRAY_STACKSEG_END$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^STACK_DIRECTION$])
m4trace:configure.ac:4789: -1- gl_PREREQ_ALLOCA
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ALLOCA$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^ALLOCA_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_ALLOCA_H], [test -n "$ALLOCA_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_ALLOCA_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ALLOCA_H_FALSE])
m4trace:configure.ac:4789: -1- gl_BYTESWAP
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_BYTESWAP_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^BYTESWAP_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_BYTESWAP_H], [test -n "$BYTESWAP_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_BYTESWAP_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_BYTESWAP_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_BYTESWAP_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_BYTESWAP_H_FALSE])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_readlinkat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" readlinkat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_CLOCK_TIME
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIB_CLOCK_GETTIME$])
m4trace:configure.ac:4789: -1- gl_CLOSE_STREAM
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR([close-stream])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_CLOSE_STREAM$])
m4trace:configure.ac:4789: -1- gl_COUNT_ONE_BITS
m4trace:configure.ac:4789: -1- AC_TYPE_UNSIGNED_LONG_LONG_INT
m4trace:configure.ac:4789: -1- _AC_TYPE_LONG_LONG_SNIPPET
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:4789: -1- gl_COUNT_TRAILING_ZEROS
m4trace:configure.ac:4789: -1- gl_MD5
m4trace:configure.ac:4789: -1- gl_BIGENDIAN
m4trace:configure.ac:4789: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:4789: -1- gl_CRYPTO_CHECK([MD5])
m4trace:configure.ac:4789: -1- gl_SHA1
m4trace:configure.ac:4789: -1- gl_CRYPTO_CHECK([SHA1])
m4trace:configure.ac:4789: -1- gl_SHA256
m4trace:configure.ac:4789: -1- gl_CRYPTO_CHECK([SHA256])
m4trace:configure.ac:4789: -1- gl_SHA512
m4trace:configure.ac:4789: -1- gl_CRYPTO_CHECK([SHA512])
m4trace:configure.ac:4789: -1- gl_DIRENT_H
m4trace:configure.ac:4789: -1- gl_DIRENT_H_DEFAULTS
m4trace:configure.ac:4789: -1- gl_UNISTD_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_CHDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_CHOWN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_CLOSE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_DUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_DUP2$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_DUP3$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_ENVIRON$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_EUIDACCESS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FACCESSAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FCHDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FCHOWNAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FDATASYNC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FSYNC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FTRUNCATE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETCWD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETDOMAINNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETDTABLESIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETGROUPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETHOSTNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETLOGIN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETLOGIN_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETPAGESIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETUSERSHELL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GROUP_MEMBER$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_ISATTY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_LCHOWN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_LINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_LINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_LSEEK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PIPE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PIPE2$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PREAD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PWRITE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_READ$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_READLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_READLINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RMDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SETHOSTNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SYMLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SYMLINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_TTYNAME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_UNISTD_H_NONBLOCKING$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_UNISTD_H_SIGPIPE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_UNLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_UNLINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_USLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_WRITE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_CHOWN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DUP2$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DUP3$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FACCESSAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FCHDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FCHOWNAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FSYNC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FTRUNCATE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETDTABLESIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETHOSTNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETLOGIN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETPAGESIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GROUP_MEMBER$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LCHOWN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PIPE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PIPE2$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PREAD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PWRITE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_READLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_READLINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SETHOSTNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYMLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYMLINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_UNLINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_USLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_ENVIRON$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FCHDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETDOMAINNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETLOGIN_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETPAGESIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETUSERSHELL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_SETHOSTNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_TTYNAME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_OS_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_PARAM_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_CHOWN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_CLOSE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_DUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_DUP2$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FCHOWNAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FTRUNCATE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETCWD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETDOMAINNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETDTABLESIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETLOGIN_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETGROUPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETPAGESIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_ISATTY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_LCHOWN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_LINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_LINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_LSEEK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PREAD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PWRITE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_READ$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_READLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_RMDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_SLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_SYMLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_TTYNAME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_UNLINK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_UNLINKAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_USLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_WRITE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_OPENDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_READDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_REWINDDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_CLOSEDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_DIRFD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FDOPENDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SCANDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_ALPHASORT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_OPENDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_READDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_REWINDDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_CLOSEDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_DIRFD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FDOPENDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SCANDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ALPHASORT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_OPENDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_CLOSEDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_DIRFD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FDOPENDIR$])
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([dirent.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([dirent.h], [check])
m4trace:configure.ac:4789: -1- gl_INCLUDE_NEXT
m4trace:configure.ac:4789: -1- m4_pattern_allow([^INCLUDE_NEXT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^INCLUDE_NEXT_AS_FIRST_DIRECTIVE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PRAGMA_SYSTEM_HEADER$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PRAGMA_COLUMNS$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_dirent_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" dirent.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([dirent.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_DIRENT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_DIRENT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DIRENT_H$])
m4trace:configure.ac:4789: -1- gl_C99_STRTOLD
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_C99_STRTOLD$])
m4trace:configure.ac:4789: -1- gl_FUNC_DUP2
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DUP2$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SETDTABLESIZE$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([dup2.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_DUP2
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([dup2])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([dup2])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[dup2]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([dup2])
m4trace:configure.ac:4789: -1- gl_ENVIRON
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gt_CHECK_VAR_DECL([#if HAVE_UNISTD_H
     #include <unistd.h>
     #endif
     /* mingw, BeOS, Haiku declare environ in <stdlib.h>, not in <unistd.h>.  */
     #include <stdlib.h>
    ], [environ])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ENVIRON_DECL$])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([environ])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([environ])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[environ]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([environ])
m4trace:configure.ac:4789: -1- gl_HEADER_ERRNO_H
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([errno.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([errno.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([errno.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_ERRNO_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_ERRNO_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^ERRNO_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_ERRNO_H], [test -n "$ERRNO_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_ERRNO_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_ERRNO_H_FALSE])
m4trace:configure.ac:4789: -1- gl_REPLACE_ERRNO_VALUE([EMULTIHOP])
m4trace:configure.ac:4789: -1- AC_COMPUTE_INT([gl_cv_header_errno_h_EMULTIHOP], [EMULTIHOP], [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^EMULTIHOP_HIDDEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^EMULTIHOP_VALUE$])
m4trace:configure.ac:4789: -1- gl_REPLACE_ERRNO_VALUE([ENOLINK])
m4trace:configure.ac:4789: -1- AC_COMPUTE_INT([gl_cv_header_errno_h_ENOLINK], [ENOLINK], [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^ENOLINK_HIDDEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^ENOLINK_VALUE$])
m4trace:configure.ac:4789: -1- gl_REPLACE_ERRNO_VALUE([EOVERFLOW])
m4trace:configure.ac:4789: -1- AC_COMPUTE_INT([gl_cv_header_errno_h_EOVERFLOW], [EOVERFLOW], [
#define _XOPEN_SOURCE_EXTENDED 1
#include <errno.h>
/* The following two lines are a workaround against an autoconf-2.52 bug.  */
#include <stdio.h>
#include <stdlib.h>
])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^EOVERFLOW_HIDDEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^EOVERFLOW_VALUE$])
m4trace:configure.ac:4789: -1- gl_EXECINFO_H
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_execinfo_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" execinfo.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([execinfo.c])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^EXECINFO_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIB_EXECINFO$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_EXECINFO_H], [test -n "$EXECINFO_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_EXECINFO_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_EXECINFO_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_EXECINFO_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_EXECINFO_H_FALSE])
m4trace:configure.ac:4789: -1- gl_EXTERN_INLINE
m4trace:configure.ac:4789: -1- gl_FUNC_FACCESSAT
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_faccessat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" faccessat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([faccessat.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_FACCESSAT
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACCESS$])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR([faccessat])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FACCESSAT$])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([faccessat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([faccessat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[faccessat]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([faccessat])
m4trace:configure.ac:4789: -1- gl_FUNC_FCNTL
m4trace:configure.ac:4789: -1- gl_FCNTL_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FCNTL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_NONBLOCKING$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_OPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_OPENAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FCNTL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_OPENAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FCNTL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_OPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_OPENAT$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^FCNTL_DUPFD_BUGGY$])
m4trace:configure.ac:4789: -1- gl_REPLACE_FCNTL
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fcntl], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fcntl"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([fcntl.c])
m4trace:configure.ac:4789: -1- gl_FCNTL_MODULE_INDICATOR([fcntl])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fcntl])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[fcntl]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([fcntl])
m4trace:configure.ac:4789: -1- gl_FCNTL_H
m4trace:configure.ac:4789: -1- gl_FCNTL_O_FLAGS
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([fcntl.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([fcntl.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([fcntl.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_FCNTL_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_FCNTL_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^mode_t$])
m4trace:configure.ac:4789: -1- gl_FUNC_FDATASYNC
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_fdatasync], [_AC_CHECK_DECLS([fdatasync])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FDATASYNC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIB_FDATASYNC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FDATASYNC$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([fdatasync.c])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([fdatasync])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fdatasync])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[fdatasync]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([fdatasync])
m4trace:configure.ac:4789: -1- gl_FUNC_FDOPENDIR
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FDOPENDIR$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fdopendir], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fdopendir"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([fdopendir.c])
m4trace:configure.ac:4789: -1- gl_DIRENT_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fdopendir])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[fdopendir]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([fdopendir])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR([fdopendir])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FDOPENDIR$])
m4trace:configure.ac:4789: -1- gl_FILEMODE
m4trace:configure.ac:4789: -1- AC_STRUCT_ST_DM_MODE
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ST_DM_MODE$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_strmode], [_AC_CHECK_DECLS([strmode])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRMODE$])
m4trace:configure.ac:4789: -1- gl_FUNC_FPENDING
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_stdio_ext_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdio_ext.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL___FPENDING$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([fpending.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_FPENDING
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PENDING_OUTPUT_N_BYTES$])
m4trace:configure.ac:4789: -1- gl_FUNC_FSTATAT
m4trace:configure.ac:4789: -1- gl_SYS_STAT_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FCHMODAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FSTAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FSTATAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FUTIMENS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_LCHMOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_LSTAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKDIRAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKFIFO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKFIFOAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKNOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKNODAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_UTIMENSAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FCHMODAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FSTATAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FUTIMENS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LCHMOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LSTAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKDIRAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKFIFO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKFIFOAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKNOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKNODAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_UTIMENSAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FSTAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FSTATAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FUTIMENS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_LSTAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MKDIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MKFIFO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MKNOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_UTIMENSAT$])
m4trace:configure.ac:4789: -1- gl_FUNC_LSTAT_FOLLOWS_SLASHED_SYMLINK
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LSTAT_FOLLOWS_SLASHED_SYMLINK$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fstatat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fstatat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WORKING_FSTATAT_ZERO_FLAG$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([fstatat.c])
m4trace:configure.ac:4789: -1- gl_SYS_STAT_MODULE_INDICATOR([fstatat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fstatat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[fstatat]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([fstatat])
m4trace:configure.ac:4789: -1- gl_FUNC_FSYNC
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fsync], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fsync"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([fsync.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_FSYNC
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([fsync])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([fsync])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[fsync]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([fsync])
m4trace:configure.ac:4789: -1- gl_GETLOADAVG
m4trace:configure.ac:4789: -1- gl_STDLIB_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB__EXIT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_ATOLL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_CALLOC_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETLOADAVG$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETSUBOPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GRANTPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MALLOC_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBTOWC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKDTEMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKOSTEMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKOSTEMPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKSTEMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKSTEMPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_POSIX_OPENPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PTSNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PTSNAME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PUTENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RANDOM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RANDOM_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_REALLOC_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_REALPATH$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RPMATCH$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SECURE_GETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRTOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRTOLL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRTOULL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SYSTEM_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_UNLOCKPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_UNSETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_WCTOMB$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE__EXIT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ATOLL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETLOADAVG$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETSUBOPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GRANTPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKDTEMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKOSTEMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKOSTEMPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKSTEMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MKSTEMPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_POSIX_OPENPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PTSNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PTSNAME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_RANDOM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_RANDOM_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_RANDOM_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_REALPATH$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_RPMATCH$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SECURE_GETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_SETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRTOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_RANDOM_DATA$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_UNLOCKPT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_CALLOC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_CANONICALIZE_FILE_NAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MALLOC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MBTOWC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MKSTEMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PTSNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PTSNAME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PUTENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_RANDOM_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_REALLOC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_REALPATH$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_SETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRTOD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_UNSETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_WCTOMB$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LIBKSTAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LIBPERFSTAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^DGUX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LIBDGC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GETLOADAVG_LIBS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_LOADAVG_H$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([getloadavg.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_GETLOADAVG
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PSTAT_GETDYNAMIC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^SVR4$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UMAX4_3$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MACH_MACH_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_NLIST_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_NLIST_N_UN_N_NAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^N_NAME_POINTER$])
m4trace:configure.ac:4789: -1- gl_STDLIB_MODULE_INDICATOR([getloadavg])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getloadavg])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[getloadavg]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([getloadavg])
m4trace:configure.ac:4789: -1- gl_FUNC_GETOPT_GNU
m4trace:configure.ac:4789: -1- gl_FUNC_GETOPT_POSIX
m4trace:configure.ac:4789: -1- gl_GETOPT_CHECK_HEADERS
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([getopt.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([getopt.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_getopt_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" getopt.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([getopt.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_GETOPT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_GETOPT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETOPT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETOPT_LONG_ONLY$])
m4trace:configure.ac:4789: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2749: AC_RUN_IFELSE is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/m4sugar/m4sh.m4:606: AS_IF is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2032: AC_CACHE_VAL is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2053: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:41: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/getopt.m4:33: gl_FUNC_GETOPT_GNU is expanded from...
m4/gnulib-comp.m4:162: gl_INIT is expanded from...
configure.ac:4789: the top level])
m4trace:configure.ac:4789: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2749: AC_RUN_IFELSE is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/m4sugar/m4sh.m4:606: AS_IF is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2032: AC_CACHE_VAL is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2053: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:41: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/getopt.m4:33: gl_FUNC_GETOPT_GNU is expanded from...
m4/gnulib-comp.m4:162: gl_INIT is expanded from...
configure.ac:4789: the top level])
m4trace:configure.ac:4789: -1- _m4_warn([cross], [AC_RUN_IFELSE called without default to allow cross compiling], [/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2749: AC_RUN_IFELSE is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/m4sugar/m4sh.m4:606: AS_IF is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2032: AC_CACHE_VAL is expanded from...
/mingw/src/autoconf/26/autoconf2.5-2.68-1/src/autoconf-2.68/lib/autoconf/general.m4:2053: AC_CACHE_CHECK is expanded from...
m4/getopt.m4:41: gl_GETOPT_CHECK_HEADERS is expanded from...
m4/getopt.m4:8: gl_FUNC_GETOPT_POSIX is expanded from...
m4/getopt.m4:33: gl_FUNC_GETOPT_GNU is expanded from...
m4/gnulib-comp.m4:162: gl_INIT is expanded from...
configure.ac:4789: the top level])
m4trace:configure.ac:4789: -1- GL_NOCRASH
m4trace:configure.ac:4789: -1- gl_GETOPT_SUBSTITUTE_HEADER
m4trace:configure.ac:4789: -1- m4_pattern_allow([^__GETOPT_PREFIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GETOPT_H$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([getopt.c])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([getopt1.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_GETOPT
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_getenv], [_AC_CHECK_DECLS([getenv])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GL_UNISTD_H_GETOPT$])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([getopt-gnu])
m4trace:configure.ac:4789: -1- gl_FUNC_GETOPT_POSIX
m4trace:configure.ac:4789: -1- gl_GETOPT_SUBSTITUTE_HEADER
m4trace:configure.ac:4789: -1- m4_pattern_allow([^__GETOPT_PREFIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GETOPT_H$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([getopt.c])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([getopt1.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_GETOPT
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_getenv], [_AC_CHECK_DECLS([getenv])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GL_UNISTD_H_GETOPT$])
m4trace:configure.ac:4789: -1- gl_GETTIME
m4trace:configure.ac:4789: -1- gl_TIMESPEC
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" gettimeofday"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_nanotime], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" nanotime"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_FUNC_GETTIMEOFDAY
m4trace:configure.ac:4789: -1- AC_C_RESTRICT
m4trace:configure.ac:4789: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^restrict$])
m4trace:configure.ac:4789: -1- gl_HEADER_SYS_TIME_H
m4trace:configure.ac:4789: -1- gl_HEADER_SYS_TIME_H_BODY
m4trace:configure.ac:4789: -1- gl_HEADER_SYS_TIME_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETTIMEOFDAY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_TIMEVAL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_TIME_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETTIMEOFDAY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRUCT_TIMEVAL$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([sys/time.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([sys/time.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([sys/time.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_SYS_TIME_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H$])
m4trace:configure.ac:4789: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_gettimeofday], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" gettimeofday"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_FUNC_GETTIMEOFDAY_CLOBBER
m4trace:configure.ac:4789: -1- gl_GETTIMEOFDAY_REPLACE_LOCALTIME
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GETTIMEOFDAY_CLOBBERS_LOCALTIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GETTIMEOFDAY_TIMEZONE$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([gettimeofday.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_GETTIMEOFDAY
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_TIMEB_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE__FTIME$])
m4trace:configure.ac:4789: -1- gl_SYS_TIME_MODULE_INDICATOR([gettimeofday])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([gettimeofday])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[gettimeofday]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([gettimeofday])
m4trace:configure.ac:4789: -1- gl_INTTYPES_INCOMPLETE
m4trace:configure.ac:4789: -1- gl_STDINT_H
m4trace:configure.ac:4789: -1- AC_TYPE_LONG_LONG_INT
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LONG_LONG_INT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_UNSIGNED_LONG_LONG_INT$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_wchar_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" wchar.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WCHAR_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_INTTYPES_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_TYPES_H$])
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([stdint.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([stdint.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_stdint_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" stdint.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([stdint.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_STDINT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDINT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STDINT_H$])
m4trace:configure.ac:4789: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:4789: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_INTTYPES_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_BITYPES_H$])
m4trace:configure.ac:4789: -1- gl_STDINT_TYPE_PROPERTIES
m4trace:configure.ac:4789: -1- gl_MULTIARCH
m4trace:configure.ac:4789: -1- m4_pattern_allow([^APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:4789: -1- gl_STDINT_BITSIZEOF([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:4789: -1- AC_COMPUTE_INT([result], [sizeof ($gltype) * CHAR_BIT], [gl_STDINT_INCLUDES
#include <limits.h>], [result=unknown])
m4trace:configure.ac:4789: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:4789: -1- m4_pattern_allow([^BITSIZEOF_PTRDIFF_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^BITSIZEOF_SIZE_T$])
m4trace:configure.ac:4789: -1- gl_STDINT_BITSIZEOF([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:4789: -1- AC_COMPUTE_INT([result], [sizeof ($gltype) * CHAR_BIT], [gl_STDINT_INCLUDES
#include <limits.h>], [result=unknown])
m4trace:configure.ac:4789: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:4789: -1- m4_pattern_allow([^BITSIZEOF_SIG_ATOMIC_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^BITSIZEOF_WCHAR_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^BITSIZEOF_WINT_T$])
m4trace:configure.ac:4789: -1- gl_CHECK_TYPES_SIGNED([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:4789: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGNED_SIG_ATOMIC_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGNED_WCHAR_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGNED_WINT_T$])
m4trace:configure.ac:4789: -1- gl_INTEGER_TYPE_SUFFIX([ptrdiff_t size_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:4789: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PTRDIFF_T_SUFFIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^SIZE_T_SUFFIX$])
m4trace:configure.ac:4789: -1- gl_INTEGER_TYPE_SUFFIX([sig_atomic_t wchar_t wint_t], [gl_STDINT_INCLUDES])
m4trace:configure.ac:4789: -1- gl_STDINT_INCLUDES
m4trace:configure.ac:4789: -1- m4_pattern_allow([^SIG_ATOMIC_T_SUFFIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^WCHAR_T_SUFFIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^WINT_T_SUFFIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^STDINT_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_STDINT_H], [test -n "$STDINT_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDINT_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDINT_H_FALSE])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" inttypes.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_INTTYPES_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_IMAXABS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_IMAXDIV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRTOIMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRTOUMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_IMAXABS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_IMAXDIV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRTOIMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRTOUMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRTOIMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRTOUMAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^INT32_MAX_LT_INTMAX_MAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^INT64_MAX_EQ_LONG_MAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PRI_MACROS_BROKEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PRIPTR_PREFIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UINT32_MAX_LT_UINTMAX_MAX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UINT64_MAX_EQ_ULONG_MAX$])
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([inttypes.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([inttypes.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_inttypes_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" inttypes.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([inttypes.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_INTTYPES_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H$])
m4trace:configure.ac:4789: -1- gl_LARGEFILE
m4trace:configure.ac:4789: -1- gl_FUNC_LSTAT
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([lstat.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_LSTAT
m4trace:configure.ac:4789: -1- gl_SYS_STAT_MODULE_INDICATOR([lstat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([lstat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[lstat]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([lstat])
m4trace:configure.ac:4789: -1- gl_FUNC_MEMRCHR
m4trace:configure.ac:4789: -1- gl_HEADER_STRING_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FFSL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FFSLL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MEMCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MEMMEM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MEMPCPY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MEMRCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RAWMEMCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STPCPY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STPNCPY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRCHRNUL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRDUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRNCAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRNDUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRNLEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRPBRK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRSEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRSTR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRCASESTR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRTOK_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSLEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSNLEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSRCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSSTR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSCASECMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSNCASECMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSPCASECMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSCASESTR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSCSPN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSPBRK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSSPN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSSEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MBSTOK_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRERROR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRERROR_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRSIGNAL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRVERSCMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MBSLEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FFSL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FFSLL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MEMCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_MEMMEM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MEMPCPY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_RAWMEMCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STPCPY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STPNCPY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRCHRNUL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRDUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRNDUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRNLEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRPBRK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRSEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRCASESTR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRTOK_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRERROR_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRSIGNAL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRVERSCMP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MEMCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MEMMEM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STPNCPY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRDUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRSTR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRCASESTR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRCHRNUL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRERROR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRERROR_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRNCAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRNDUP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRNLEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRSIGNAL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STRTOK_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^UNDEFINE_STRTOK_R$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_memrchr], [_AC_CHECK_DECLS([memrchr])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_MEMRCHR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_MEMRCHR$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([memrchr.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_MEMRCHR
m4trace:configure.ac:4789: -1- gl_STRING_MODULE_INDICATOR([memrchr])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([memrchr])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[memrchr]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([memrchr])
m4trace:configure.ac:4789: -1- gl_FUNC_MKOSTEMP
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_mkostemp], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" mkostemp"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([mkostemp.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_MKOSTEMP
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR([mkostemp])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKOSTEMP$])
m4trace:configure.ac:4789: -1- gl_STDLIB_MODULE_INDICATOR([mkostemp])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mkostemp])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[mkostemp]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([mkostemp])
m4trace:configure.ac:4789: -1- gl_FUNC_MKTIME
m4trace:configure.ac:4789: -1- gl_HEADER_TIME_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_MKTIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_NANOSLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STRPTIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_TIMEGM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_TIME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_NANOSLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRPTIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_TIMEGM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_LOCALTIME_R$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_MKTIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_NANOSLEEP$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_TIMEGM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETTIMEOFDAY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GMTIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_LOCALTIME$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_alarm], [_AC_CHECK_DECLS([alarm])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_ALARM$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([mktime.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_MKTIME
m4trace:configure.ac:4789: -1- gl_TIME_MODULE_INDICATOR([mktime])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([mktime])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[mktime]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([mktime])
m4trace:configure.ac:4789: -1- gl_MULTIARCH
m4trace:configure.ac:4789: -1- gl_FUNC_PIPE2
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_pipe2], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pipe2"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([pipe2])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pipe2])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[pipe2]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([pipe2])
m4trace:configure.ac:4789: -1- gl_FUNC_PSELECT
m4trace:configure.ac:4789: -1- gl_HEADER_SYS_SELECT
m4trace:configure.ac:4789: -1- gl_SYS_SELECT_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PSELECT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SELECT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PSELECT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PSELECT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_SELECT$])
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([sys/select.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([sys/select.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/select.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([sys/select.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_SYS_SELECT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_SELECT_H$])
m4trace:configure.ac:4789: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_pselect], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pselect"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([pselect.c])
m4trace:configure.ac:4789: -1- gl_SYS_SELECT_MODULE_INDICATOR([pselect])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pselect])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[pselect]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([pselect])
m4trace:configure.ac:4789: -1- gl_FUNC_PTHREAD_SIGMASK
m4trace:configure.ac:4789: -1- gl_SIGNAL_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PTHREAD_SIGMASK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RAISE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SIGNAL_H_SIGPIPE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SIGPROCMASK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SIGACTION$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_POSIX_SIGNALBLOCKING$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_RAISE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGINFO_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGACTION$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_SIGACTION_SA_SIGACTION$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_TYPE_VOLATILE_SIG_ATOMIC_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGHANDLER_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PTHREAD_SIGMASK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_RAISE$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_pthread_sigmask], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" pthread_sigmask"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_THREADLIB
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIB_PTHREAD_SIGMASK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PTHREAD_SIGMASK_INEFFECTIVE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PTHREAD_SIGMASK_FAILS_WITH_ERRNO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PTHREAD_SIGMASK_UNBLOCK_BUG$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([pthread_sigmask.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_PTHREAD_SIGMASK
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PTHREAD_SIGMASK$])
m4trace:configure.ac:4789: -1- gl_SIGNAL_MODULE_INDICATOR([pthread_sigmask])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([pthread_sigmask])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[pthread_sigmask]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([pthread_sigmask])
m4trace:configure.ac:4789: -1- gl_FUNC_PUTENV
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([putenv.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_PUTENV
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL__PUTENV$])
m4trace:configure.ac:4789: -1- gl_STDLIB_MODULE_INDICATOR([putenv])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([putenv])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[putenv]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([putenv])
m4trace:configure.ac:4789: -1- gl_FUNC_ACL
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_fchmod], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" fchmod"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_ACL_H$])
m4trace:configure.ac:4789: -1- gl_ACL_GET_FILE([use_acl=1], [])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACL_LIBACL_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACL_ENTRIES$])
m4trace:configure.ac:4789: -1- gl_LIBOBJ([$ac_func])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACL_FIRST_ENTRY$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACL_TYPE_EXTENDED$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FACL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACL_TRIVIAL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETACL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACLV_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACLX_GET$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STATACL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ACLSORT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIB_ACL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^USE_ACL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^USE_ACL$])
m4trace:configure.ac:4789: -1- gl_FUNC_READLINK
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_readlink], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" readlink"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^READLINK_TRAILING_SLASH_BUG$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([readlink.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_READLINK
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([readlink])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readlink])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[readlink]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([readlink])
m4trace:configure.ac:4789: -1- gl_FUNC_READLINKAT
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_readlinkat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" readlinkat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([readlinkat.c])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([readlinkat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([readlinkat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[readlinkat]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([readlinkat])
m4trace:configure.ac:4789: -1- gl_FUNC_SIG2STR
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIG2STR$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([sig2str.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_SIG2STR
m4trace:configure.ac:4789: -1- gl_SIGNAL_H
m4trace:configure.ac:4789: -1- gl_CHECK_TYPE_SIGSET_T
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SIGSET_T$])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([signal.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([signal.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([signal.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_SIGNAL_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H$])
m4trace:configure.ac:4789: -1- AC_TYPE_UID_T
m4trace:configure.ac:4789: -1- gl_TYPE_SOCKLEN_T
m4trace:configure.ac:4789: -1- gl_CHECK_SOCKET_HEADERS
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WS2TCPIP_H$])
m4trace:configure.ac:4789: -1- gl_SOCKET_HEADERS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^socklen_t$])
m4trace:configure.ac:4789: -1- gt_TYPE_SSIZE_T
m4trace:configure.ac:4789: -1- m4_pattern_allow([^ssize_t$])
m4trace:configure.ac:4789: -1- gl_STAT_TIME
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_TV_NSEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^TYPEOF_STRUCT_STAT_ST_ATIM_IS_STRUCT_TIMESPEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMESPEC_TV_NSEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIMENSEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_ATIM_ST__TIM_TV_NSEC$])
m4trace:configure.ac:4789: -1- gl_STAT_BIRTHTIME
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIMENSEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_STAT_ST_BIRTHTIM_TV_NSEC$])
m4trace:configure.ac:4789: -1- gl_STDALIGN_H
m4trace:configure.ac:4789: -1- m4_pattern_allow([^STDALIGN_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_STDALIGN_H], [test -n "$STDALIGN_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDALIGN_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDALIGN_H_FALSE])
m4trace:configure.ac:4789: -1- gl_STDARG_H
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([stdarg.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([stdarg.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([stdarg.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_STDARG_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDARG_H$])
m4trace:configure.ac:4789: -1- gl_CACHE_VAL_SILENT([gl_cv_func___va_copy], [
        AC_COMPILE_IFELSE(
          [AC_LANG_PROGRAM(
             [[#include <stdarg.h>]],
             [[
#ifndef __va_copy
error, bail out
#endif
             ]])],
          [gl_cv_func___va_copy=yes],
          [gl_cv_func___va_copy=no])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^va_copy$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^va_copy$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^STDARG_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_STDARG_H], [test -n "$STDARG_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDARG_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDARG_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDARG_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDARG_H_FALSE])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_STDARG_H$])
m4trace:configure.ac:4789: -1- AM_STDBOOL_H
m4trace:configure.ac:4789: -1- AC_CHECK_HEADER_STDBOOL
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^STDBOOL_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_STDBOOL_H], [test -n "$STDBOOL_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDBOOL_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDBOOL_H_FALSE])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE__BOOL$])
m4trace:configure.ac:4789: -1- gl_STDDEF_H
m4trace:configure.ac:4789: -1- gl_STDDEF_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_NULL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:4789: -1- gt_TYPE_WCHAR_T
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WCHAR_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^STDDEF_H$])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([GL_GENERATE_STDDEF_H], [test -n "$STDDEF_H"])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GL_GENERATE_STDDEF_H_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([GL_GENERATE_STDDEF_H_FALSE])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([stddef.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([stddef.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([stddef.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_STDDEF_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDDEF_H$])
m4trace:configure.ac:4789: -1- gl_STDINT_H
m4trace:configure.ac:4789: -1- gl_STDIO_H
m4trace:configure.ac:4789: -1- gl_STDIO_H_DEFAULTS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_DPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FCLOSE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FDOPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FFLUSH$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FGETC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FGETS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FOPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FPRINTF_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FPURGE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FPUTC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FPUTS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FREAD$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FREOPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FSEEK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FSEEKO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FTELL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FTELLO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FWRITE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETCHAR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETDELIM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_GETLINE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_OBSTACK_PRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_OBSTACK_PRINTF_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PCLOSE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PERROR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_POPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PRINTF_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PUTC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PUTCHAR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_PUTS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_REMOVE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RENAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_RENAMEAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SNPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SPRINTF_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STDIO_H_NONBLOCKING$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_STDIO_H_SIGPIPE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_TMPFILE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VASPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VFSCANF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VSCANF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VDPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VFPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VFPRINTF_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VPRINTF_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VSNPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_VSPRINTF_POSIX$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FPURGE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FSEEKO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_FTELLO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETDELIM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_OBSTACK_PRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_SNPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_VSNPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FSEEKO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_FTELLO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_PCLOSE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_POPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_RENAMEAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_VASPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_VDPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_DPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FCLOSE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FDOPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FFLUSH$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FOPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FPURGE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FREOPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FSEEK$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FSEEKO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FTELL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FTELLO$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETDELIM$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_GETLINE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_OBSTACK_PRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PERROR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_POPEN$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_PRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_REMOVE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_RENAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_RENAMEAT$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_SNPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_SPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STDIO_READ_FUNCS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_STDIO_WRITE_FUNCS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_TMPFILE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_VASPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_VDPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_VFPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_VPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_VSNPRINTF$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_VSPRINTF$])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([stdio.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([stdio.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([stdio.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_STDIO_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDIO_H$])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR([fscanf])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_FSCANF$])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR([scanf])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GNULIB_SCANF$])
m4trace:configure.ac:4789: -1- gl_STDLIB_H
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([stdlib.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([stdlib.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([stdlib.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_STDLIB_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STDLIB_H$])
m4trace:configure.ac:4789: -1- gl_FUNC_GNU_STRFTIME
m4trace:configure.ac:4789: -1- gl_FUNC_STRFTIME
m4trace:configure.ac:4789: -1- m4_pattern_allow([^TM_IN_SYS_TIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_TM_TM_ZONE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_TM_ZONE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_TZNAME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_TZNAME$])
m4trace:configure.ac:4789: -1- gl_TM_GMTOFF
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_TM_GMTOFF$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_tzset], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" tzset"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^my_strftime$])
m4trace:configure.ac:4789: -1- gl_HEADER_STRING_H
m4trace:configure.ac:4789: -1- gl_HEADER_STRING_H_BODY
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([string.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([string.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([string.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_STRING_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_STRING_H$])
m4trace:configure.ac:4789: -1- gl_FUNC_STRTOIMAX
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_strtoimax], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" strtoimax"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_strtoimax], [_AC_CHECK_DECLS([strtoimax])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRTOIMAX$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([strtoimax.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_STRTOIMAX
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRTOLL$])
m4trace:configure.ac:4789: -1- gl_INTTYPES_MODULE_INDICATOR([strtoimax])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoimax])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[strtoimax]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_FUNC_STRTOUMAX
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_strtoumax], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" strtoumax"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_strtoumax], [_AC_CHECK_DECLS([strtoumax])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRTOUMAX$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([strtoumax.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_STRTOUMAX
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_STRTOULL$])
m4trace:configure.ac:4789: -1- gl_INTTYPES_MODULE_INDICATOR([strtoumax])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoumax])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[strtoumax]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_FUNC_SYMLINK
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_symlink], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" symlink"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([symlink.c])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([symlink])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([symlink])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[symlink]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([symlink])
m4trace:configure.ac:4789: -1- gl_HEADER_SYS_SELECT
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([sys/select.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([sys/select.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_select_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/select.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([sys/select.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_SYS_SELECT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_SYS_SELECT_H$])
m4trace:configure.ac:4789: -1- gl_PREREQ_SYS_H_WINSOCK2
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_socket_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/socket.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WINSOCK2_H$])
m4trace:configure.ac:4789: -1- AC_PROG_MKDIR_P
m4trace:configure.ac:4789: -1- gl_HEADER_SYS_STAT_H
m4trace:configure.ac:4789: -1- m4_pattern_allow([^STAT_MACROS_BROKEN$])
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([sys/stat.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([sys/stat.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_stat_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/stat.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([sys/stat.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_SYS_STAT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^WINDOWS_64_BIT_ST_SIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^_GL_WINDOWS_64_BIT_ST_SIZE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^nlink_t$])
m4trace:configure.ac:4789: -1- AC_PROG_MKDIR_P
m4trace:configure.ac:4789: -1- gl_HEADER_SYS_TIME_H
m4trace:configure.ac:4789: -1- AC_PROG_MKDIR_P
m4trace:configure.ac:4789: -1- gl_HEADER_TIME_H
m4trace:configure.ac:4789: -1- gl_HEADER_TIME_H_BODY
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS([time.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([time.h], [assume])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([time.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_TIME_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_TIME_H$])
m4trace:configure.ac:4789: -1- gl_CHECK_TYPE_STRUCT_TIMESPEC
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^SYS_TIME_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^PTHREAD_H_DEFINES_STRUCT_TIMESPEC$])
m4trace:configure.ac:4789: -1- gl_TIME_R
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_LOCALTIME_R$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_localtime_r], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" localtime_r"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([time_r.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_TIME_R
m4trace:configure.ac:4789: -1- gl_TIME_MODULE_INDICATOR([time_r])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([time_r])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[time_r]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([time_r])
m4trace:configure.ac:4789: -1- gl_TIMER_TIME
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIB_TIMER_TIME$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_TIMER_SETTIME$])
m4trace:configure.ac:4789: -1- gl_TIMESPEC
m4trace:configure.ac:4789: -1- gl_UNISTD_H
m4trace:configure.ac:4789: -1- gl_CHECK_NEXT_HEADERS([unistd.h])
m4trace:configure.ac:4789: -1- gl_NEXT_HEADERS_INTERNAL([unistd.h], [check])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_ABSOLUTE_HEADER_ONE([unistd.h])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_UNISTD_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^NEXT_AS_FIRST_DIRECTIVE_UNISTD_H$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_UNISTD_H$])
m4trace:configure.ac:4789: -1- gl_TYPE_OFF_T
m4trace:configure.ac:4789: -1- m4_pattern_allow([^WINDOWS_64_BIT_OFF_T$])
m4trace:configure.ac:4789: -1- gl_FUNC_UNSETENV
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Check_Decl_unsetenv], [_AC_CHECK_DECLS([unsetenv])])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_DECL_UNSETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_UNSETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^VOID_UNSETENV$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([unsetenv.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_UNSETENV
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_unistd_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" unistd.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_STDLIB_MODULE_INDICATOR([unsetenv])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([unsetenv])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[unsetenv]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([unsetenv])
m4trace:configure.ac:4789: -1- gl_UTIMENS
m4trace:configure.ac:4789: -1- gl_FUNC_UTIMES
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_WORKING_UTIMES$])
m4trace:configure.ac:4789: -1- gl_CHECK_TYPE_STRUCT_UTIMBUF
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_time_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/time.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_utime_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" utime.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRUCT_UTIMBUF$])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_futimes], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" futimes"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_futimesat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" futimesat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_futimens], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" futimens"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_utimensat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" utimensat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_lutimes], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lutimes"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^FUTIMESAT_NULL_BUG$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([openat-proc.c])
m4trace:configure.ac:4789: -1- gl_FUNC_EUIDACCESS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_EUIDACCESS$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([euidaccess.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_EUIDACCESS
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_faccessat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" faccessat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_LIBGEN_H$])
m4trace:configure.ac:4789: -1- AC_FUNC_GETGROUPS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GETGROUPS_T$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIB_EACCESS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_EACCESS$])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([euidaccess])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([euidaccess])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[euidaccess]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([euidaccess])
m4trace:configure.ac:4789: -1- gl_FUNC_GETDTABLESIZE
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_getdtablesize], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" getdtablesize"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([getdtablesize.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_GETDTABLESIZE
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([getdtablesize])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getdtablesize])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[getdtablesize]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([getdtablesize])
m4trace:configure.ac:4789: -1- gl_FUNC_GETGROUPS
m4trace:configure.ac:4789: -1- AC_FUNC_GETGROUPS
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_GETGROUPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^GETGROUPS_ZERO_BUG$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([getgroups.c])
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([getgroups])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([getgroups])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[getgroups]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([getgroups])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIBINTL$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LTLIBINTL$])
m4trace:configure.ac:4789: -1- gl_FUNC_GROUP_MEMBER
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([group-member.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_GROUP_MEMBER
m4trace:configure.ac:4789: -1- gl_UNISTD_MODULE_INDICATOR([group-member])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([group-member])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[group-member]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([group-member])
m4trace:configure.ac:4789: -1- gl_PATHMAX
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Header_sys_param_h], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_header_list], [" sys/param.h"])])
_AC_HEADERS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_FUNC_SECURE_GETENV
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_secure_getenv], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" secure_getenv"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([secure_getenv.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_SECURE_GETENV
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE___SECURE_GETENV$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_ISSETUGID$])
m4trace:configure.ac:4789: -1- gl_STDLIB_MODULE_INDICATOR([secure_getenv])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([secure_getenv])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[secure_getenv]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([secure_getenv])
m4trace:configure.ac:4789: -1- gl_FUNC_STAT
m4trace:configure.ac:4789: -1- AC_DEFUN([_AC_Func_lstat], [m4_divert_text([INIT_PREPARE], [AS_VAR_APPEND([ac_func_list], [" lstat"])])
_AC_FUNCS_EXPANSION])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FUNC_STAT_DIR$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^REPLACE_FUNC_STAT_FILE$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([stat.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_STAT
m4trace:configure.ac:4789: -1- gl_SYS_STAT_MODULE_INDICATOR([stat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([stat])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[stat]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([stat])
m4trace:configure.ac:4789: -1- gl_FUNC_STRTOLL
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRTOLL$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([strtoll.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_STRTOLL
m4trace:configure.ac:4789: -1- gl_STDLIB_MODULE_INDICATOR([strtoll])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoll])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[strtoll]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([strtoll])
m4trace:configure.ac:4789: -1- gl_FUNC_STRTOULL
m4trace:configure.ac:4789: -1- m4_pattern_allow([^HAVE_STRTOULL$])
m4trace:configure.ac:4789: -1- gl_LIBSOURCES([strtoull.c])
m4trace:configure.ac:4789: -1- gl_PREREQ_STRTOULL
m4trace:configure.ac:4789: -1- gl_STDLIB_MODULE_INDICATOR([strtoull])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE([strtoull])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_SET_VARIABLE_AUX([GNULIB_[]m4_translit([[strtoull]],
                          [abcdefghijklmnopqrstuvwxyz./-],
                          [ABCDEFGHIJKLMNOPQRSTUVWXYZ___])], [gl_MODULE_INDICATOR_CONDITION])
m4trace:configure.ac:4789: -1- gl_MODULE_INDICATOR_FOR_TESTS([strtoull])
m4trace:configure.ac:4789: -1- gl_FUNC_GEN_TEMPNAME
m4trace:configure.ac:4789: -1- gl_PREREQ_TEMPNAME
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_260941c0e5dc67ec9e87d1fb321c300b], [$gl_gnulib_enabled_260941c0e5dc67ec9e87d1fb321c300b])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_260941c0e5dc67ec9e87d1fb321c300b_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_260941c0e5dc67ec9e87d1fb321c300b_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_260941c0e5dc67ec9e87d1fb321c300b_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_260941c0e5dc67ec9e87d1fb321c300b_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_dosname], [$gl_gnulib_enabled_dosname])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_dosname_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_dosname_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_dosname_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_dosname_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_euidaccess], [$gl_gnulib_enabled_euidaccess])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_euidaccess_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_euidaccess_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_euidaccess_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_euidaccess_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_getdtablesize], [$gl_gnulib_enabled_getdtablesize])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_getdtablesize_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_getdtablesize_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_getdtablesize_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_getdtablesize_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_getgroups], [$gl_gnulib_enabled_getgroups])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_getgroups_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_getgroups_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_getgroups_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_getgroups_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_be453cec5eecf5731a274f2de7f2db36], [$gl_gnulib_enabled_be453cec5eecf5731a274f2de7f2db36])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_be453cec5eecf5731a274f2de7f2db36_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_be453cec5eecf5731a274f2de7f2db36_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_be453cec5eecf5731a274f2de7f2db36_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_be453cec5eecf5731a274f2de7f2db36_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_a9786850e999ae65a836a6041e8e5ed1], [$gl_gnulib_enabled_a9786850e999ae65a836a6041e8e5ed1])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_a9786850e999ae65a836a6041e8e5ed1_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_a9786850e999ae65a836a6041e8e5ed1_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_a9786850e999ae65a836a6041e8e5ed1_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_a9786850e999ae65a836a6041e8e5ed1_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_03e0aaad4cb89ca757653bd367a6ccb7], [$gl_gnulib_enabled_03e0aaad4cb89ca757653bd367a6ccb7])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_03e0aaad4cb89ca757653bd367a6ccb7_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_03e0aaad4cb89ca757653bd367a6ccb7_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_03e0aaad4cb89ca757653bd367a6ccb7_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_03e0aaad4cb89ca757653bd367a6ccb7_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_pathmax], [$gl_gnulib_enabled_pathmax])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_pathmax_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_pathmax_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_pathmax_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_pathmax_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_6099e9737f757db36c47fa9d9f02e88c], [$gl_gnulib_enabled_6099e9737f757db36c47fa9d9f02e88c])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_6099e9737f757db36c47fa9d9f02e88c_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_6099e9737f757db36c47fa9d9f02e88c_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_6099e9737f757db36c47fa9d9f02e88c_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_6099e9737f757db36c47fa9d9f02e88c_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_secure_getenv], [$gl_gnulib_enabled_secure_getenv])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_secure_getenv_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_secure_getenv_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_secure_getenv_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_secure_getenv_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_stat], [$gl_gnulib_enabled_stat])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_stat_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_stat_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_stat_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_stat_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_strtoll], [$gl_gnulib_enabled_strtoll])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_strtoll_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_strtoll_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_strtoll_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_strtoll_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_strtoull], [$gl_gnulib_enabled_strtoull])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_strtoull_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_strtoull_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_strtoull_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_strtoull_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_tempname], [$gl_gnulib_enabled_tempname])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_tempname_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_tempname_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_tempname_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_tempname_FALSE])
m4trace:configure.ac:4789: -1- AM_CONDITIONAL([gl_GNULIB_ENABLED_682e609604ccaac6be382e4ee3a4eaec], [$gl_gnulib_enabled_682e609604ccaac6be382e4ee3a4eaec])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_682e609604ccaac6be382e4ee3a4eaec_TRUE$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_682e609604ccaac6be382e4ee3a4eaec_FALSE$])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_682e609604ccaac6be382e4ee3a4eaec_TRUE])
m4trace:configure.ac:4789: -1- _AM_SUBST_NOTMAKE([gl_GNULIB_ENABLED_682e609604ccaac6be382e4ee3a4eaec_FALSE])
m4trace:configure.ac:4789: -1- gl_COMMON
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gltests_WITNESS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^gl_GNULIB_ENABLED_])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIBGNU_LIBDEPS$])
m4trace:configure.ac:4789: -1- m4_pattern_allow([^LIBGNU_LTLIBDEPS$])
m4trace:configure.ac:4859: -1- m4_pattern_allow([^LD_SWITCH_SYSTEM_TEMACS$])
m4trace:configure.ac:4875: -1- m4_pattern_allow([^ADDSECTION$])
m4trace:configure.ac:4876: -1- m4_pattern_allow([^TEMACS_POST_LINK$])
m4trace:configure.ac:4877: -1- m4_pattern_allow([^EMACS_HEAPSIZE$])
m4trace:configure.ac:4881: -1- m4_pattern_allow([^HAVE_WINDOW_SYSTEM$])
m4trace:configure.ac:4885: -1- m4_pattern_allow([^WINDOW_SYSTEM_OBJ$])
m4trace:configure.ac:5040: -1- m4_pattern_allow([^ns_check_file$])
m4trace:configure.ac:5079: -1- m4_pattern_allow([^SUBDIR_MAKEFILES_IN$])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:5106: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:5106: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:5106: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^gl_LIBOBJS$])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^gl_LTLIBOBJS$])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^gltests_LIBOBJS$])
m4trace:configure.ac:5106: -1- m4_pattern_allow([^gltests_LTLIBOBJS$])
m4trace:configure.ac:5106: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:5106: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
